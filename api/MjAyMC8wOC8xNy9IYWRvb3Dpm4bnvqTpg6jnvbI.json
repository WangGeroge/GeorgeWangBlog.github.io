{"title":"Hadoop集群部署","date":"2020-08-17T08:32:33.000Z","date_formatted":{"ll":"2020年8月17日","L":"2020/08/17","MM-DD":"08-17"},"link":"2020/08/17/Hadoop集群部署","comments":true,"tags":["Hadoop"],"categories":["大数据"],"updated":"2020-08-21T10:27:45.211Z","content":"<hr>\n<h3 id=\"一、前提条件：\">一、前提条件：<a href=\"2020/08/17/Hadoop集群部署#一、前提条件：\"></a></h3><h4 id=\"1️⃣-版本选择问题\">1️⃣ 版本选择问题<a href=\"2020/08/17/Hadoop集群部署#1️⃣-版本选择问题\"></a></h4><ul>\n<li>考虑因素：<ul>\n<li>环境稳定程度</li>\n<li>安装难易度</li>\n<li>所考虑因素：<ul>\n<li>是否为开源软件，即是否免费。</li>\n<li>是否有稳定版，这个一般软件官方网站会给出说明。</li>\n<li>是否经实践验证，这个可通过检查是否有一些大点的公司已经在生产环境中使用知道</li>\n<li>是否有强大的社区支持，当出现一个问题时，能够通过社区、论坛等网络资源快速获取解决方法</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>考虑到大数据平台高效的部署和安装，中心化的配置管理，使用过程中的稳定性、兼容性、扩展性，以及未来较为简单、高效的运维，遇到问题低廉的解决成本。建议使用第三方发行版本，其中在第三发发行版中，国内应用较多的是Cloudera的CDH。</li>\n</ul>\n<h4 id=\"2️⃣-环境准备\">2️⃣ 环境准备<a href=\"2020/08/17/Hadoop集群部署#2️⃣-环境准备\"></a></h4><ul>\n<li>CDH相关离线文件</li>\n<li>Liunx三台服务器</li>\n<li></li>\n</ul>\n<h4 id=\"3️⃣-技术选型\">3️⃣ 技术选型<a href=\"2020/08/17/Hadoop集群部署#3️⃣-技术选型\"></a></h4><ul>\n<li>CDH版本：5.16.1</li>\n<li>Linux ：centos7</li>\n<li>jdk：1.8</li>\n<li>MySQL：5.7</li>\n<li>opentsdb</li>\n<li>granfana</li>\n</ul>\n<p>4️⃣</p>\n<h3 id=\"二、服务器准备\">二、服务器准备<a href=\"2020/08/17/Hadoop集群部署#二、服务器准备\"></a></h3><div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th>ip地址</th>\n<th>主机名</th>\n<th>角色</th>\n<th>配置</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Mip1</td>\n<td>hadoop</td>\n<td>主</td>\n<td>2核16G</td>\n<td>namenode、ResourceManager、zookeeper、HMaster、Hive</td>\n</tr>\n<tr>\n<td>Sip1</td>\n<td>hadoop1</td>\n<td>从</td>\n<td>2核16G</td>\n<td>datanode、NodeManager、zookeeper、HRegionServer、Spark</td>\n</tr>\n<tr>\n<td>Sip2</td>\n<td>hadoop2</td>\n<td>从</td>\n<td>2核16G</td>\n<td>datanode、NodeManager、zookeeper、HRegionServer、Spark</td>\n</tr>\n</tbody></table></div></div>\n<h3 id=\"三、CDH安装文件\">三、CDH安装文件<a href=\"2020/08/17/Hadoop集群部署#三、CDH安装文件\"></a></h3><blockquote>\n<p>1、cloudera manager包 </p>\n<p><a href=\"https://archive.cloudera.com/cdh6/6.3.2/parcels/\" target=\"_blank\" rel=\"noopener\">https://archive.cloudera.com/cdh6/6.3.2/parcels/</a></p>\n<p>①<a href=\"https://archive.cloudera.com/cdh6/6.3.2/parcels/CDH-6.3.2-1.cdh6.3.2.p0.1605554-el7.parcel\" target=\"_blank\" rel=\"noopener\">CDH-6.3.2-1.cdh6.3.2.p0.1605554-el7.parcel</a></p>\n<p>②<a href=\"https://archive.cloudera.com/cdh6/6.3.2/parcels/CDH-6.3.2-1.cdh6.3.2.p0.1605554-el7.parcel.sha1\" target=\"_blank\" rel=\"noopener\"> CDH-6.3.2-1.cdh6.3.2.p0.1605554-el7.parcel.sha1</a></p>\n<p>③ <a href=\"https://archive.cloudera.com/cdh6/6.3.2/parcels/manifest.json\" target=\"_blank\" rel=\"noopener\">manifest.json</a></p>\n<p>官方文档：</p>\n<pre class=\" language-markdown\"><code class=\"language-markdown\"><span class=\"token title important\"><span class=\"token punctuation\">#</span> cloudera对JAVA mysql 操作系统均有要求 详情可以参考下面官方文档</span>\nhttps://docs.cloudera.com/documentation/enterprise/release-notes/topics/rn<span class=\"token italic\"><span class=\"token punctuation\">_</span>consolidated<span class=\"token punctuation\">_</span></span>pcm.html#cdh<span class=\"token italic\"><span class=\"token punctuation\">_</span>cm<span class=\"token punctuation\">_</span></span>supported<span class=\"token italic\"><span class=\"token punctuation\">_</span>os\nhttps://docs.cloudera.com/documentation/enterprise/release-notes/topics/rn<span class=\"token punctuation\">_</span></span>consolidated<span class=\"token italic\"><span class=\"token punctuation\">_</span>pcm.html#cdh<span class=\"token punctuation\">_</span></span>cm<span class=\"token italic\"><span class=\"token punctuation\">_</span>supported<span class=\"token punctuation\">_</span></span>db\nhttps://docs.cloudera.com/documentation/enterprise/release-notes/topics/rn<span class=\"token italic\"><span class=\"token punctuation\">_</span>consolidated<span class=\"token punctuation\">_</span></span>pcm.html#pcm_jdk</code></pre>\n</blockquote>\n<h3 id=\"四、开始安装前配置和预装软件\">四、开始安装前配置和预装软件<a href=\"2020/08/17/Hadoop集群部署#四、开始安装前配置和预装软件\"></a></h3><ul>\n<li><h5 id=\"安装jdk（每台都需安装）\"><a href=\"2020/08/17/Hadoop集群部署#安装jdk（每台都需安装）\" class=\"headerlink\" title=\"安装jdk（每台都需安装）\"></a>安装jdk（每台都需安装）</h5><ul>\n<li><h6 id=\"验证是否安装jdk-java-version\"><a href=\"2020/08/17/Hadoop集群部署#验证是否安装jdk-java-version\" class=\"headerlink\" title=\"验证是否安装jdk java -version\"></a>验证是否安装jdk java -version</h6></li>\n<li><h6 id=\"本地文件传入到服务器中\"><a href=\"2020/08/17/Hadoop集群部署#本地文件传入到服务器中\" class=\"headerlink\" title=\"本地文件传入到服务器中\"></a>本地文件传入到服务器中</h6></li>\n<li><h6 id=\"安装jdk\"><a href=\"2020/08/17/Hadoop集群部署#安装jdk\" class=\"headerlink\" title=\"安装jdk\"></a>安装jdk</h6><ul>\n<li><p>解压：<code>tar -zxvf jdk-8u181-linux-x64.tar.gz</code></p>\n</li>\n<li><p><code>ls</code></p>\n</li>\n<li><p>修改文件名：<code>mv jdk1.8.0_181 jdk1.8</code></p>\n</li>\n<li><p><font color=\"red\">※</font>创建java文件夹 <code>mkdir /usr/java</code></p>\n</li>\n<li><p>将jdk移动到新创建的java文件夹中 <code>mv jdk1.8 /usr/java</code></p>\n</li>\n<li><p>配置环境变量：<code>vi /etc/profile</code></p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\"># set java environment</span>\n<span class=\"token function\">export</span> JAVA_HOME<span class=\"token operator\">=</span>/usr/java/jdk1.8\n<span class=\"token function\">export</span> JRE_HOME<span class=\"token operator\">=</span><span class=\"token variable\">${JAVA_HOME}</span>/jre\n<span class=\"token function\">export</span> CLASSPATH<span class=\"token operator\">=</span>.:<span class=\"token variable\">${JAVA_HOME}</span>/lib:<span class=\"token variable\">${JRE_HOME}</span>/lib:<span class=\"token variable\">$CLASSPATH</span>\n<span class=\"token function\">export</span> JAVA_PATH<span class=\"token operator\">=</span><span class=\"token variable\">${JAVA_HOME}</span>/bin:<span class=\"token variable\">${JRE_HOME}</span>/bin\n<span class=\"token function\">export</span> PATH<span class=\"token operator\">=</span><span class=\"token variable\">$PATH</span><span class=\"token keyword\">:</span><span class=\"token variable\">${JAVA_PATH}</span></code></pre>\n</li>\n<li><p>环境变量立即生效 <code>source /etc/profile</code></p>\n</li>\n<li><p>验证是否生效  <code>java -version</code></p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><h5 id=\"修改服务器的有关配置（每台机器均需配置）\"><a href=\"2020/08/17/Hadoop集群部署#修改服务器的有关配置（每台机器均需配置）\" class=\"headerlink\" title=\"修改服务器的有关配置（每台机器均需配置）\"></a>修改服务器的有关配置（每台机器均需配置）</h5><ul>\n<li><h6 id=\"SSH无密码登录配置-所有节点相互免秘钥\"><a href=\"2020/08/17/Hadoop集群部署#SSH无密码登录配置-所有节点相互免秘钥\" class=\"headerlink\" title=\"SSH无密码登录配置(所有节点相互免秘钥)\"></a>SSH无密码登录配置(所有节点相互免秘钥)</h6><blockquote>\n<p><strong>思路</strong>：</p>\n<p>第一台机器生成秘钥文件id_rsa.pub，拷贝到其它机器，然后所有机器把此秘钥追加到自己的authorized_keys中，</p>\n<p>第二台机器生成秘钥文件id_rsa.pub，拷贝到其它机器，然后所有机器把此秘钥追加到自己的authorized_keys中，</p>\n<p>以此类推。</p>\n</blockquote>\n<ul>\n<li><p>生成秘钥文件</p>\n<ul>\n<li>ssh-keygen -t rsa</li>\n<li>cd /root/.ssh</li>\n<li>ls</li>\n</ul>\n</li>\n<li><p>追加到自己的authorized_keys中</p>\n<ul>\n<li>cat id_rsa.pub &gt;&gt; authorized_keys</li>\n</ul>\n</li>\n<li><p>赋权</p>\n<ul>\n<li>chmod 700 /root/.ssh</li>\n<li>chmod 600 authorized_keys</li>\n</ul>\n</li>\n<li><p>拷贝秘钥文件</p>\n<ul>\n<li>将s1，s2中的authorized_keys中的内容拷贝到m中的authorized_keys中</li>\n<li>scp /root/.ssh/authorized_keys root@Sip1:/root/.ssh/authorized_keys  将m中的秘钥添加到s1中</li>\n<li>scp /root/.ssh/authorized_keys root@Sip2:/root/.ssh/authorized_keys  将m中的秘钥添加到s2中</li>\n</ul>\n</li>\n<li><p>问题：</p>\n<p> ① ssh无法连接成功 read: Connection reset by peer</p>\n<ul>\n<li><p>echo “”&gt;authorized_keys  清空文件内容</p>\n</li>\n<li><p>通过 ssh -v localhost 仍然无法连接本机ssh</p>\n</li>\n<li><p>删除ssh  rm -rf .ssh</p>\n</li>\n<li><p>ssh_exchange_identification: read: Connection reset by peer</p>\n<ul>\n<li>通过 vi /etc/hosts.allow  </li>\n<li>修改 sshd配置  sshd:ALL ##允许所有ip主机均能连接本机</li>\n<li>保存</li>\n<li>再通过ssh root@ip试试能否可行</li>\n</ul>\n<p>② ping无法成功</p>\n<p><font color=\"red\">※</font>经核实，通过ping内网可完成服务器之间的互通，因此hosts文件均需使用内网信息</p>\n</li>\n<li><p>通过<code>ifconfig -a</code> 获取ip内网相关信息</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><h6 id=\"host修改\"><a href=\"2020/08/17/Hadoop集群部署#host修改\" class=\"headerlink\" title=\"host修改\"></a>host修改</h6><ul>\n<li><p>执行： vi /etc/hosts</p>\n</li>\n<li><p>添加ip以及集群名称：</p>\n<blockquote>\n<p>192.168.0.1 master</p>\n<p>192.168.0.2 slave1</p>\n<p>192.168.0.3 slave2</p>\n<p>scp /etc/hosts  <a href=\"mailto:root@192.168.0.2\" target=\"_blank\" rel=\"noopener\">root@192.168.0.2</a>:/etc/hosts</p>\n<p>scp /etc/hosts  <a href=\"mailto:root@192.168.0.3\" target=\"_blank\" rel=\"noopener\">root@192.168.0.3</a>:/etc/hosts</p>\n</blockquote>\n</li>\n<li><pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\"># 修改hostname</span>\nvim /etc/sysconfig/network\nNETWORKING<span class=\"token operator\">=</span>yes\nHOSTNAME<span class=\"token operator\">=</span>master\n<span class=\"token comment\" spellcheck=\"true\">#</span>\nvim /etc/hostname\n<span class=\"token comment\" spellcheck=\"true\"># 各自服务器修改服务名</span></code></pre>\n</li>\n<li><p>重启服务器 reboot</p>\n</li>\n</ul>\n</li>\n<li><h6 id=\"selinux关闭\"><a href=\"2020/08/17/Hadoop集群部署#selinux关闭\" class=\"headerlink\" title=\"selinux关闭\"></a>selinux关闭</h6><ul>\n<li>sestatus -v</li>\n</ul>\n</li>\n<li><h6 id=\"关闭防火墙\"><a href=\"2020/08/17/Hadoop集群部署#关闭防火墙\" class=\"headerlink\" title=\"关闭防火墙\"></a>关闭防火墙</h6><ul>\n<li>systemctl status firewalld</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><h5 id=\"NTP服务器设置\"><a href=\"2020/08/17/Hadoop集群部署#NTP服务器设置\" class=\"headerlink\" title=\"NTP服务器设置\"></a>NTP服务器设置</h5><ul>\n<li>查看当前时间  date -R</li>\n</ul>\n</li>\n<li><h5 id=\"安装MySQL-主\"><a href=\"2020/08/17/Hadoop集群部署#安装MySQL-主\" class=\"headerlink\" title=\"安装MySQL(主)\"></a>安装MySQL(主)</h5><ul>\n<li><h6 id=\"centos7自带的是mariadb，需要先卸载掉\"><a href=\"2020/08/17/Hadoop集群部署#centos7自带的是mariadb，需要先卸载掉\" class=\"headerlink\" title=\"centos7自带的是mariadb，需要先卸载掉\"></a>centos7自带的是mariadb，需要先卸载掉</h6><ul>\n<li>rpm -qa|grep mariadb</li>\n<li>rpm -e –nodeps mariadb-libs-5.5.64-1.el7.x86_64</li>\n</ul>\n</li>\n<li><h6 id=\"下载mysql，将其上传到服务器中\"><a href=\"2020/08/17/Hadoop集群部署#下载mysql，将其上传到服务器中\" class=\"headerlink\" title=\"下载mysql，将其上传到服务器中\"></a>下载mysql，将其上传到服务器中</h6><ul>\n<li><a href=\"http://dev.mysql.com/downloads/mysql/\" target=\"_blank\" rel=\"noopener\">MySQL官网</a> 选择版本</li>\n</ul>\n</li>\n<li><h6 id=\"将下载的mysql进行解压\"><a href=\"2020/08/17/Hadoop集群部署#将下载的mysql进行解压\" class=\"headerlink\" title=\"将下载的mysql进行解压\"></a>将下载的mysql进行解压</h6><ul>\n<li><p>下载tar包：(<strong><font color=\"red\">不用mysql8版本，使用mysql5.7</font></strong>)</p>\n<p>wget <a href=\"https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-8.0.11-linux-glibc2.12-x86_64.tar.gz\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-8.0.11-linux-glibc2.12-x86_64.tar.gz</a></p>\n</li>\n<li><p>创建文件夹</p>\n<ul>\n<li>mkdir /usr/local/mysql</li>\n</ul>\n</li>\n<li><p>移动tar包 (mysql-5.7.11-linux-glibc2.5-x86_64.tar.gz)</p>\n<ul>\n<li>mv mysql-8.0.11-linux-glibc2.12-x86_64.tar.gz /usr/local/mysql/mysql-8.0.11-linux-glibc2.12-x86_64.tar.gz</li>\n</ul>\n</li>\n<li><p>进入文件夹：cd /usr/local/mysql</p>\n</li>\n<li><p>解压： tar -zxvf mysql-8.0.11-linux-glibc2.12-x86_64.tar.gz</p>\n</li>\n<li><p>重命名： mv mysql-8.0.11-linux-glibc2.12-x86_64 mysql8.0</p>\n</li>\n<li><p>创建data文件夹 </p>\n<ul>\n<li>cd /usr/local/mysql/mysql8.0/</li>\n<li>mkdir ./data</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><h6 id=\"创建用户和用户组\"><a href=\"2020/08/17/Hadoop集群部署#创建用户和用户组\" class=\"headerlink\" title=\"创建用户和用户组\"></a>创建用户和用户组</h6><ul>\n<li>用户组： groupadd mysql</li>\n<li>用户：useradd -g mysql mysql</li>\n<li>授权：<ul>\n<li>chown -R mysql:mysql /usr/local/mysql</li>\n<li>chmod -R 755 /usr/local/mysql</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><h6 id=\"初始化数据库\"><a href=\"2020/08/17/Hadoop集群部署#初始化数据库\" class=\"headerlink\" title=\"初始化数据库\"></a>初始化数据库</h6><ul>\n<li>cd bin</li>\n<li>./mysqld –initialize –user=mysql –datadir=/usr/local/mysql/mysql8.0/data –basedir=/usr/local/mysql/mysql8.0</li>\n<li>得到临时密码： L3Hok!e#F3yP  i2yiwKW7?irs</li>\n</ul>\n</li>\n<li><p>进入mysql5/support-files </p>\n<ul>\n<li>修改配置文件路径 </li>\n<li>cp /usr/local/mysql/mysql5/my-default.cnf /etc/my.cnf</li>\n</ul>\n</li>\n<li><h6 id=\"编辑配置文件my-cnf，添加配置如下\"><a href=\"2020/08/17/Hadoop集群部署#编辑配置文件my-cnf，添加配置如下\" class=\"headerlink\" title=\"编辑配置文件my.cnf，添加配置如下\"></a>编辑配置文件my.cnf，添加配置如下</h6><pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\" spellcheck=\"true\">#  vi /etc/my.cnf</span>\n<span class=\"token punctuation\">[</span>mysqld<span class=\"token punctuation\">]</span>\ndatadir<span class=\"token operator\">=</span>/usr/local/mysql/mysql5/data\nport<span class=\"token operator\">=</span>3306\nsql_mode<span class=\"token operator\">=</span>NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES\nsymbolic-links<span class=\"token operator\">=</span>0\nmax_connections<span class=\"token operator\">=</span>600\ninnodb_file_per_table<span class=\"token operator\">=</span>1\nlower_case_table_names<span class=\"token operator\">=</span>1</code></pre>\n</li>\n<li><h6 id=\"建立MySQL服务\"><a href=\"2020/08/17/Hadoop集群部署#建立MySQL服务\" class=\"headerlink\" title=\"建立MySQL服务\"></a>建立MySQL服务</h6><ul>\n<li><p># 添加Mysql到系统服务<br>cp -a ./support-files/mysql.server /etc/init.d/mysql</p>\n</li>\n<li><p>chmod +x /etc/init.d/mysql<br>chkconfig –add mysql<br># 检查服务是否生效<br>chkconfig –list mysql</p>\n<img src=\"/2020/08/17/Hadoop%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/mysqlLogA.png\" alt=\"mysqlLogA\" style=\"zoom:50%;\">\n</li>\n<li><p>启动mysql服务</p>\n<ul>\n<li>service mysql start 或者 support-files/mysql.server start<ul>\n<li>./support-files/mysql.server:行239: my_print_defaults: 未找到命令</li>\n<li>原因：因为没有修改mysql的配置文件</li>\n<li>修改文件 vim support-files/mysql.server</li>\n</ul>\n</li>\n<li>service mysql status    –查看mysql的状态</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><h6 id=\"登录MySQL\"><a href=\"2020/08/17/Hadoop集群部署#登录MySQL\" class=\"headerlink\" title=\"登录MySQL\"></a>登录MySQL</h6><ul>\n<li><p>mysql -uroot -p</p>\n<ul>\n<li><p>-bash: mysql: 未找到命令</p>\n</li>\n<li><p>配置系统文件</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\"># set java environment</span>\n<span class=\"token function\">export</span> JAVA_HOME<span class=\"token operator\">=</span>/usr/java/jdk1.8\n<span class=\"token function\">export</span> JRE_HOME<span class=\"token operator\">=</span><span class=\"token variable\">${JAVA_HOME}</span>/jre\n<span class=\"token function\">export</span> MYSQL_HOME<span class=\"token operator\">=</span>/usr/local/mysql/mysql8.0\n<span class=\"token function\">export</span> CLASSPATH<span class=\"token operator\">=</span>.:<span class=\"token variable\">${JAVA_HOME}</span>/lib:<span class=\"token variable\">${JRE_HOME}</span>/lib:<span class=\"token variable\">$CLASSPATH</span>\n<span class=\"token function\">export</span> JAVA_PATH<span class=\"token operator\">=</span><span class=\"token variable\">${JAVA_HOME}</span>/bin:<span class=\"token variable\">${JRE_HOME}</span>/bin\n<span class=\"token function\">export</span> PATH<span class=\"token operator\">=</span><span class=\"token variable\">${MYSQL_HOME}</span>/bin:<span class=\"token variable\">$PATH</span><span class=\"token keyword\">:</span><span class=\"token variable\">${JAVA_PATH}</span></code></pre>\n</li>\n</ul>\n</li>\n<li><p>登录存在问题：</p>\n<ul>\n<li><p>ERROR 2002 (HY000): Can’t connect to local MySQL server through socket ‘/tmp/mysql.sock’ (2)</p>\n<ul>\n<li><p>有可能是 my.cnf 配置文件中设置了 [mysqld] 的参数 socket ，而没有设置[client]的参数socket</p>\n<p>mysql.sock 文件有什么用：</p>\n<p>mysql 支持 socket 和 TCP/IP 连接。那么 mysql.sock 这个文件有什么用呢？连接localhost通常通过一个Unix域套接字文件进行，一般是/tmp/mysql.sock。如果套接字文件被删除了，本地客户就不能连接。/tmp 文件夹属于临时文件，随时可能被删除。</p>\n</li>\n<li><p>MySQL将其放在/tmp目录，而linux将其放在/var/mysql目录。所以我们只需要创建一个软链接，输入以下两个命令即可：<br>如果/var/下没有mysql目录，则需创建</p>\n<p>创建目录：sudo mkdir /var/mysql</p>\n<p>创建软链接：sudo ln -s /tmp/mysql.sock /var/mysql/mysql.sock</p>\n<p>如果提示： ln: creating symbolic link <code>/data/mysqldata/mysql.sock&#39; to</code>/tmp/mysql.sock’: File exists<br>删除之前的mysql.sock文件</p>\n</li>\n<li><p>解决办法：</p>\n<ul>\n<li><p>创建软连接</p>\n</li>\n<li><p>my.cnf文件中添加client信息</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>mysqld<span class=\"token punctuation\">]</span>\ndatadir<span class=\"token operator\">=</span>/usr/local/mysql/mysql8.0/data\nport<span class=\"token operator\">=</span>3306\nsql_mode<span class=\"token operator\">=</span>NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES\nsymbolic-links<span class=\"token operator\">=</span>0\nmax_connections<span class=\"token operator\">=</span>600\ninnodb_file_per_table<span class=\"token operator\">=</span>1\nlower_case_table_names<span class=\"token operator\">=</span>1\nsocket<span class=\"token operator\">=</span>/var/mysql/mysql.sock\n<span class=\"token punctuation\">[</span>client<span class=\"token punctuation\">]</span>\nport<span class=\"token operator\">=</span>3306\nsocket<span class=\"token operator\">=</span>/var/mysql/mysql.sock</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><h6 id=\"登录成功后，修改临时密码\"><a href=\"2020/08/17/Hadoop集群部署#登录成功后，修改临时密码\" class=\"headerlink\" title=\"登录成功后，修改临时密码\"></a>登录成功后，修改临时密码</h6><pre class=\" language-mysql\"><code class=\"language-mysql\"> SET PASSWORD FOR 'root'@'localhost'= \"RootXXX\"</code></pre>\n</li>\n<li><h6 id=\"开放3306端口允许使用用户名root从任何主机连接到mysql服务器\"><a href=\"2020/08/17/Hadoop集群部署#开放3306端口允许使用用户名root从任何主机连接到mysql服务器\" class=\"headerlink\" title=\"开放3306端口允许使用用户名root从任何主机连接到mysql服务器\"></a>开放3306端口允许使用用户名root从任何主机连接到mysql服务器</h6><pre class=\" language-mysql\"><code class=\"language-mysql\">GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'RootXXXNEW' WITH GRANT OPTION;</code></pre>\n<ul>\n<li><p>ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘IDENTIFIED BY ‘RootXXXNEW’ WITH GRANT OPTION’ at line 1</p>\n</li>\n<li><p>MySQL8的使用方式不一样</p>\n<ul>\n<li><p>在 my.cnf 中 添加： <code>default_authentication_plugin=mysql_native_password</code></p>\n</li>\n<li><pre class=\" language-mysql\"><code class=\"language-mysql\">CREATE USER 'root'@'%' IDENTIFIED BY 'Root-NewXXX';//这个操作是mysql 8.0中得加的\nGRANT ALL PRIVILEGES ON *.* TO 'root'@'%'WITH GRANT OPTION;//任何远程主机都可以访问数据库 \nFLUSH PRIVILEGES; //需要输入次命令使修改生效 </code></pre>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><h6 id=\"建数据库-用于后边组件安装）\"><a href=\"2020/08/17/Hadoop集群部署#建数据库-用于后边组件安装）\" class=\"headerlink\" title=\"建数据库(用于后边组件安装）\"></a>建数据库(用于后边组件安装）</h6><pre class=\" language-mysql\"><code class=\"language-mysql\"># 集群监控数据库\ncreate database amon DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;\n# hive数据库\ncreate database hive DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;\n# oozie数据库\ncreate database oozie DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;\n# hue数据库\ncreate database hue DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;</code></pre>\n</li>\n</ul>\n</li>\n<li><h5 id=\"perl服务安装（全部节点）\"><a href=\"2020/08/17/Hadoop集群部署#perl服务安装（全部节点）\" class=\"headerlink\" title=\"perl服务安装（全部节点）\"></a>perl服务安装（全部节点）</h5><ul>\n<li>yum install perl</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"五、安装\">五、安装<a href=\"2020/08/17/Hadoop集群部署#五、安装\"></a></h3><ul>\n<li><h5 id=\"安装Cloudera-Manager和CDH（主机器）\"><a href=\"2020/08/17/Hadoop集群部署#安装Cloudera-Manager和CDH（主机器）\" class=\"headerlink\" title=\"安装Cloudera Manager和CDH（主机器）\"></a>安装Cloudera Manager和CDH（主机器）</h5><ul>\n<li><h6 id=\"将下载好的cloudera-manager-centos7-cm5-16-1-x86-64-tar-gz解压到主节点的-opt-解压出来的文件夹为cloudera与cm-5-16-1\"><a href=\"2020/08/17/Hadoop集群部署#将下载好的cloudera-manager-centos7-cm5-16-1-x86-64-tar-gz解压到主节点的-opt-解压出来的文件夹为cloudera与cm-5-16-1\" class=\"headerlink\" title=\"将下载好的cloudera-manager-centos7-cm5.16.1_x86_64.tar.gz解压到主节点的/opt,解压出来的文件夹为cloudera与cm-5.16.1\"></a>将下载好的cloudera-manager-centos7-cm5.16.1_x86_64.tar.gz解压到主节点的/opt,解压出来的文件夹为cloudera与cm-5.16.1</h6><ul>\n<li><pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token function\">tar</span> -axvf cloudera-manager-centos7-cm5.16.1_x86_64.tar.gz -C /opt</code></pre>\n</li>\n</ul>\n</li>\n<li><h6 id=\"将Parcels相关文件拷贝到相应文件夹中\"><a href=\"2020/08/17/Hadoop集群部署#将Parcels相关文件拷贝到相应文件夹中\" class=\"headerlink\" title=\"将Parcels相关文件拷贝到相应文件夹中\"></a>将Parcels相关文件拷贝到相应文件夹中</h6><pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token function\">cp</span> CDH-5.16.1-1.cdh5.16.1.p0.3-el7.parcel /opt/cloudera/parcel-repo/ \n<span class=\"token function\">cp</span> CDH-5.16.1-1.cdh5.16.1.p0.3-el7.parcel.sha /opt/cloudera/parcel-repo/ \n<span class=\"token function\">cp</span> manifest.json /opt/cloudera/parcel-repo/</code></pre>\n</li>\n<li><h6 id=\"修改-config-ini-，同步agent到所有节点中\"><a href=\"2020/08/17/Hadoop集群部署#修改-config-ini-，同步agent到所有节点中\" class=\"headerlink\" title=\"修改 config.ini ，同步agent到所有节点中\"></a>修改 config.ini ，同步agent到所有节点中</h6><ul>\n<li><p>vi /opt/cm-5.16.1/etc/cloudera-scm-agent/config.ini</p>\n</li>\n<li><p>修改 server_host = master</p>\n</li>\n<li><p>保存退出</p>\n</li>\n<li><p>将相关文件同步到各个节点中</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token function\">scp</span> -r /opt/cm-5.16.1  root@slave1:/opt/\n<span class=\"token function\">scp</span> -r /opt/cm-5.16.1  root@slave2:/opt/</code></pre>\n</li>\n</ul>\n</li>\n<li><h6 id=\"所有节点都建立-cloudera-scm-用户\"><a href=\"2020/08/17/Hadoop集群部署#所有节点都建立-cloudera-scm-用户\" class=\"headerlink\" title=\"所有节点都建立 cloudera-scm 用户\"></a>所有节点都建立 cloudera-scm 用户</h6><pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token function\">useradd</span> --system --home<span class=\"token operator\">=</span>/opt/cm-5.16.1/run/cloudera-scm-server/ --no-create-home --shell<span class=\"token operator\">=</span>/bin/false --comment <span class=\"token string\">\"Cloudera SCM User\"</span> cloudera-scm</code></pre>\n<ul>\n<li><p><font color=\"red\">※</font>如果是在以前的系统上操作的话，例如，以前安装的是CDH5.13.x，现在要安装CDH5.16.1版本,那么创建新的用户也要基于新版本的CDH 进行创建 cloudera-scm 用户。首先要先删除已经存在的 cloudera-scm 用户，然后重新创建</p>\n</li>\n<li><pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token function\">userdel</span> cloudera-scm</code></pre>\n</li>\n</ul>\n</li>\n<li><h6 id=\"配置CM的数据库\"><a href=\"2020/08/17/Hadoop集群部署#配置CM的数据库\" class=\"headerlink\" title=\"配置CM的数据库\"></a>配置CM的数据库</h6><ul>\n<li><p>导入mysql-connector-java.jar到相应文件目录中</p>\n<ul>\n<li><p>拷贝mysql jar文件到目录 /usr/share/java/</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> /usr/share/java/</code></pre>\n</li>\n<li><p>cp mysql-connector-java-8.0.16.jar /usr/share/java/</p>\n</li>\n<li><p>mv /usr/share/java/mysql-connector-java-8.0.16.jar /usr/share/java/mysql-connector-java.jar</p>\n</li>\n<li><p><font color=\"red\">※</font>注意jar包名称要修改为mysql-connector-java.jar</p>\n</li>\n</ul>\n</li>\n<li><p>将mysql jdbc driver放入CM的lib中</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token function\">cp</span> mysql-connector-java-8.0.16.jar  /opt/cm-5.16.1/share/cmf/lib/</code></pre>\n</li>\n<li><p>主节点初始化cloudera-manager脚本</p>\n<pre class=\" language-bash\"><code class=\"language-bash\">/opt/cm-5.16.1/share/cmf/schema/scm_prepare_database.sh mysql -hlocalhost -uroot -pRoot-123 --scm-host localhost scm scm scm</code></pre>\n<pre class=\" language-markdown\"><code class=\"language-markdown\">/opt/cm-5.16.1/share/cmf/schema/scm<span class=\"token italic\"><span class=\"token punctuation\">_</span>prepare<span class=\"token punctuation\">_</span></span>database.sh mysql -hmaster -uroot -pRoot-123 --scm-host master scm scm scm\n说明：这个脚本就是用来创建和配置CMS需要的数据库的脚本。各参数是指：\nmysql：数据库用的是mysql，如果安装过程中用的oracle，那么该参数就应该改为oracle。\n-hmaster：数据库建立在master主机上面。也就是主节点上面。\n-<span class=\"token title important\">uroot：root身份运行mysql。-123456：mysql的root密码是***。\n<span class=\"token punctuation\">--</span></span>scm-host master：CMS的主机，一般是和mysql安装的主机是在同一个主机上。\n最后三个参数是：数据库名，数据库用户名，数据库密码。</code></pre>\n<p><strong>注意:如果执行的时候报一下错误,可能是配置host的有问题，127.0.0.1 localhost.master 这个localhost不能少</strong></p>\n<img src=\"/2020/08/17/Hadoop%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/errorCDH.png\" alt=\"errorCDH\" style=\"zoom:50%;\">\n\n<ul>\n<li>ERROR com.cloudera.enterprise.dbutil.DbProvisioner  - Exception when creating/dropping database with user ‘root’ and jdbc url ‘jdbc:mysql://localhost/?useUnicode=true&amp;characterEncoding=UTF-8’</li>\n<li>解决：在hosts文件中，修改 127.0.0.1 master master   其他节点也需修改</li>\n</ul>\n<p><font color=\"red\">※</font>如果是在以前的系统上操作的话，例如，以前安装的是CDH5.13.x，现在要安装CDH5.16.1版本，而是用的还是以前的 MySQL 那么，要先删除 msyql 中已经存在的 scm 数据库，否则会报数据库已经存在，不能被创建。</p>\n<ul>\n<li>存在无法初始化成功的问题：</li>\n</ul>\n<img src=\"/2020/08/17/Hadoop%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/cdhInstallScmException.png\" alt=\"cdhInstallScmException\" style=\"zoom:50%;\">\n\n\n\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<pre><code>  - 将mysql-connector-java.jar传入到相应文件夹中</code></pre><ul>\n<li><h6 id=\"启动Server，agent服务\"><a href=\"2020/08/17/Hadoop集群部署#启动Server，agent服务\" class=\"headerlink\" title=\"启动Server，agent服务\"></a>启动Server，agent服务</h6><pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\"># 开启服务 必须先启动  Agent   再启动server</span>\n<span class=\"token comment\" spellcheck=\"true\">#主节点及其他节点</span>\n/opt/cm-5.16.1/etc/init.d/cloudera-scm-agent start\n<span class=\"token comment\" spellcheck=\"true\">#主节点</span>\n/opt/cm-5.16.1/etc/init.d/cloudera-scm-server start</code></pre>\n<p>问题：cloudera-scm-server 已死，但 pid 文件存在</p>\n<ul>\n<li><p>cd /opt/cm-5.16.1/log/cloudera-scm-server</p>\n</li>\n<li><p>/opt/cm-5.16.1/share/cmf/schema/scm_prepare_database.sh mysql cm -hmaster -uroot -pRoot-123  –scm-host master scm scm scm</p>\n</li>\n<li><p>依旧存在上述报错问题</p>\n<blockquote>\n<p>不同版本mysql，语法有点出入，<br> 原来5.7：<br> <code>GRANT ALL ON itat_shop.* to &#39;itat&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;itat123&#39;;</code><br> mysql-8.0.11-winx64：<br> <code>GRANT ALL ON itat_shop.* to &#39;itat&#39;@&#39;localhost&#39;</code>即可。</p>\n</blockquote>\n</li>\n<li><pre class=\" language-mysql\"><code class=\"language-mysql\">CREATE USER 'scm'@'%' IDENTIFIED BY 'Root-123scm';\nGRANT ALL PRIVILEGES ON *.* TO 'scm'@'%'WITH GRANT OPTION;\nFLUSH PRIVILEGES;</code></pre>\n</li>\n<li><p>一直初始化存在问题，可能由于MySQL的jar版本问题，mysql8版本过高？？？</p>\n<ul>\n<li><p><strong>通过核实，CDH5 和 CDH6 仅支持mysql5版本</strong></p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\"># cloudera对JAVA mysql 操作系统均有要求 详情可以参考下面官方文档</span>\nhttps://docs.cloudera.com/documentation/enterprise/release-notes/topics/rn_consolidated_pcm.html<span class=\"token comment\" spellcheck=\"true\">#cdh_cm_supported_os</span>\nhttps://docs.cloudera.com/documentation/enterprise/release-notes/topics/rn_consolidated_pcm.html<span class=\"token comment\" spellcheck=\"true\">#cdh_cm_supported_db</span>\nhttps://docs.cloudera.com/documentation/enterprise/release-notes/topics/rn_consolidated_pcm.html<span class=\"token comment\" spellcheck=\"true\">#pcm_jdk</span></code></pre>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><h6 id=\"修改mysql的版本，删除之前的mysql版本\"><a href=\"2020/08/17/Hadoop集群部署#修改mysql的版本，删除之前的mysql版本\" class=\"headerlink\" title=\"修改mysql的版本，删除之前的mysql版本\"></a>修改mysql的版本，删除之前的mysql版本</h6><ul>\n<li><p>停止服务</p>\n<ul>\n<li>service mysql start</li>\n</ul>\n</li>\n<li><p>查看mysql服务器</p>\n<ul>\n<li>rpm -qa | grep mysql</li>\n<li>通过 rpm -e –nodeps 卸载所有mysql服务</li>\n</ul>\n</li>\n<li><p>删除残余文件</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> -rf /etc/my.cnf\n<span class=\"token function\">rm</span> -rf /usr/lib/mysql\n<span class=\"token function\">rm</span> -rf /usr/lib64/mysql\n<span class=\"token function\">rm</span> -rf /usr/include/mysql\n<span class=\"token function\">rm</span> -rf /usr/share/mysql\n<span class=\"token function\">rm</span> -rf /var/log/mysqld.log\n<span class=\"token function\">rm</span> -rf /var/lib/mysql</code></pre>\n</li>\n<li><p>重新安装mysql </p>\n</li>\n<li><p>vi /etc/my.cnf</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>mysqld<span class=\"token punctuation\">]</span>\n<span class=\"token comment\" spellcheck=\"true\"># Remove leading # and set to the amount of RAM for the most important data</span>\n<span class=\"token comment\" spellcheck=\"true\"># cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.</span>\n<span class=\"token comment\" spellcheck=\"true\"># innodb_buffer_pool_size = 128M</span>\n<span class=\"token comment\" spellcheck=\"true\"># Remove leading # to turn on a very important data integrity option: logging</span>\n<span class=\"token comment\" spellcheck=\"true\"># changes to the binary log between backups.</span>\nlog_bin<span class=\"token operator\">=</span>/var/lib/mysql/mysql_binary_log\n\n<span class=\"token comment\" spellcheck=\"true\"># These are commonly set, remove the # and set as required.</span>\n basedir <span class=\"token operator\">=</span>/usr/local/mysql/mysql5\n datadir <span class=\"token operator\">=</span>/usr/local/mysql/mysql5/data\n port <span class=\"token operator\">=</span>3306\n<span class=\"token comment\" spellcheck=\"true\"># server_id = .....</span>\n socket <span class=\"token operator\">=</span>/var/mysql/mysql.sock\n\n<span class=\"token comment\" spellcheck=\"true\"># Remove leading # to set options mainly useful for reporting servers.</span>\n<span class=\"token comment\" spellcheck=\"true\"># The server defaults are faster for transactions and fast SELECTs.</span>\n<span class=\"token comment\" spellcheck=\"true\"># Adjust sizes as needed, experiment to find the optimal values.</span>\n read_buffer_size <span class=\"token operator\">=</span> 2M\n join_buffer_size <span class=\"token operator\">=</span> 128M\n sort_buffer_size <span class=\"token operator\">=</span> 8M\n read_rnd_buffer_size <span class=\"token operator\">=</span> 16M\nsql_mode<span class=\"token operator\">=</span>NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES\nkey_buffer_size <span class=\"token operator\">=</span> 32M\nmax_allowed_packet <span class=\"token operator\">=</span> 32M\nthread_stack <span class=\"token operator\">=</span> 256K\nthread_cache_size <span class=\"token operator\">=</span> 64\nquery_cache_limit <span class=\"token operator\">=</span> 8M\nquery_cache_size <span class=\"token operator\">=</span> 64M\nquery_cache_type <span class=\"token operator\">=</span> 1\nmax_connections <span class=\"token operator\">=</span> 550\n\n<span class=\"token punctuation\">[</span>client<span class=\"token punctuation\">]</span>\nport<span class=\"token operator\">=</span>3306\nsocket<span class=\"token operator\">=</span>/var/mysql/mysql.sock\n<span class=\"token punctuation\">[</span>mysqld_safe<span class=\"token punctuation\">]</span>\nlog-error<span class=\"token operator\">=</span>/var/log/mysqld.log\npid-file<span class=\"token operator\">=</span>/var/run/mysqld/mysqld.pid\nsql_mode<span class=\"token operator\">=</span>STRICT_ALL_TABLES</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<pre><code>- mysql: [ERROR] unknown variable &#39;innodb_file_per_table=1&#39;  \n\n  - 删除my.cnf中的innodb配置\n\n- ERROR 2002 (HY000): Can&#39;t connect to local MySQL server through socket &#39;/var/mysql/mysql.sock&#39; (2)\n\n  - 启动mysql\n\n- The server quit without updating PID file (/[FAILED]l/mysql/mysql5/data/master.pid\n\n  - 通过核实查看 cat /var/log/mysqld.log\n  - [ERROR] You have enabled the binary log, but you haven&#39;t provided the mandatory server-id. Please refer to the proper server start-up parameters documentation\n    - 在设置bin log日志的时候，没有设置server_id参数。server-id参数用于在复制中，为主库和备库提供一个独立的ID，以区分主库和备库；开启二进制文件的时候，需要设置这个参数。\n  - Could not create unix socket lock file /var/mysql/mysql.sock.lock.\n    - chown -R mysql:mysql /var/mysql/\n\n- 启动cloudera的server agent相关服务\n\n- 启动需要点时间，可以查看数据库scm中的hosts表，如果里面出现节点信息表示server启动完成</code></pre><ul>\n<li><h5 id=\"安装Hadoop集群\"><a href=\"2020/08/17/Hadoop集群部署#安装Hadoop集群\" class=\"headerlink\" title=\"安装Hadoop集群\"></a>安装Hadoop集群</h5><ul>\n<li><h6 id=\"登录http-119-3-29-51-7180-默认登录用户名和密码都是admin\"><a href=\"2020/08/17/Hadoop集群部署#登录http-119-3-29-51-7180-默认登录用户名和密码都是admin\" class=\"headerlink\" title=\"登录http://119.3.29.51/:7180,默认登录用户名和密码都是admin\"></a>登录<a href=\"http://119.3.29.51/:7180,默认登录用户名和密码都是admin\" target=\"_blank\" rel=\"noopener\">http://119.3.29.51/:7180,默认登录用户名和密码都是admin</a></h6><ul>\n<li>无法访问华为云<ul>\n<li>在华为云平台管理后台中添加安全策略。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><h6 id=\"勾选用户协议，进行下一步\"><a href=\"2020/08/17/Hadoop集群部署#勾选用户协议，进行下一步\" class=\"headerlink\" title=\"勾选用户协议，进行下一步\"></a>勾选用户协议，进行下一步</h6><img src=\"/2020/08/17/Hadoop%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/CDHinstallA.png\" alt=\"CDHinstallA\" style=\"zoom:30%;\">\n</li>\n<li><h6 id=\"选择免费版本，继续\"><a href=\"2020/08/17/Hadoop集群部署#选择免费版本，继续\" class=\"headerlink\" title=\"选择免费版本，继续\"></a>选择免费版本，继续</h6><img src=\"/2020/08/17/Hadoop%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/CDHinstallB.png\" alt=\"CDHinstallB\" style=\"zoom:30%;\">\n</li>\n<li><h6 id=\"下一步\"><a href=\"2020/08/17/Hadoop集群部署#下一步\" class=\"headerlink\" title=\"下一步\"></a>下一步</h6><img src=\"/2020/08/17/Hadoop%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/CDHinstallC.png\" alt=\"CDHinstallC\" style=\"zoom:30%;\">\n</li>\n<li><h6 id=\"选择本地服务器，全勾选，继续\"><a href=\"2020/08/17/Hadoop集群部署#选择本地服务器，全勾选，继续\" class=\"headerlink\" title=\"选择本地服务器，全勾选，继续\"></a>选择本地服务器，全勾选，继续</h6><img src=\"/2020/08/17/Hadoop%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/CDHinstallD.png\" alt=\"CDHinstallD\" style=\"zoom:30%;\">\n\n</li>\n</ul>\n<p>​       ❎ 在本机集群中无法正确显示ip地址以及hostname</p>\n<p>​              解决：修改<strong>每个节点</strong>中的hosts文件，<strong>注释</strong> 127.0.0.1 hostname 两行配置</p>\n<ul>\n<li><h6 id=\"选择离线CDH版本，继续\"><a href=\"2020/08/17/Hadoop集群部署#选择离线CDH版本，继续\" class=\"headerlink\" title=\"选择离线CDH版本，继续\"></a>选择离线CDH版本，继续</h6></li>\n<li><img src=\"/2020/08/17/Hadoop%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/CDHinstallE.png\" alt=\"CDHinstallE\" style=\"zoom:30%;\">\n</li>\n<li><h6 id=\"等待安装Parcel\"><a href=\"2020/08/17/Hadoop集群部署#等待安装Parcel\" class=\"headerlink\" title=\"等待安装Parcel\"></a>等待安装Parcel</h6><img src=\"/2020/08/17/Hadoop%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/CDHinstallF.png\" alt=\"CDHinstallF\" style=\"zoom:30%;\">\n</li>\n<li><h6 id=\"继续下一步，自动检测主机正确性\"><a href=\"2020/08/17/Hadoop集群部署#继续下一步，自动检测主机正确性\" class=\"headerlink\" title=\"继续下一步，自动检测主机正确性\"></a>继续下一步，自动检测主机正确性</h6><img src=\"/2020/08/17/Hadoop%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/CDHinstallG.png\" alt=\"CDHinstallG\" style=\"zoom:30%;\">\n\n<ul>\n<li><p>禁用大页面.（每台主机都要做）</p>\n<blockquote>\n<ol>\n<li>执行命令：<br>echo never &gt; /sys/kernel/mm/transparent_hugepage/defrag<br>echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled</li>\n<li>执行命令，修改配置：<br>vim /etc/rc.local<br>增加两行：<br>echo never &gt; /sys/kernel/mm/transparent_hugepage/defrag<br>echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled</li>\n<li>执行命令，赋予权限<br>chmod +x /etc/rc.d/rc.local</li>\n</ol>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><h6 id=\"自定义安装\"><a href=\"2020/08/17/Hadoop集群部署#自定义安装\" class=\"headerlink\" title=\"自定义安装\"></a>自定义安装</h6><img src=\"/2020/08/17/Hadoop%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/CDHinstallH.png\" alt=\"CDHinstallH\" style=\"zoom:30%;\">\n\n<p>​       <img src=\"/2020/08/17/Hadoop%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/CDHinstallI.png\" alt=\"CDHinstallI\" style=\"zoom:30%;\"> </p>\n</li>\n<li><h6 id=\"默认角色分配。（若存在弹框提示，多返回几次，再继续即可）\"><a href=\"2020/08/17/Hadoop集群部署#默认角色分配。（若存在弹框提示，多返回几次，再继续即可）\" class=\"headerlink\" title=\"默认角色分配。（若存在弹框提示，多返回几次，再继续即可）\"></a>默认角色分配。（若存在弹框提示，多返回几次，再继续即可）</h6><img src=\"/2020/08/17/Hadoop%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/CDHinstallJ.png\" alt=\"CDHinstallJ\" style=\"zoom:30%;\">\n</li>\n<li><h6 id=\"数据库连接-hive\"><a href=\"2020/08/17/Hadoop集群部署#数据库连接-hive\" class=\"headerlink\" title=\"数据库连接 hive\"></a>数据库连接 hive</h6><img src=\"/2020/08/17/Hadoop%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/CDHinstallK.png\" alt=\"CDHinstallK\" style=\"zoom:30%;\">\n\n<ul>\n<li><p>测试Hive连接时，提示： Unable to connect to database on host ‘master’ from host ‘maste</p>\n<ul>\n<li><p>进入mysql数据库，进行重新授权，并刷新</p>\n</li>\n<li><pre class=\" language-mysql\"><code class=\"language-mysql\">GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'RootXXX' WITH GRANT OPTION;\nFLUSH PRIVILEGES;</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><h6 id=\"自动安装相关配置\"><a href=\"2020/08/17/Hadoop集群部署#自动安装相关配置\" class=\"headerlink\" title=\"自动安装相关配置\"></a>自动安装相关配置</h6><img src=\"/2020/08/17/Hadoop%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/CDHinstallO.png\" alt=\"CDHinstallO\" style=\"zoom:30%;\">\n</li>\n<li><h6 id=\"安装成功\"><a href=\"2020/08/17/Hadoop集群部署#安装成功\" class=\"headerlink\" title=\"安装成功\"></a>安装成功</h6><img src=\"/2020/08/17/Hadoop%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/CDHinstallP.png\" alt=\"CDHinstallP\" style=\"zoom:30%;\">\n</li>\n<li><h6 id=\"最终界面展示\"><a href=\"2020/08/17/Hadoop集群部署#最终界面展示\" class=\"headerlink\" title=\"最终界面展示\"></a>最终界面展示</h6><img src=\"/2020/08/17/Hadoop%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/CDHinstallQ.png\" alt=\"CDHinstallQ\" style=\"zoom:30%;\">\n\n\n\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>CDH优化</p>\n<ul>\n<li>通过CDH中的服务，直接进入WebUI存在问题（eg:<a href=\"http://master:60010/master-status）\" target=\"_blank\" rel=\"noopener\">http://master:60010/master-status）</a></li>\n<li>由于使用的是内网以及hostname这种主机名方式访问，会导致无法访问成功</li>\n<li>ip可访问，主机名无法访问</li>\n</ul>\n</li>\n<li></li>\n</ul>\n","next":{"title":"闲潭小记","link":"2020/08/11/闲潭小记"},"plink":"http://82u0q0.coding-pages.com/2020/08/17/Hadoop集群部署/","reward":true,"copyright":{"custom":"未经许可，不可转载！"}}