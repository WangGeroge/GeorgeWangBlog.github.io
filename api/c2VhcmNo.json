[{"title":"hexo部署到Coding","date":"2020-08-05T08:44:38.000Z","date_formatted":{"ll":"2020年8月5日","L":"2020/08/05","MM-DD":"08-05"},"updated":"2020-08-06T03:32:16.341Z","content":"\nwyohoxtanBlog部署到Coding的原因：国内的访问速度够快，可以提交百度收录（GitHub 禁止了百度的爬取）\nps: 最近一段时间的中美冲突，对应的国外的地区主义冒头，感觉github会存在各种加载以及限制问题。因此考虑将自身博客相关内容放入Coding中进行DevOps管理。\n\n1、创建项目\n进入Coding官网 ,点击免费使用,进行注册登录\n\n\n\n\n创建项目 选择DevOps项目，创建项目\n配置公钥\n配置 SSH 公钥方法与 GitHub方式差不多。点击头像-&gt;【个人设置】-&gt;【SSH公钥】-&gt;【新增公钥】\n\n名称随便起。获取id_rsa.pub   \n\ncd /Users/a/.ssh  \ncat id_rsa.pub \n12- &lt;img src&#x3D;&quot;hexo部署到Coding&#x2F;sshPublicKey.png&quot; alt&#x3D;&quot;sshPublicKey&quot; style&#x3D;&quot;zoom:30%;&quot; &#x2F;&gt;34- **ps:**选择永久有效，若提示危险操作，需要填写密码，就填写注册的Coding的密码，若注册是没设置，在个人设置服务密码里面可以进行设置。56- 验证SSH是否通过：78- &#96;&#96;&#96;bash9  ssh -T git@e.coding.net10  ## 有如下提示，说明配置成功11  ## Coding 提示: Hello wyohoxtan与小伙伴们, You&#39;ve connected to Coding.net via SSH. This is a personal key.12  ## wyohoxtan与小伙伴们，你好，你已经通过 SSH 协议认证 Coding.net 服务，这是一个个人公钥.\n\n\n\n配置hexo的_config.xml文件\n点击新建项目，代码 ssh  复制：git@e.coding.net:wyohoxtanblog/wyohoxtanblog/wyohoxtanblog.git\n\n\n\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repo: \n    github: git@github.com:wyohoxtan/wyohoxtan.github.io.git \n    coding: git@e.coding.net:wyohoxtanblog/wyohoxtanblog/wyohoxtanblog.git\n  branch: master\n12- 配置完，执行以下命令34  &#96;&#96;&#96;bash5  hexo clean6  hexo g7  hexo d\n\n查看代码，在代码仓库中查看\n\n\n\n静态网站\n点击持续部署 -&gt; 静态网站 -&gt; 新建： \n\n网站名随便取一个\n\n\n自定义域名（有域名者） \n\n点击右上角的设置\n进行域名绑定处理\n\n\n\n\n\n\n\n\n\n\n","plink":"http://82u0q0.coding-pages.com/2020/08/05/hexo部署到Coding/"},{"title":"知识杂记","date":"2020-08-03T06:27:42.000Z","date_formatted":{"ll":"2020年8月3日","L":"2020/08/03","MM-DD":"08-03"},"updated":"2020-08-07T06:45:30.915Z","content":"Welcome to my miscellany!Quick StartMac解决终端显示乱码※ 打开终端的偏好设置\n※ 描述文件 —&gt; Basic —&gt; 高级 —&gt; 文本编码 改为Unicode（UTF-8）\nYaml与Yml的区别* YML文件格式是YAML (YAML Aint Markup Language)编写的文件格式\n   More info: 参考链接\nTomcat手动启动JavaWeb项目※ 将javaWeb项目打包成war，存放在Tomcat的webapps文件夹中\n※ 配置Tomcat的conf下的server.xml,context.xml文件\n1 &lt;!--  server.xml --&gt;2&lt;Host name=\"localhost\"  appBase=\"webapps\"3            unpackWARs=\"true\" autoDeploy=\"true\"&gt;4      &lt;Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"5             prefix=\"localhost_access_lo g.\" suffix=\".txt\"6             pattern=\"%h %l %u %t &amp;quot;%r&amp;quot; %s %b\" /&gt;7      &lt;Context  path=\"\" docBase=\"/war名\" reloadable=\"true\"&gt;8      &lt;/Context&gt;9&lt;/Host&gt;\n\n1&lt;!-- context.xml --&gt;2&lt;Resource driverClassName=\"com.mysql.jdbc.Driver\" 3          maxActive=\"100\" maxIdle=\"2\" maxWait=\"5000\" 4          name=\"jdbc/cplh\" 5          username=\"root\"\t       6          password=\"XXX\" 7          type=\"javax.sql.DataSource\" 8          url=\"jdbc:mysql://localhost:3306/pcmdb?serverTimezone=UTC\"/&gt;\n\n注：docbase是web应用和本地路径，path是tomcat访问这个应用的URL路径\nMysql替换Oracle中的to_number1两种方式：cast(value as type) 、 convert(value,type)23select cast(numA as unsigned int) &#x2F;*整型*&#x2F;45select cast(numA as decimal(10,1)) &#x2F;*浮点型*&#x2F;67ps：（10,1）代表数字共十位，小数点后两一位。\n\n###MySQL、Oracle中的Between and\n1mysql ,oracle 中的Between and 均是包含边界23eg:select * from info_customer where cus_id between 2 and 4;4(实质 也等于  select * from info_customer where cus_id  &gt;=2 and  cus_id &lt;=4)56结果 2,3,4\n\nEclipse Git 冲突处理1、通过 fetch，pull将代码从远程git仓库拉到本地\n\n\n\n\n① 只更新 “远程服务器 –&gt; 本地服务器” 简称(Fetch)\n② 更新后，当前更新的项目与Git Repositories都会有类似一个向下的箭头，这代表“远程服务器”有东西更新到本地仓库，具体数量就是箭头隔壁的数字\n③ 远程服务器 –&gt; 本地服务器” 与 “ 本地服务器 –&gt; 本地代码” 都执行 简称(Pull)\n\n2、提交代码\n\nCommit : “ 本地代码 –&gt; 本地服务器”\nPush :  “本地服务器 –&gt; 远程服务器” \n\n3、先修改完代码还没有commit，在执行Fetch,那你还没有feel到代码冲突。\n\nI.只要你commit到本地服务器，IDE编译器就自动告诉你，已经冲突，要求你立刻解决。\n\nII.如果你比较任性的话。直接想Commit And Push, IDE编译器也会很任性的回复你这样的图\n\n\n\n\n\n应该要执行一下 Pull ，把 刚才Fetch 的代码植入”本地代码”，会存在冲突\n若执意Push代码，提示：Repository state ： Conflicts\n解决办法：\n通过定位当前冲突代码，执行 team -&gt; merge Tool -&gt; 进行代码的修改，解决冲突\n若修改后，还存在冲突表示，执行  team -&gt; Add to Index  告诉IDE 已解决冲突\n再进行 commit 或 commit and push 均可\n\n\n\nMore info: Generating\nPostgreSQL 表空间https://www.cnblogs.com/yanshw/p/11351136.html\nMac 状态栏收缩软件 vanillahttps://matthewpalmer.net/vanilla/\n1$ vanilla\n\nEclipse启动存在相关问题1、One of the two will be used. Which one is undefined.\n1问题：objc[6040]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/bin/java (0x10e0f04c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x10f1174e0). One of the two will be used. Which one is undefined.23通过eclipse中的项目的java build path 中设置 jdk版本，选定 默认jdk版本\n\n\n\nNpm更新存储问题\nmac安装报错Error: EACCES: permission denied, access ‘/usr/local/lib/node_modules\n\n原因: 执行命令行命令时没有获得管理员权限\n\n解决方案：在命令行前面添加sudo获取管理员权限，输入管理员密码就行\n\n\n\n","plink":"http://82u0q0.coding-pages.com/2020/08/03/知识杂记/"},{"title":"InstallAnywhere打包web单机版","date":"2020-01-03T07:37:30.000Z","date_formatted":{"ll":"2020年1月3日","L":"2020/01/03","MM-DD":"01-03"},"updated":"2020-03-23T06:30:20.768Z","content":"InstallAnywhere打包webInstallAnywhere,web\n\n一、准备工作1、下载InstallAnywhere2020，并安装\n\n① 注册，下载地址：https://resources.flexera.com/web/www/landing/eval-download-installanywhere.html?id=IA-PRE（21天试用期）\n\n② 安装\n\n\n2、下载JDK1.8，并安装\n3、下载MySQL8 免安装\n4、下载Tomcat8.5 免安装\n5、本地创建文件夹，将当前的jdk，mysql，Tomcat复制到当前文件夹中\n二、创建Project※ 打开InstallAnywhere 2020，建立Basic Project Template，选择Advanced Designer,设置Title，Name等\n\nProject – info ：填写安装程序标题，安装文件名称，产品名称，其他项目可不填写。\n\nProject – Description：填写产品描述、开发商、开发商主页、邮件等。\n\nInstaller UI – Look&amp;Feel：自定义安装界面、标题、标题颜色等。\n\nOrganization：组织机构信息，尚未研究。\n\nPre – install ：安装前准备，可以自定义安装步骤，修改各个步骤的标题及内容。\n\nInstall ：至关重要的一步，首先准备好你要打包的文件（tomcat免安装版、mysql免安装版、jdk）\n\n\n※ 设置本地语言\n\nProject -&gt; Locales -&gt; 选择需要的本地化语言\n\n三、设置环境变量Install -&gt;，按钮Add Action…&gt;Set System Environment Variable&gt;Add &gt;，\n设置JAVA_HOME和CATALINA_HOME,CATALINA_DIR,PATH 四个系统环境变量。其中$USER_INSTALL_DIR$表示用户选择的安装路径。\n1JAVA_HOME  $USER_INSTALL_DIR$\\jdk1.82CATALINA_HOME $USER_INSTALL_DIR$\\tomcat8.53CATALINA_DIR $USER_INSTALL_DIR$\\tomcat8.5\\bin4PATH  $USER_INSTALL_DIR$\\jdk1.8\\bin;$USER_INSTALL_DIR$\\mysql8\\bin;$USER_INSTALL_DIR$\\tomcat8.5\\bin;5C:\\Windows\\System32\n\n将jdk,tomcat,mysql 通过按钮Add Files…添加进来放在 User Install Folder直接目录下\n四、注册服务1、安装免安装mysql\n\n在本地下载完成mysql后，解压，进行初始化处理，并创建数据库以及对应的表\n\n初始化mysql\n修改mysql登录密码\n创建数据库\n创建表\n\n\n\n当前解压版mysql无data文件夹(存放数据的文件夹，无或者内容不对会启动不成功)，无my.ini文件\n\n通过创建my.ini文件\n1[mysqld]2# 设置3306端口3port=33064# 设置mysql的安装目录5basedir= D:\\ProjectJKTY-2017\\mysql8.06# 设置mysql数据库的数据的存放目录7datadir= D:\\ProjectJKTY-2017\\mysql8.0\\data8# 允许最大连接数9max_connections=20010# 允许连接失败的次数。这是为了防止有人从该主机试图攻击数据库系统11max_connect_errors=1012# 服务端使用的字符集默认为UTF813character-set-server=utf814# 创建新表时将使用的默认存储引擎15default-storage-engine=INNODB16# 默认使用“mysql_native_password”插件认证17default_authentication_plugin=mysql_native_password18[mysql]19# 设置mysql客户端默认字符集20default-character-set=utf821[client]22# 设置mysql客户端连接服务端时默认使用的端口23port=330624default-character-set=utf8\n\n通过进入mysql路径下，执行 mysqld --initialize 生成data文件夹及其相关内容\n\n执行mysql的服务安装 ： mysqld --install\n\n执行启动mysql操作 ： `net start mysql ``\n\n注：第一次登陆MYSQL时，会提示要求输入初始密码，这是考虑安全因素，命令：\nmysqld --initialize会随机生成密码。\n\n初始密码在data文件夹下的xxx.err文件中，可以用记事本打开，用ctrl+f 查找功能找到如下一行记录：\n[Note] A temporary password is generated for root@localhost: NZ+uhXPq1zN.\n其中NZ+uhXPq1zN.即为初始密码（注意.号不要漏了）\n进入后可以用如下命令修改，这里密码改为root：\n\n\n\nALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;RootXXX&apos;;\n1- 进行mysql的数据库，数据库数据导入操作（按照installAnywhere中的mysql安装步骤走）2  - 创建mysql数据库3    &#96;&#96;&#96;mysql4    mysql8\\bin\\mysql -uroot -pRootXXX&lt; \\mysql8\\create.sql\n\n\n\n\n\n\n将已有数据库数据导入到mysql数据库中\n1mysql8\\bin\\mysql -hlocalhost  -uroot -pRootXXX pcmdb &lt; \\mysql8\\testJkty.sql23mysql8\\bin\\mysql -hlocalhost  -uroot -pRootXXX pcmdb &lt; \\mysql8\\jktyView.sql\n\n\n\n\n\n添加按钮Add Action…&gt;Motify Text File-Single File&gt;Add&gt;,然后在Installed file选中mysql安装目录下的my.in(如果没有这个文件，请先创建这样一个文件，内容为空),其中Additional Text选中第一个prepend,在文本框中输入:\n\n\n1[mysqld]2basedir = $USER_INSTALL_DIR$\\mysql83datadir = $USER_INSTALL_DIR$\\mysql8\\data4default-character-set = utf85set-variable=max_connections=10006[WinMySQLAdmin]7Server=$USER_INSTALL_DIR$\\mysql5.0\\bin\\mysqld-nt.exe8user=root9[client]10port=330611user=root\n\n将该Motify Text File-Single File移动到Panel: Install Complete后面。\n2、注册mysql服务：\n\n在Post-install中，addAction 选择”Execute Script/Batch file” 在Comment中取名为”注册MySQL服务”，在Script中写入\n1Call \"$USER_INSTALL_DIR$/mysql8/bin/mysqld\" -remove   2Call \"$USER_INSTALL_DIR$/mysql8/bin/mysqld\" -install\n\n\n\n3、启动mysql：\n\n在Post-install中，addAction 选择”Execute Script/Batch file” 在Comment中取名为”启动MySQL”，在Script中写入\n\n1net start mysql\n\n4、启动Tomcat\n\n在Post-install中，addAction 选择”Execute Script/Batch file” 在Comment中取名为”启动Tomcat”，在Script中写入\n\n1$USER_INSTALL_DIR$/tomcat8.5/bin/startup.bat\n\n5、complete\n相关安装action：\n\n相关安装问题汇总：① mysql服务无法安装，无法启动相关服务\n\nwin10 彻底删除mysql\n\n11. 停止MySQL服务2　　开始 -&gt; 所有应用 -&gt; Windows管理工具 -&gt; 服务，将MySQL服务停止。32. 卸载mysql server4　　控制面板\\所有控制面板项\\程序和功能，将mysql server卸载掉。53. 将MySQL安装目录下的MySQL文件夹删除（我的安装目录是C:\\Program Files (x86)\\MySQL）64. 运行“regedit”文件，打开注册表。7　　删除`HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Services\\Eventlog\\Application\\MySQL`文件夹8　　删除`HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet002\\Services\\Eventlog\\Application\\MySQL`文件夹。9　　删除`HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Eventlog\\Application\\MySQL`的文件夹。10　　如果没有相应的文件夹，就不用删除了。115. 删除C盘下的“C:\\ProgramData\\MySQL ”文件夹，如果删除不了则用360粉碎掉即可，12　　该programData文件默认是隐藏的，设置显示后即可见，或者直接复制 C:\\ProgramData 到地址栏回车即可进入！将整个MySQL文件夹删除掉。。。136. 开始 -&gt; 所有应用 -&gt; Windows管理工具 -&gt; 服务14　　如果已经将MySQL卸载，但通过“开始 -&gt; 所有应用 -&gt; Windows管理工具 -&gt; 服务”查看到MySQL服务仍然残留在系统服务里。又不想改服务名，改怎么办呢。只要在CMD里输入一条命令就可以将服务删除：15　　sc delete mysql //这里的mysql是你要删除的服务名, 这样一来服务就被删除了。1617重装MySQL数据库了！！！\n\n② dsName(JNDI):jdbc/cplhERROR! null\n\n在Context.xml 中配置 数据库相关信息，server.xml中不做数据库的配置\n\n\n\n③  在mysql命令行下执行sql文件\n https://blog.csdn.net/qq_36501591/article/details/80354924\n指导材料：\nhttps://blog.csdn.net/number_89757/article/details/80643865\nhttps://www.cnblogs.com/martin-roger/p/5912271.html\nhttps://www.cnblogs.com/S-E-P/archive/2010/01/10/2045078.html\nhttps://blog.csdn.net/ljz2009y/article/details/7707237\nhttps://blog.csdn.net/y19910825/article/details/53740045\nhttps://wenku.baidu.com/view/db30494233d4b14e8424684d.html\nhttps://www.taodocs.com/p-301026194.html\n\n","plink":"http://82u0q0.coding-pages.com/2020/01/03/InstallAnywhere打包web单机版/"},{"title":"闲潭杂记","date":"2019-12-29T03:05:01.000Z","date_formatted":{"ll":"2019年12月29日","L":"2019/12/29","MM-DD":"12-29"},"updated":"2020-08-03T06:46:31.043Z","content":"闲散文章随笔\n《六朝志怪》\n​    开篇 李贺《神弦》\n​    所谓六朝： 三国，晋，宋，齐，梁，陈\n​    逸史所谓何？书中有言：继续活在人们口头上的传说一旦被记录下来，就成为了具有浓厚小说意味的逸史\n\n我爱你，不光是因为你的样子，还因为和你在一起时我的样子；我爱你不光是因为你为我而做的事，还因为，为了你，我能做的成的事；我爱你，因为你能唤出我最真的那部分；我爱你，因为你穿过我的心灵的旷野，如同阳光透过水晶般容易。\n\n随笔：\n​      近来，日益消退的疫疾，以及满是损人利己的举措，让本就烦闷的内心又增雾霾。说好的在家办公，说好的有效处理相关工作问题，也愈发地坐立不安，心神不宁。老是走神的自己，无法平复的积怨，让一切又变得那么的磕磕绊绊，无法顺畅，进而陷入到一种死循环的陷进中，难以自持。\n​      生活好像总是这般，生下来，活下去，真够艰难。每个人心中的那杆秤，总是被人心压得狂摆不止，岌岌可危。道德的，法制的，经济的，文化的，思想的。该表达的，该陈述的，该倾诉的，该讨论的，该接纳的，好像都变得寡淡无味，不可自知。\n​      乖乖做好自己就好。理清楚自己的内心，理清未来所需前往的地方，坚强武装好自我，坚定脚步，一步一步走过去，与爱的人。\n\n","plink":"http://82u0q0.coding-pages.com/2019/12/29/闲潭杂记/"},{"title":"hexo_inside博客主题优化","date":"2019-12-10T13:10:31.000Z","date_formatted":{"ll":"2019年12月10日","L":"2019/12/10","MM-DD":"12-10"},"updated":"2020-08-10T03:41:58.165Z","content":"Hexo inside主题优化hexo inside 优化\n\nhexo系列问题※ 部署到github时会删掉README文件​    △ 分析：\n\n ① 执行hexo g后，会把source文件里的.md格式的文件渲染为html文件并放到public下面；\n ② 继续执行hexo d后，会将public下面的所有文件提交到对应的XXX.github.io仓库中；\n ③ 由于本地public文件夹无README.md文件，在提交public文件时，github会认为你把README.md文件      删掉了，同时github也会删掉仓库里的README.md文件\n\n   △ 解决：\n\n① 在本地source文件夹内创建一个 README.md\n② 修改Hexo根目录下的_config.yml文件，将skip_render参数的值设置为README.md\n1skip_render: README.md23//  为什么需要设置这一步呢？4//  因为你执行hexo g命令时，hexo会默认将source文件里的所有md文件渲染为html文件放到public中，5//  同时README.md会被渲染为README.html文件放到public文件里6//  加上这段设置，就是告诉hexo的解析器，你在渲染source文件里的md文件时，跳过README.md文件\n\nInside主题改造※ 博客头像、简介、目录、链接、搜索、主题、字体、加载速度、评论、访问量config.yml文件改造\n​    △ 头像设置\n\n① 在当前主题中source创建img文件夹，将自己头像照片存放到文件夹中\n② 在主题配置文件 _config.yml 文件，设置以下值：\n1# 头像url2avatar: /img/avatar.jpg 3favicon: /img/avatar.jpg\n\n​    △ 目录设置\n  △ 设置添加rss ,github等链接\n\n① 在目录下执行安装hexo插件\n1npm install --save hexo-generator-feed\n\n② 在config.yml文件中添加插件信息\n1# Extensions2## Plugins: http://hexo.io/plugins/3plugins: hexo-generate-feed\n\n③ 在theme目录下的config.yml文件中添加rss配置\n1# Set rss to false to disable feed link.2# Leave rss as empty to use site's feed link.3# Set rss to specific value if you have burned your feed already.4rss: /atom.xml\n\n④ 重新部署\n\n  △ 设置打赏模块\n\n1、下载微信，支付宝的支付图片\n2、将图片放入主题的img文件夹中\n3、设置相应的属性，具体如下：\n1reward:2  # Text which shows at the top.3  # 显示一句文案4  text:  交个朋友啦 ☕ .5  # wechatpay: /img/Wechat.jpg6  # alipay: /img/Alipy.jpg7  # Payment Methods8  # 支付方式列表，注意是数组9  # qrcode, url and text must be set at least one10  # wechat, alipay, paypal and bitcoin has a built-in icon,11  # use `name` to apply12  methods: 13    # wechat、alipay、paypal、bitcoin 对应四种不同的图标和配色14    # 此外的任何自定义名称，都需要在语言文件内增加相应的语言，15    # 同时配色与 appearance.accent_color 一致16    - name: wechat17      # 二维码地址18      qrcode: img/Wechat.jpg19      # 显示一个链接20      url: /img/Wechat.jpg21      # 若设置了 url，则此值会显示为链接的文本，否则为一段普通文本22      text: 🤝微信🤝23      # 选中时的颜色24      color: '#33CC00'25      # qrcode、url 和 text 必须至少设置一项2627    - name: alipay28      # 二维码地址29      qrcode: img/Alipy.jpg30      # 显示一个链接31      url: /img/Alipy.jpg32      # 若设置了 url，则此值会显示为链接的文本，否则为一段普通文本33      text: 🤝支付宝🤝34      # 选中时的颜色35      color: '#00CCFF'36\n\n注：当前的name中的，需要小写，是内置支付方式\n\n  △ 设置统计字数，访问量\n\n问题思考：如何添加js引用\n统计使用“不蒜子”\n如何处理hexo inside主题布局修改问题\n分析：inside主题是通过AngularJS实现\n① 通过vscode将inside文件夹打开\n② 分析layout文件夹\n通过分析研究 _config.xml 将相关不蒜子统计文件js配置处理添加到文件中\n1、支持通过安装 html-minifier、babel 和 terser 来实现代码压缩。\n\n项目根目录执行（Hexo 根目录，非 themes/inside）：\n1npm install babel-core babel-preset-env html-minifier terser --save\n\n\n\n2、先进行脚本的安装，再使用不蒜子的页面\n安装方法：主题_config.xml配置文件 plugins 模块 插入 busuanzi.js\n1_config.xml2---------------------------------------------------------------------------------3plugins: 4    - position: sidebar5      template: | 6        &lt;script async src=\"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\"&gt;&lt;/script&gt;7#   # Global Inject scripts/styles8    - //busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js9\n\n在 _config.xml 文件里找到 footer 下的 custom，写入相关的HTML代码，如：\n1_config.xml2---------------------------------------------------------------------------------3footer:4# Custom text.5  # 于最后一行添加自定义内容6  custom: &lt;span id= \"busuanzi_container_site_uv\" style ='display:none'&gt;Total &lt;span id=\"busuanzi_value_site_uv\"&gt;&lt;/span&gt; visitors. &lt;/span&gt;&lt;span id=\"busuanzi_container_site_pv\" style = 'display:none'&gt;&lt;span id=\"busuanzi_value_site_pv\"&gt;&lt;/span&gt; Views&lt;/span&gt; \n\n\n安装过程的问题：\n问题一：引用js的问题\n\n通过plugins模块中的Global Inject scripts/styles\n\n问题二：部署后，页面显示的访问量过大\n\n在本地是此有数据量过大问题，部署后就无当前问题\n\n附属链接：\n不蒜子统计常见问题\n\n △ 设置about，search\n\n创建about分类文件夹 \n1hexo new page 'about'\n\n完善网页内容\n\n\n△ 使用 valine评论进行配置\n\n配置_config.xml 中的 plugins中的valine\n\n    - /js/Valine.min.js\n    - /js/av-min.js\n    - position: comments\n      template: |\n        &lt;div id=\"vcomment\"&gt;&lt;/div&gt;\n        &lt;script&gt;\n          new Valine({\n            el: '#vcomment',\n            appId: 'XXX',\n            appKey: 'XXX',\n            path: decodeURIComponent(location.pathname)\n          })\n        &lt;/script&gt;\n12- 由于考虑到线上的valine的js存在访问加载等的相关问题，将线上js做成本地博客js34  - 将线上js 拷贝到本地theme -&gt; inside -&gt; source -&gt; js56  - &#96;&#96;&#96;xml7    - &#x2F;&#x2F;cdn1.lncld.net&#x2F;static&#x2F;js&#x2F;3.0.4&#x2F;av-min.js8    - &#x2F;&#x2F;unpkg.com&#x2F;valine&#x2F;dist&#x2F;Valine.min.js9    #将其替换成本地路径10    - &#x2F;js&#x2F;Valine.min.js11    - &#x2F;js&#x2F;av-min.js\n\nvaline 评论 需要配合 leancloud 作为后端支持\n\n进入 leancloud 官网，可通过GitHub账号注册，添加邮箱验证功能\n进入后，创建应用，创建完后点击右上角设置\n\n选择应用keys，当中的AppID ，AppKey即为Valine需要的ID，key\n\n进入应用中心绑定你的个人博客域名\n\n* ps:若没配置web安全域名，则会在博客下提示：Code 403: 访问被API域名白名单拒绝，请检查你的安全域名设置.\nLendcloud 存储中创建Commit class\n\nValine配置：\n完成\n\n\n问题①：\n\n\n1Code 403: 访问被API域名白名单拒绝，请检查你的安全域名设置.\n\n* 解决：在leancloud的应用&gt;设置&gt;安全中心&gt;Web安全域名中只添加了新的自定义的域名即可解决该问题。\n\n问题②：\n1TypeError: Cannot read property 'hide' of undefined2    at r.ErrorHandler (Valine.min.js:12)3    at r.init (Valine.min.js:12)4    at new r (Valine.min.js:12)5    at new i (Valine.min.js:12)6    at (index):1891\n\n* 解决：除了引用Valine.min.js 还需要将 Valine.Pure.min.js 填入到项目中\n\n相关js  https://cdn.jsdelivr.net/npm/valine@1.4.14/dist/（存在问题）\n通过已有前辈的技能，说是需要将 valine中的language设置为 zh-cn，尝试后仍无效\n应该还是Valine.min.js的版本的问题\n替换现有的js （js/Valine.min.js）\nupdate： 通过核实得知当前的hexo的 _config.xml 中的language设置为 zh-Hans，改为 zh-cn\n\n\n\n△ 添加代码高亮插件\n\nnpm i -S hexo-prism-plugin\n\n在_config.xml文件中添加设置\n\n\n\n改造过程中的问题 Exception：1、config.yml文件在部署过程中，存在问题：duplicated mapping key at line 242, column -2307: \n\n在search模块中，设置 其一 adapter即可，不可设置两个\n\n2、bad indentation of a mapping entry at line 330, column 3\n\n缩进错误\n\n3、无法加载Disqus\n\n无法访问//shortname.disqus.com/embed.js\n\n4、添加gitment评论存在问题\n\n[object ProgressEvent]  引用的js所涉及的服务器存在稳定问题\n由于gitment评论一直存在网络问题\n以及GitHub的官网访问速率问题导致的博客存在速率问题\n将其替换成Valine\n\n\n","plink":"http://82u0q0.coding-pages.com/2019/12/10/hexo-inside博客主题优化/"},{"title":"hexo_mac部署","date":"2019-12-10T11:32:18.000Z","date_formatted":{"ll":"2019年12月10日","L":"2019/12/10","MM-DD":"12-10"},"updated":"2020-08-03T06:46:06.506Z","content":"搭建个人博客（https://wyohoxtan.github.io/）\nmac hexo \n\nhexo介绍官网：https://hexo.io/zh-cn/ \n※ hexo 可以理解为是基于node.js制作的一个博客工具 \n※ hexo 正常来说，不需要部署到我们的服务器上，我们的服务器上保存的，其实是基于在hexo通过markdown编写的文章，然后hexo帮我们生成静态的html页面，然后，将生成的html上传到我们的服务器。简而言之：hexo是个静态页面生成、上传的工具。\n※ 源码结构\n\n\n\n文件/文件夹\n说明\n\n\n\n_config.yml\n配置文件\n\n\npublic\n生成的静态文件，这个目录最终会发布到服务器\n\n\nscaffolds\n一些通用的markdown模板\n\n\nsource\n编写的markdown文件，_drafts草稿文件，_posts发布的文章\n\n\nthemes\n博客的模板\n\n\nhexo搭建博客的一般步骤1安装Node.js2安装Git3安装Hexo4安装主题5本地运行测试6注册github并创建仓库7部署到github中\n\n环境配置※ 安装 Git，Node.js, hexo\n1# 检测是否已安装2node -v3git --version4# 未安装，进行node，git的安装5# 第一种方法：6# 1、执行以下命令安装homebrew7ruby -e \"$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)\"8# 2、执行以下命令安装git9brew install git10# 3、执行以下命令安装nodejs11brew install node1213#第二种方法：14#1、先安装git15#git安装包下载地址http://code.google.com/p/git-osx-installer/downloads/list16#2、安装nodejs17#依次执行以下命令：18git clone https://github.com/joyent/node.git nodejs19cd nodejs20./configure21make22sudo make install\n\n※ 若已安装，执行安装hexo步骤\n1npm install -g hexo-cli\n\n※创建自己博客的文件夹，初始化hexo博客信息\n1# 在合适的目录下创建一个blog文件夹2mkdir myBlog3# 进入目录4cd myBlog5# 初始化目录6hexo init7#开启本地服务 8hexo s9# 通过浏览器访问：http://localhost:4000\n\n本地博客关联GitHub仓库※ 创建GitHub账号及仓库\n\n进入官网注册账号\n\n点击右上角“+”，new responsitory 创建GitHub仓库\n*创建的responsitory名称应与账号名一致（eg:wyohoxtan.github.io）,否则在deploy后，访问博客网址时会出现404错误\n\n\n※关联GitHub，免密提交\n  1# 用你注册GitHub时的邮箱号，进行秘钥生成2cd ~3ssh-keygen -t rsa -C \"xxxxxxx@qq.com\"4# 系统就会生成一个隐藏文件夹.ssh5cd .ssh6ls7# 复制公钥8vim id_rsa.pub\n\n\n进入GitHub网站，进入setting设置中\n\n\n\n\n\n\n\n\n\n\n\n验证是否成功\n1ssh -T git@github.com\n\n\n\n※ 找到本地博客文件夹myBlog中的_config.yml文件，修改配置（只换username即可）\n\n\n\n安装 hexo-deployer-git插件(不按照，git同步不成功)\n1npm install hexo-deployer-git --save\n\n终端执行以下命令\n1# 清除2hexo clean3# 产生静态网页4hexo g5# 部署到GitHub page上6hexo d\n\n\n\n※ 通过http://username.github.io进行访问（eg:[闲潭个人博客](https://wyohoxtan.github.io/archives)）\n常见问题分析1、hexo搭建Github博客上传后，网页显示404问题解决方案\n分析：两种原因： ① 创建的GitHub仓库名称和GitHub账号的用户名称不同，导致无法获取。具体分析步骤可参考此链接\n​                        ② 配置config.yml文件时，type: git中间必须有个空格！！！（书写格式问题）\n2、配置的时候 hexo d 后报错”ERROR Deployer not found: git“\n解决方法：安装插件hexo-deployer-git即可\n1npm install hexo-deployer-git --save\n\n3、Permanently added the RSA host key for IP address ‘52.74.223.119’ to the list of known hosts.\n解决：https://blog.csdn.net/zhoucheng05_13/article/details/52831703\n4、git@github.com: Permission denied (publickey).fatal: Could not read from remote repository.\n原因：客户端与服务端的ssh key不匹配\n解决：删除GitHub中的ssh秘钥，重新本地生成后设置到GitHub秘钥中\n5、同步过程中存在问题:\n\n\n解决：按照上述提示，输入 \n1git config --global user.email \"you@example.com\"2git config --global user.name \"Your Name\"\n\n6、编写博客上传后，本地图片无法在GitHub上显示\n※ 修改config.yml文件配置：将文件中的post_asset_folder置为true\n\n\n※ 根目录下执行：插件安装\n1npm install https://github.com/CodeFalling/hexo-asset-image --save\n\n※ 创建博客文件后，会同时生成文件名相同的文件夹名称，将需要使用到的资源文件存放到本文件夹内\n※ 书写博客中的图片文件路径 \n\n\n上述操作后，仍存在图片无法显示的问题:\n\n通过F12，得知当前的图片路径无法加载，具体原因是文件名存在空格等非法字符，导致图片路径存在问题\n在进行本博客的编写过程中，出现的各类资源文件信息，尽量全部存放到由hexo自动生成的同名文件夹中\n\n7、中文乱码的问题：\n※ 修改config.yml文件，设置 language值   \n​    anguage: zh-Hans 或者 anguage: zh-CN \n​    *取决于你的主题theme目录下的language目录下有zh-Hans.yml还是zh-CN.yml\n※ 编辑器编码确定\n主题更换主题备选：从git或hexo官网中下载主题到本地\ngit@github.com:ikeq/hexo-theme-inside.gitgit@github.com:TriDiamond/hexo-theme-obsidian.git\n修改本地主题：\n  1、将下载的主题存放到本地myBlog -&gt; themes中(建议修改主题名，简单好用)\n  2、修改config.yml文件中的theme值，使用主题名\n本地创建新博客  ※ 创建新博客文件：\n1hexo new \"newBlog\"  ※ 使用Markdown工具编写文件（eg:Typora(软件)，作业部落(在线)）\n  ※ 通过 hexo g  hexo d 发布到GitHub中\n参考链接：https://www.jianshu.com/p/77db3862595c\nhttps://www.jianshu.com/p/380290deb8f0\nhttps://www.jianshu.com/p/1c888a6b8297\n","plink":"http://82u0q0.coding-pages.com/2019/12/10/hexo_mac部署/"},{"title":"about","date":"2020-08-07T10:39:05.000Z","date_formatted":{"ll":"2020年8月7日","L":"2020/08/07","MM-DD":"08-07"},"updated":"2020-08-10T03:29:14.334Z","content":"\n","plink":"http://82u0q0.coding-pages.com/about/"}]