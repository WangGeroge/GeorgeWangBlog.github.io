[{"title":"Hadoop集群部署","date":"2020-08-17T08:32:33.000Z","date_formatted":{"ll":"2020年8月17日","L":"2020/08/17","MM-DD":"08-17"},"updated":"2020-08-21T09:26:26.980Z","content":"一、前提条件：1️⃣ 版本选择问题\n考虑因素：\n环境稳定程度\n安装难易度\n所考虑因素：\n是否为开源软件，即是否免费。\n是否有稳定版，这个一般软件官方网站会给出说明。\n是否经实践验证，这个可通过检查是否有一些大点的公司已经在生产环境中使用知道\n是否有强大的社区支持，当出现一个问题时，能够通过社区、论坛等网络资源快速获取解决方法\n\n\n\n\n考虑到大数据平台高效的部署和安装，中心化的配置管理，使用过程中的稳定性、兼容性、扩展性，以及未来较为简单、高效的运维，遇到问题低廉的解决成本。建议使用第三方发行版本，其中在第三发发行版中，国内应用较多的是Cloudera的CDH。\n\n2️⃣ 环境准备\nCDH相关离线文件\nLiunx三台服务器\n\n\n3️⃣ 技术选型\nCDH版本：6.3.2\nLinux ：centos7\njdk：1.8\nMySQL：5.7\nopentsdb\ngranfana\n\n4️⃣\n二、服务器准备\n\n\nip地址\n主机名\n角色\n配置\n说明\n\n\n\nMip1\nhadoop\n主\n2核16G\nnamenode、ResourceManager、zookeeper、HMaster、Hive\n\n\nSip1\nhadoop1\n从\n2核16G\ndatanode、NodeManager、zookeeper、HRegionServer、Spark\n\n\nSip2\nhadoop2\n从\n2核16G\ndatanode、NodeManager、zookeeper、HRegionServer、Spark\n\n\n三、CDH安装文件\n1、cloudera manager包 \nhttps://archive.cloudera.com/cdh6/6.3.2/parcels/\n①CDH-6.3.2-1.cdh6.3.2.p0.1605554-el7.parcel\n② CDH-6.3.2-1.cdh6.3.2.p0.1605554-el7.parcel.sha1\n③ manifest.json\n\n四、开始安装前配置和预装软件\n安装jdk（每台都需安装）\n验证是否安装jdk java -version\n本地文件传入到服务器中\n安装jdk\n解压：tar -zxvf jdk-8u181-linux-x64.tar.gz\n\nls\n\n修改文件名：mv jdk1.8.0_181 jdk1.8\n\n※创建java文件夹 mkdir /usr/java\n\n将jdk移动到新创建的java文件夹中 mv jdk1.8 /usr/java\n\n配置环境变量：vi /etc/profile\n# set java environment\nexport JAVA_HOME=/usr/java/jdk1.8\nexport JRE_HOME=${JAVA_HOME}/jre\nexport CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib:$CLASSPATH\nexport JAVA_PATH=${JAVA_HOME}/bin:${JRE_HOME}/bin\nexport PATH=$PATH:${JAVA_PATH}\n\n环境变量立即生效 source /etc/profile\n\n验证是否生效  java -version\n\n\n\n\n\n修改服务器的有关配置（每台机器均需配置）\nSSH无密码登录配置(所有节点相互免秘钥)\n思路：\n第一台机器生成秘钥文件id_rsa.pub，拷贝到其它机器，然后所有机器把此秘钥追加到自己的authorized_keys中，\n第二台机器生成秘钥文件id_rsa.pub，拷贝到其它机器，然后所有机器把此秘钥追加到自己的authorized_keys中，\n以此类推。\n\n\n生成秘钥文件\n\nssh-keygen -t rsa\ncd /root/.ssh\nls\n\n\n追加到自己的authorized_keys中\n\ncat id_rsa.pub &gt;&gt; authorized_keys\n\n\n赋权\n\nchmod 700 /root/.ssh\nchmod 600 authorized_keys\n\n\n拷贝秘钥文件\n\n将s1，s2中的authorized_keys中的内容拷贝到m中的authorized_keys中\nscp /root/.ssh/authorized_keys root@Sip1:/root/.ssh/authorized_keys  将m中的秘钥添加到s1中\nscp /root/.ssh/authorized_keys root@Sip2:/root/.ssh/authorized_keys  将m中的秘钥添加到s2中\n\n\n问题：\n ① ssh无法连接成功 read: Connection reset by peer\n\necho “”&gt;authorized_keys  清空文件内容\n\n通过 ssh -v localhost 仍然无法连接本机ssh\n\n删除ssh  rm -rf .ssh\n\nssh_exchange_identification: read: Connection reset by peer\n\n通过 vi /etc/hosts.allow  \n修改 sshd配置  sshd:ALL ##允许所有ip主机均能连接本机\n保存\n再通过ssh root@ip试试能否可行\n\n② ping无法成功\n※经核实，通过ping内网可完成服务器之间的互通，因此hosts文件均需使用内网信息\n\n通过ifconfig -a 获取ip内网相关信息\n\n\n\n\n\nhost修改\n执行： vi /etc/hosts\n\n添加ip以及集群名称：\n\n192.168.0.1 master\n192.168.0.2 slave1\n192.168.0.3 slave2\nscp /etc/hosts  root@192.168.0.2:/etc/hosts\nscp /etc/hosts  root@192.168.0.3:/etc/hosts\n\n\n# 修改hostname\nvim /etc/sysconfig/network\nNETWORKING=yes\nHOSTNAME=master\n#\nvim /etc/hostname\n# 各自服务器修改服务名\n\n重启服务器 reboot\n\n\n\nselinux关闭\nsestatus -v\n\n\n关闭防火墙\nsystemctl status firewalld\n\n\n\n\nNTP服务器设置\n查看当前时间  date -R\n\n\n安装MySQL(主)\ncentos7自带的是mariadb，需要先卸载掉\nrpm -qa|grep mariadb\nrpm -e –nodeps mariadb-libs-5.5.64-1.el7.x86_64\n\n\n下载mysql，将其上传到服务器中\nMySQL官网 选择版本\n\n\n将下载的mysql进行解压\n下载tar包：(不用mysql8版本，使用mysql5.7)\nwget https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-8.0.11-linux-glibc2.12-x86_64.tar.gz\n\n创建文件夹\n\nmkdir /usr/local/mysql\n\n\n移动tar包 (mysql-5.7.11-linux-glibc2.5-x86_64.tar.gz)\n\nmv mysql-8.0.11-linux-glibc2.12-x86_64.tar.gz /usr/local/mysql/mysql-8.0.11-linux-glibc2.12-x86_64.tar.gz\n\n\n进入文件夹：cd /usr/local/mysql\n\n解压： tar -zxvf mysql-8.0.11-linux-glibc2.12-x86_64.tar.gz\n\n重命名： mv mysql-8.0.11-linux-glibc2.12-x86_64 mysql8.0\n\n创建data文件夹 \n\ncd /usr/local/mysql/mysql8.0/\nmkdir ./data\n\n\n\n\n创建用户和用户组\n用户组： groupadd mysql\n用户：useradd -g mysql mysql\n授权：\nchown -R mysql:mysql /usr/local/mysql\nchmod -R 755 /usr/local/mysql\n\n\n\n\n初始化数据库\ncd bin\n./mysqld –initialize –user=mysql –datadir=/usr/local/mysql/mysql8.0/data –basedir=/usr/local/mysql/mysql8.0\n得到临时密码： L3Hok!e#F3yP  i2yiwKW7?irs\n\n\n进入mysql5/support-files \n\n修改配置文件路径 \ncp /usr/local/mysql/mysql5/my-default.cnf /etc/my.cnf\n\n\n编辑配置文件my.cnf，添加配置如下\n[root@localhost bin]#  vi /etc/my.cnf\n\n\n\n[mysqld]datadir=/usr/local/mysql/mysql5/dataport=3306sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLESsymbolic-links=0max_connections=600innodb_file_per_table=1lower_case_table_names=1\n\n建立MySQL服务\n# 添加Mysql到系统服务cp -a ./support-files/mysql.server /etc/init.d/mysql\n\nchmod +x /etc/init.d/mysqlchkconfig –add mysql# 检查服务是否生效chkconfig –list mysql\n\n\n启动mysql服务\n\nservice mysql start 或者 support-files/mysql.server start\n./support-files/mysql.server:行239: my_print_defaults: 未找到命令\n原因：因为没有修改mysql的配置文件\n修改文件 vim support-files/mysql.server\n\n\nservice mysql status    –查看mysql的状态\n\n\n\n\n登录MySQL\nmysql -uroot -p\n\n-bash: mysql: 未找到命令\n\n配置系统文件\n# set java environment\nexport JAVA_HOME=/usr/java/jdk1.8\nexport JRE_HOME=${JAVA_HOME}/jre\nexport MYSQL_HOME=/usr/local/mysql/mysql8.0\nexport CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib:$CLASSPATH\nexport JAVA_PATH=${JAVA_HOME}/bin:${JRE_HOME}/bin\nexport PATH=${MYSQL_HOME}/bin:$PATH:${JAVA_PATH}\n\n\n\n登录存在问题：\n\nERROR 2002 (HY000): Can’t connect to local MySQL server through socket ‘/tmp/mysql.sock’ (2)\n\n有可能是 my.cnf 配置文件中设置了 [mysqld] 的参数 socket ，而没有设置[client]的参数socket\nmysql.sock 文件有什么用：\nmysql 支持 socket 和 TCP/IP 连接。那么 mysql.sock 这个文件有什么用呢？连接localhost通常通过一个Unix域套接字文件进行，一般是/tmp/mysql.sock。如果套接字文件被删除了，本地客户就不能连接。/tmp 文件夹属于临时文件，随时可能被删除。\n\nMySQL将其放在/tmp目录，而linux将其放在/var/mysql目录。所以我们只需要创建一个软链接，输入以下两个命令即可：如果/var/下没有mysql目录，则需创建\n创建目录：sudo mkdir /var/mysql\n创建软链接：sudo ln -s /tmp/mysql.sock /var/mysql/mysql.sock\n如果提示： ln: creating symbolic link /data/mysqldata/mysql.sock&#39; to/tmp/mysql.sock’: File exists删除之前的mysql.sock文件\n\n解决办法：\n\n创建软连接\n\nmy.cnf文件中添加client信息\n[mysqld]\ndatadir=/usr/local/mysql/mysql8.0/data\nport=3306\nsql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES\nsymbolic-links=0\nmax_connections=600\ninnodb_file_per_table=1\nlower_case_table_names=1\nsocket=/var/mysql/mysql.sock\n[client]\nport=3306\nsocket=/var/mysql/mysql.sock\n\n\n\n\n\n\n\n\n\n登录成功后，修改临时密码 SET PASSWORD FOR 'root'@'localhost'= \"RootXXX\"\n\n开放3306端口允许使用用户名root从任何主机连接到mysql服务器GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'RootXXXNEW' WITH GRANT OPTION;\n\nERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘IDENTIFIED BY ‘RootXXXNEW’ WITH GRANT OPTION’ at line 1\n\nMySQL8的使用方式不一样\n\n在 my.cnf 中 添加： default_authentication_plugin=mysql_native_password\n\nCREATE USER 'root'@'%' IDENTIFIED BY 'Root-NewXXX';//这个操作是mysql 8.0中得加的\nGRANT ALL PRIVILEGES ON *.* TO 'root'@'%'WITH GRANT OPTION;//任何远程主机都可以访问数据库 \nFLUSH PRIVILEGES; //需要输入次命令使修改生效 \n\n\n\n\n\n建数据库(用于后边组件安装）# 集群监控数据库\ncreate database amon DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;\n# hive数据库\ncreate database hive DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;\n# oozie数据库\ncreate database oozie DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;\n# hue数据库\ncreate database hue DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;\n\n\n\n\n\nperl服务安装（全部节点）\nyum install perl\n\n\n\n五、安装\n安装Cloudera Manager和CDH（主机器）\n将下载好的cloudera-manager-centos7-cm5.16.1_x86_64.tar.gz解压到主节点的/opt,解压出来的文件夹为cloudera与cm-5.16.1\ntar -axvf cloudera-manager-centos7-cm5.16.1_x86_64.tar.gz -C /opt\n\n\n\n将Parcels相关文件拷贝到相应文件夹中cp CDH-5.16.1-1.cdh5.16.1.p0.3-el7.parcel /opt/cloudera/parcel-repo/ \ncp CDH-5.16.1-1.cdh5.16.1.p0.3-el7.parcel.sha /opt/cloudera/parcel-repo/ \ncp manifest.json /opt/cloudera/parcel-repo/\n\n修改 config.ini ，同步agent到所有节点中\nvi /opt/cm-5.16.1/etc/cloudera-scm-agent/config.ini\n\n修改 server_host = master\n\n保存退出\n\n将相关文件同步到各个节点中\nscp -r /opt/cm-5.16.1  root@slave1:/opt/\nscp -r /opt/cm-5.16.1  root@slave2:/opt/\n\n\n\n所有节点都建立 cloudera-scm 用户useradd --system --home=/opt/cm-5.16.1/run/cloudera-scm-server/ --no-create-home --shell=/bin/false --comment \"Cloudera SCM User\" cloudera-scm\n\n※如果是在以前的系统上操作的话，例如，以前安装的是CDH5.13.x，现在要安装CDH5.16.1版本,那么创建新的用户也要基于新版本的CDH 进行创建 cloudera-scm 用户。首先要先删除已经存在的 cloudera-scm 用户，然后重新创建\n\nuserdel cloudera-scm\n\n\n\n配置CM的数据库\n导入mysql-connector-java.jar到相应文件目录中\n\n拷贝mysql jar文件到目录 /usr/share/java/\nmkdir /usr/share/java/\n\ncp mysql-connector-java-8.0.16.jar /usr/share/java/\n\nmv /usr/share/java/mysql-connector-java-8.0.16.jar /usr/share/java/mysql-connector-java.jar\n\n※注意jar包名称要修改为mysql-connector-java.jar\n\n\n\n将mysql jdbc driver放入CM的lib中\ncp mysql-connector-java-8.0.16.jar  /opt/cm-5.16.1/share/cmf/lib/\n\n主节点初始化cloudera-manager脚本\n/opt/cm-5.16.1/share/cmf/schema/scm_prepare_database.sh mysql -hlocalhost -uroot -pRoot-123 --scm-host localhost scm scm scm\n/opt/cm-5.16.1/share/cmf/schema/scm_prepare_database.sh mysql -hmaster -uroot -pRoot-123 --scm-host master scm scm scm\n说明：这个脚本就是用来创建和配置CMS需要的数据库的脚本。各参数是指：\nmysql：数据库用的是mysql，如果安装过程中用的oracle，那么该参数就应该改为oracle。\n-hmaster：数据库建立在master主机上面。也就是主节点上面。\n-uroot：root身份运行mysql。-123456：mysql的root密码是***。\n--scm-host master：CMS的主机，一般是和mysql安装的主机是在同一个主机上。\n最后三个参数是：数据库名，数据库用户名，数据库密码。\n注意:如果执行的时候报一下错误,可能是配置host的有问题，127.0.0.1 localhost.master 这个localhost不能少\n\n\n\nERROR com.cloudera.enterprise.dbutil.DbProvisioner  - Exception when creating/dropping database with user ‘root’ and jdbc url ‘jdbc:mysql://localhost/?useUnicode=true&amp;characterEncoding=UTF-8’\n解决：在hosts文件中，修改 127.0.0.1 master master   其他节点也需修改\n\n※如果是在以前的系统上操作的话，例如，以前安装的是CDH5.13.x，现在要安装CDH5.16.1版本，而是用的还是以前的 MySQL 那么，要先删除 msyql 中已经存在的 scm 数据库，否则会报数据库已经存在，不能被创建。\n\n存在无法初始化成功的问题：\n\n\n\n\n\n\n\n\n\n\n\n  - 将mysql-connector-java.jar传入到相应文件夹中\n启动Server，agent服务# 开启服务 必须先启动  Agent   再启动server\n#主节点及其他节点\n/opt/cm-5.16.1/etc/init.d/cloudera-scm-agent start\n#主节点\n/opt/cm-5.16.1/etc/init.d/cloudera-scm-server start\n问题：cloudera-scm-server 已死，但 pid 文件存在\n\ncd /opt/cm-5.16.1/log/cloudera-scm-server\n\n/opt/cm-5.16.1/share/cmf/schema/scm_prepare_database.sh mysql cm -hmaster -uroot -pRoot-123  –scm-host master scm scm scm\n\n依旧存在上述报错问题\n\n不同版本mysql，语法有点出入， 原来5.7： GRANT ALL ON itat_shop.* to &#39;itat&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;itat123&#39;; mysql-8.0.11-winx64： GRANT ALL ON itat_shop.* to &#39;itat&#39;@&#39;localhost&#39;即可。\n\n\nCREATE USER 'scm'@'%' IDENTIFIED BY 'Root-123scm';\nGRANT ALL PRIVILEGES ON *.* TO 'scm'@'%'WITH GRANT OPTION;\nFLUSH PRIVILEGES;\n\n一直初始化存在问题，可能由于MySQL的jar版本问题，mysql8版本过高？？？\n\n通过核实，CDH5 和 CDH6 仅支持mysql5版本\n# cloudera对JAVA mysql 操作系统均有要求 详情可以参考下面官方文档\nhttps://docs.cloudera.com/documentation/enterprise/release-notes/topics/rn_consolidated_pcm.html#cdh_cm_supported_os\nhttps://docs.cloudera.com/documentation/enterprise/release-notes/topics/rn_consolidated_pcm.html#cdh_cm_supported_db\nhttps://docs.cloudera.com/documentation/enterprise/release-notes/topics/rn_consolidated_pcm.html#pcm_jdk\n\n\n\n\n\n修改mysql的版本，删除之前的mysql版本\n停止服务\n\nservice mysql start\n\n\n查看mysql服务器\n\nrpm -qa | grep mysql\n通过 rpm -e –nodeps 卸载所有mysql服务\n\n\n删除残余文件\nrm -rf /etc/my.cnf\nrm -rf /usr/lib/mysql\nrm -rf /usr/lib64/mysql\nrm -rf /usr/include/mysql\nrm -rf /usr/share/mysql\nrm -rf /var/log/mysqld.log\nrm -rf /var/lib/mysql\n\n重新安装mysql \n\nvi /etc/my.cnf\n[mysqld]\n# Remove leading # and set to the amount of RAM for the most important data\n# cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.\n# innodb_buffer_pool_size = 128M\n# Remove leading # to turn on a very important data integrity option: logging\n# changes to the binary log between backups.\nlog_bin=/var/lib/mysql/mysql_binary_log\n\n# These are commonly set, remove the # and set as required.\n basedir =/usr/local/mysql/mysql5\n datadir =/usr/local/mysql/mysql5/data\n port =3306\n# server_id = .....\n socket =/var/mysql/mysql.sock\n\n# Remove leading # to set options mainly useful for reporting servers.\n# The server defaults are faster for transactions and fast SELECTs.\n# Adjust sizes as needed, experiment to find the optimal values.\n read_buffer_size = 2M\n join_buffer_size = 128M\n sort_buffer_size = 8M\n read_rnd_buffer_size = 16M\nsql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES\nkey_buffer_size = 32M\nmax_allowed_packet = 32M\nthread_stack = 256K\nthread_cache_size = 64\nquery_cache_limit = 8M\nquery_cache_size = 64M\nquery_cache_type = 1\nmax_connections = 550\n\n[client]\nport=3306\nsocket=/var/mysql/mysql.sock\n[mysqld_safe]\nlog-error=/var/log/mysqld.log\npid-file=/var/run/mysqld/mysqld.pid\nsql_mode=STRICT_ALL_TABLES\n\n\n\n\n- mysql: [ERROR] unknown variable &#39;innodb_file_per_table=1&#39;  \n\n  - 删除my.cnf中的innodb配置\n\n- ERROR 2002 (HY000): Can&#39;t connect to local MySQL server through socket &#39;/var/mysql/mysql.sock&#39; (2)\n\n  - 启动mysql\n\n- The server quit without updating PID file (/[FAILED]l/mysql/mysql5/data/master.pid\n\n  - 通过核实查看 cat /var/log/mysqld.log\n  - [ERROR] You have enabled the binary log, but you haven&#39;t provided the mandatory server-id. Please refer to the proper server start-up parameters documentation\n    - 在设置bin log日志的时候，没有设置server_id参数。server-id参数用于在复制中，为主库和备库提供一个独立的ID，以区分主库和备库；开启二进制文件的时候，需要设置这个参数。\n  - Could not create unix socket lock file /var/mysql/mysql.sock.lock.\n    - chown -R mysql:mysql /var/mysql/\n\n- 启动cloudera的server agent相关服务\n\n- 启动需要点时间，可以查看数据库scm中的hosts表，如果里面出现节点信息表示server启动完成\n安装Hadoop集群\n登录http://119.3.29.51/:7180,默认登录用户名和密码都是admin\n无法访问华为云\n在华为云平台管理后台中添加安全策略。\n\n\n\n\n勾选用户协议，进行下一步\n\n选择免费版本，继续\n\n下一步\n\n选择本地服务器，全勾选，继续\n\n\n\n​       ❎ 在本机集群中无法正确显示ip地址以及hostname\n​              解决：修改每个节点中的hosts文件，注释 127.0.0.1 hostname 两行配置\n\n选择离线CDH版本，继续\n\n\n等待安装Parcel\n\n继续下一步，自动检测主机正确性\n\n\n禁用大页面.（每台主机都要做）\n\n\n执行命令：echo never &gt; /sys/kernel/mm/transparent_hugepage/defragecho never &gt; /sys/kernel/mm/transparent_hugepage/enabled\n执行命令，修改配置：vim /etc/rc.local增加两行：echo never &gt; /sys/kernel/mm/transparent_hugepage/defragecho never &gt; /sys/kernel/mm/transparent_hugepage/enabled\n执行命令，赋予权限chmod +x /etc/rc.d/rc.local\n\n\n\n\n\n自定义安装\n\n​        \n\n默认角色分配。（若存在弹框提示，多返回几次，再继续即可）\n\n数据库连接 hive\n\n\n测试Hive连接时，提示： Unable to connect to database on host ‘master’ from host ‘maste\n\n进入mysql数据库，进行重新授权，并刷新\n\nGRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'RootXXX' WITH GRANT OPTION;\nFLUSH PRIVILEGES;\n\n\n\n\n\n自动安装相关配置\n\n安装成功\n\n最终界面展示\n\n\n\n\n\n","plink":"http://82u0q0.coding-pages.com/2020/08/17/Hadoop集群部署/"},{"title":"闲潭小记","date":"2020-08-11T02:16:37.000Z","date_formatted":{"ll":"2020年8月11日","L":"2020/08/11","MM-DD":"08-11"},"updated":"2020-08-17T06:52:59.822Z","content":"\n","plink":"http://82u0q0.coding-pages.com/2020/08/11/闲潭小记/"},{"title":"hexo部署到Coding","date":"2020-08-05T08:44:38.000Z","date_formatted":{"ll":"2020年8月5日","L":"2020/08/05","MM-DD":"08-05"},"updated":"2020-08-17T06:54:44.699Z","content":"\nwyohoxtanBlog部署到Coding的原因：国内的访问速度够快，可以提交百度收录（GitHub 禁止了百度的爬取）\nps: 最近一段时间的中美冲突，对应的国外的地区主义冒头，感觉github会存在各种加载以及限制问题。因此考虑将自身博客相关内容放入Coding中进行DevOps管理。\n\n1、创建项目\n进入Coding官网 ,点击免费使用,进行注册登录\n\n\n\n\n创建项目 选择DevOps项目，创建项目\n配置公钥\n配置 SSH 公钥方法与 GitHub方式差不多。点击头像-&gt;【个人设置】-&gt;【SSH公钥】-&gt;【新增公钥】\n\n名称随便起。获取id_rsa.pub   \n\ncd /Users/a/.ssh  \ncat id_rsa.pub \n\n\n\nps:选择永久有效，若提示危险操作，需要填写密码，就填写注册的Coding的密码，若注册是没设置，在个人设置服务密码里面可以进行设置。\n\n验证SSH是否通过：\n\nssh -T git@e.coding.net\n## 有如下提示，说明配置成功\n## Coding 提示: Hello wyohoxtan与小伙伴们, You've connected to Coding.net via SSH. This is a personal key.\n## wyohoxtan与小伙伴们，你好，你已经通过 SSH 协议认证 Coding.net 服务，这是一个个人公钥.\n\n\n\n\n配置hexo的_config.xml文件\n点击新建项目，代码 ssh  复制：git@e.coding.net:wyohoxtanblog/wyohoxtanblog/wyohoxtanblog.git\n\n\n\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repo: \n    github: git@github.com:wyohoxtan/wyohoxtan.github.io.git \n    coding: git@e.coding.net:wyohoxtanblog/wyohoxtanblog/wyohoxtanblog.git\n  branch: master\n\n配置完，执行以下命令\nhexo clean\nhexo g\nhexo d\n\n查看代码，在代码仓库中查看\n\n\n\n静态网站\n点击持续部署 -&gt; 静态网站 -&gt; 新建： \n\n网站名随便取一个\n\n\n自定义域名（有域名者） \n\n点击右上角的设置\n进行域名绑定处理\n\n\n\n\n\n\n\n\n\n\n","plink":"http://82u0q0.coding-pages.com/2020/08/05/hexo部署到Coding/"},{"title":"知识杂记","date":"2020-08-03T06:27:42.000Z","date_formatted":{"ll":"2020年8月3日","L":"2020/08/03","MM-DD":"08-03"},"updated":"2020-08-18T02:19:58.689Z","content":"Welcome to my miscellany!Quick StartMac解决终端显示乱码※ 打开终端的偏好设置\n※ 描述文件 —&gt; Basic —&gt; 高级 —&gt; 文本编码 改为Unicode（UTF-8）\nYaml与Yml的区别* YML文件格式是YAML (YAML Aint Markup Language)编写的文件格式\n   More info: 参考链接\nTomcat手动启动JavaWeb项目※ 将javaWeb项目打包成war，存放在Tomcat的webapps文件夹中\n※ 配置Tomcat的conf下的server.xml,context.xml文件\n &lt;!--  server.xml -->\n&lt;Host name=\"localhost\"  appBase=\"webapps\"\n            unpackWARs=\"true\" autoDeploy=\"true\">\n      &lt;Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"\n             prefix=\"localhost_access_lo g.\" suffix=\".txt\"\n             pattern=\"%h %l %u %t &amp;quot;%r&amp;quot; %s %b\" />\n      &lt;Context  path=\"\" docBase=\"/war名\" reloadable=\"true\">\n      &lt;/Context>\n&lt;/Host>\n&lt;!-- context.xml -->\n&lt;Resource driverClassName=\"com.mysql.jdbc.Driver\" \n          maxActive=\"100\" maxIdle=\"2\" maxWait=\"5000\" \n          name=\"jdbc/cplh\" \n          username=\"root\"           \n          password=\"XXX\" \n          type=\"javax.sql.DataSource\" \n          url=\"jdbc:mysql://localhost:3306/pcmdb?serverTimezone=UTC\"/>\n注：docbase是web应用和本地路径，path是tomcat访问这个应用的URL路径\nMysql替换Oracle中的to_number两种方式：cast(value as type) 、 convert(value,type)\n\nselect cast(numA as unsigned int) /*整型*/\n\nselect cast(numA as decimal(10,1)) /*浮点型*/\n\nps：（10,1）代表数字共十位，小数点后两一位。\n###MySQL、Oracle中的Between and\nmysql ,oracle 中的Between and 均是包含边界\n\neg:select * from info_customer where cus_id between 2 and 4;\n(实质 也等于  select * from info_customer where cus_id  >=2 and  cus_id &lt;=4)\n\n结果 2,3,4\nEclipse Git 冲突处理1、通过 fetch，pull将代码从远程git仓库拉到本地\n\n\n\n\n① 只更新 “远程服务器 –&gt; 本地服务器” 简称(Fetch)\n② 更新后，当前更新的项目与Git Repositories都会有类似一个向下的箭头，这代表“远程服务器”有东西更新到本地仓库，具体数量就是箭头隔壁的数字\n③ 远程服务器 –&gt; 本地服务器” 与 “ 本地服务器 –&gt; 本地代码” 都执行 简称(Pull)\n\n2、提交代码\n\nCommit : “ 本地代码 –&gt; 本地服务器”\nPush :  “本地服务器 –&gt; 远程服务器” \n\n3、先修改完代码还没有commit，在执行Fetch,那你还没有feel到代码冲突。\n\nI.只要你commit到本地服务器，IDE编译器就自动告诉你，已经冲突，要求你立刻解决。\n\nII.如果你比较任性的话。直接想Commit And Push, IDE编译器也会很任性的回复你这样的图\n\n\n\n\n\n应该要执行一下 Pull ，把 刚才Fetch 的代码植入”本地代码”，会存在冲突\n若执意Push代码，提示：Repository state ： Conflicts\n解决办法：\n通过定位当前冲突代码，执行 team -&gt; merge Tool -&gt; 进行代码的修改，解决冲突\n若修改后，还存在冲突表示，执行  team -&gt; Add to Index  告诉IDE 已解决冲突\n再进行 commit 或 commit and push 均可\n\n\n\nMore info: Generating\nPostgreSQL 表空间https://www.cnblogs.com/yanshw/p/11351136.html\nMac 状态栏收缩软件 vanillahttps://matthewpalmer.net/vanilla/\n$ vanilla\nEclipse启动存在相关问题1、One of the two will be used. Which one is undefined.\n问题：objc[6040]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/bin/java (0x10e0f04c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x10f1174e0). One of the two will be used. Which one is undefined.\n\n通过eclipse中的项目的java build path 中设置 jdk版本，选定 默认jdk版本\nNpm更新存储问题\nmac安装报错Error: EACCES: permission denied, access ‘/usr/local/lib/node_modules\n\n原因: 执行命令行命令时没有获得管理员权限\n\n解决方案：在命令行前面添加sudo获取管理员权限，输入管理员密码就行\n\n\nMac替代xshell的工具\nRoyal TSX\n\nhttps://www.royalapps.com/ts/mac/download\n\n下载安装后，在偏好里选择plugin 添加组件\n\ntermial\nFile Transfer\n\n\n\n\nFile 创建 Document,保存\n\n在文件夹下，添加termial\n\n\n\n设置用户名密码\n\n\n\n设置 File Transfer 。和Terminal一样\n\n\n查看Linux硬盘大小，内存等\n查看CPU核数\n\ncat /proc/cpuinfo | grep \"cpu cores\" | uniq\n\n查看内存总数\n\ncat /proc/meminfo | grep MemTotal\n\n查看硬盘相关情况\n\ndf -h \n\n","plink":"http://82u0q0.coding-pages.com/2020/08/03/知识杂记/"},{"title":"InstallAnywhere打包web单机版","date":"2020-01-03T07:37:30.000Z","date_formatted":{"ll":"2020年1月3日","L":"2020/01/03","MM-DD":"01-03"},"updated":"2020-08-17T06:55:07.709Z","content":"InstallAnywhere打包webInstallAnywhere,web\n\n一、准备工作1、下载InstallAnywhere2020，并安装\n\n① 注册，下载地址：https://resources.flexera.com/web/www/landing/eval-download-installanywhere.html?id=IA-PRE（21天试用期）\n\n② 安装\n\n\n2、下载JDK1.8，并安装\n3、下载MySQL8 免安装\n4、下载Tomcat8.5 免安装\n5、本地创建文件夹，将当前的jdk，mysql，Tomcat复制到当前文件夹中\n二、创建Project※ 打开InstallAnywhere 2020，建立Basic Project Template，选择Advanced Designer,设置Title，Name等\n\nProject – info ：填写安装程序标题，安装文件名称，产品名称，其他项目可不填写。\n\nProject – Description：填写产品描述、开发商、开发商主页、邮件等。\n\nInstaller UI – Look&amp;Feel：自定义安装界面、标题、标题颜色等。\n\nOrganization：组织机构信息，尚未研究。\n\nPre – install ：安装前准备，可以自定义安装步骤，修改各个步骤的标题及内容。\n\nInstall ：至关重要的一步，首先准备好你要打包的文件（tomcat免安装版、mysql免安装版、jdk）\n\n\n※ 设置本地语言\n\nProject -&gt; Locales -&gt; 选择需要的本地化语言\n\n三、设置环境变量Install -&gt;，按钮Add Action…&gt;Set System Environment Variable&gt;Add &gt;，\n设置JAVA_HOME和CATALINA_HOME,CATALINA_DIR,PATH 四个系统环境变量。其中$USER_INSTALL_DIR$表示用户选择的安装路径。\nJAVA_HOME  $USER_INSTALL_DIR$\\jdk1.8\nCATALINA_HOME $USER_INSTALL_DIR$\\tomcat8.5\nCATALINA_DIR $USER_INSTALL_DIR$\\tomcat8.5\\bin\nPATH  $USER_INSTALL_DIR$\\jdk1.8\\bin;$USER_INSTALL_DIR$\\mysql8\\bin;$USER_INSTALL_DIR$\\tomcat8.5\\bin;\nC:\\Windows\\System32 \n将jdk,tomcat,mysql 通过按钮Add Files…添加进来放在 User Install Folder直接目录下\n四、注册服务1、安装免安装mysql\n\n在本地下载完成mysql后，解压，进行初始化处理，并创建数据库以及对应的表\n\n初始化mysql\n修改mysql登录密码\n创建数据库\n创建表\n\n\n\n当前解压版mysql无data文件夹(存放数据的文件夹，无或者内容不对会启动不成功)，无my.ini文件\n\n通过创建my.ini文件\n[mysqld]\n# 设置3306端口\nport=3306\n# 设置mysql的安装目录\nbasedir= D:\\ProjectJKTY-2017\\mysql8.0\n# 设置mysql数据库的数据的存放目录\ndatadir= D:\\ProjectJKTY-2017\\mysql8.0\\data\n# 允许最大连接数\nmax_connections=200\n# 允许连接失败的次数。这是为了防止有人从该主机试图攻击数据库系统\nmax_connect_errors=10\n# 服务端使用的字符集默认为UTF8\ncharacter-set-server=utf8\n# 创建新表时将使用的默认存储引擎\ndefault-storage-engine=INNODB\n# 默认使用“mysql_native_password”插件认证\ndefault_authentication_plugin=mysql_native_password\n[mysql]\n# 设置mysql客户端默认字符集\ndefault-character-set=utf8\n[client]\n# 设置mysql客户端连接服务端时默认使用的端口\nport=3306\ndefault-character-set=utf8\n\n通过进入mysql路径下，执行 mysqld --initialize 生成data文件夹及其相关内容\n\n执行mysql的服务安装 ： mysqld --install\n\n执行启动mysql操作 ： `net start mysql ``\n\n注：第一次登陆MYSQL时，会提示要求输入初始密码，这是考虑安全因素，命令：\nmysqld --initialize会随机生成密码。\n\n初始密码在data文件夹下的xxx.err文件中，可以用记事本打开，用ctrl+f 查找功能找到如下一行记录：\n[Note] A temporary password is generated for root@localhost: NZ+uhXPq1zN.\n其中NZ+uhXPq1zN.即为初始密码（注意.号不要漏了）\n进入后可以用如下命令修改，这里密码改为root：\n\n\n\nALTER USER 'root'@'localhost' IDENTIFIED BY 'RootXXX';\n\n进行mysql的数据库，数据库数据导入操作（按照installAnywhere中的mysql安装步骤走）\n\n创建mysql数据库\nmysql8\\bin\\mysql -uroot -pRootXXX< \\mysql8\\create.sql\n\n\n\n\n\n将已有数据库数据导入到mysql数据库中\nmysql8\\bin\\mysql -hlocalhost  -uroot -pRootXXX pcmdb < \\mysql8\\testJkty.sql\n\nmysql8\\bin\\mysql -hlocalhost  -uroot -pRootXXX pcmdb < \\mysql8\\jktyView.sql\n\n\n\n\n添加按钮Add Action…&gt;Motify Text File-Single File&gt;Add&gt;,然后在Installed file选中mysql安装目录下的my.in(如果没有这个文件，请先创建这样一个文件，内容为空),其中Additional Text选中第一个prepend,在文本框中输入:\n\n\n[mysqld]\nbasedir = $USER_INSTALL_DIR$\\mysql8\ndatadir = $USER_INSTALL_DIR$\\mysql8\\data\ndefault-character-set = utf8\nset-variable=max_connections=1000\n[WinMySQLAdmin]\nServer=$USER_INSTALL_DIR$\\mysql5.0\\bin\\mysqld-nt.exe\nuser=root\n[client]\nport=3306\nuser=root\n\n将该Motify Text File-Single File移动到Panel: Install Complete后面。\n2、注册mysql服务：\n\n在Post-install中，addAction 选择”Execute Script/Batch file” 在Comment中取名为”注册MySQL服务”，在Script中写入\nCall \"$USER_INSTALL_DIR$/mysql8/bin/mysqld\" -remove   \nCall \"$USER_INSTALL_DIR$/mysql8/bin/mysqld\" -install  \n\n\n3、启动mysql：\n\n在Post-install中，addAction 选择”Execute Script/Batch file” 在Comment中取名为”启动MySQL”，在Script中写入\n\nnet start mysql\n4、启动Tomcat\n\n在Post-install中，addAction 选择”Execute Script/Batch file” 在Comment中取名为”启动Tomcat”，在Script中写入\n\n$USER_INSTALL_DIR$/tomcat8.5/bin/startup.bat\n5、complete\n相关安装action：\n\n相关安装问题汇总：① mysql服务无法安装，无法启动相关服务\n\nwin10 彻底删除mysql\n\n1. 停止MySQL服务\n　　开始 -> 所有应用 -> Windows管理工具 -> 服务，将MySQL服务停止。\n2. 卸载mysql server\n　　控制面板\\所有控制面板项\\程序和功能，将mysql server卸载掉。\n3. 将MySQL安装目录下的MySQL文件夹删除（我的安装目录是C:\\Program Files (x86)\\MySQL）\n4. 运行“regedit”文件，打开注册表。\n　　删除`HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Services\\Eventlog\\Application\\MySQL`文件夹\n　　删除`HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet002\\Services\\Eventlog\\Application\\MySQL`文件夹。\n　　删除`HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Eventlog\\Application\\MySQL`的文件夹。\n　　如果没有相应的文件夹，就不用删除了。\n5. 删除C盘下的“C:\\ProgramData\\MySQL ”文件夹，如果删除不了则用360粉碎掉即可，\n　　该programData文件默认是隐藏的，设置显示后即可见，或者直接复制 C:\\ProgramData 到地址栏回车即可进入！将整个MySQL文件夹删除掉。。。\n6. 开始 -> 所有应用 -> Windows管理工具 -> 服务\n　　如果已经将MySQL卸载，但通过“开始 -> 所有应用 -> Windows管理工具 -> 服务”查看到MySQL服务仍然残留在系统服务里。又不想改服务名，改怎么办呢。只要在CMD里输入一条命令就可以将服务删除：\n　　sc delete mysql //这里的mysql是你要删除的服务名, 这样一来服务就被删除了。\n\n重装MySQL数据库了！！！\n② dsName(JNDI):jdbc/cplhERROR! null\n\n在Context.xml 中配置 数据库相关信息，server.xml中不做数据库的配置\n\n\n\n③  在mysql命令行下执行sql文件\n https://blog.csdn.net/qq_36501591/article/details/80354924\n指导材料：\nhttps://blog.csdn.net/number_89757/article/details/80643865\nhttps://www.cnblogs.com/martin-roger/p/5912271.html\nhttps://www.cnblogs.com/S-E-P/archive/2010/01/10/2045078.html\nhttps://blog.csdn.net/ljz2009y/article/details/7707237\nhttps://blog.csdn.net/y19910825/article/details/53740045\nhttps://wenku.baidu.com/view/db30494233d4b14e8424684d.html\nhttps://www.taodocs.com/p-301026194.html\n\n","plink":"http://82u0q0.coding-pages.com/2020/01/03/InstallAnywhere打包web单机版/"},{"title":"闲潭杂记","date":"2019-12-29T03:05:01.000Z","date_formatted":{"ll":"2019年12月29日","L":"2019/12/29","MM-DD":"12-29"},"updated":"2020-08-17T06:53:10.265Z","content":"闲散文章随笔\n《六朝志怪》\n​    开篇 李贺《神弦》\n​    所谓六朝： 三国，晋，宋，齐，梁，陈\n​    逸史所谓何？书中有言：继续活在人们口头上的传说一旦被记录下来，就成为了具有浓厚小说意味的逸史\n\n我爱你，不光是因为你的样子，还因为和你在一起时我的样子；我爱你不光是因为你为我而做的事，还因为，为了你，我能做的成的事；我爱你，因为你能唤出我最真的那部分；我爱你，因为你穿过我的心灵的旷野，如同阳光透过水晶般容易。\n\n随笔：\n​      近来，日益消退的疫疾，以及满是损人利己的举措，让本就烦闷的内心又增雾霾。说好的在家办公，说好的有效处理相关工作问题，也愈发地坐立不安，心神不宁。老是走神的自己，无法平复的积怨，让一切又变得那么的磕磕绊绊，无法顺畅，进而陷入到一种死循环的陷进中，难以自持。\n​      生活好像总是这般，生下来，活下去，真够艰难。每个人心中的那杆秤，总是被人心压得狂摆不止，岌岌可危。道德的，法制的，经济的，文化的，思想的。该表达的，该陈述的，该倾诉的，该讨论的，该接纳的，好像都变得寡淡无味，不可自知。\n​      乖乖做好自己就好。理清楚自己的内心，理清未来所需前往的地方，坚强武装好自我，坚定脚步，一步一步走过去，与爱的人。\n\n","plink":"http://82u0q0.coding-pages.com/2019/12/29/闲潭杂记/"},{"title":"hexo_inside博客主题优化","date":"2019-12-10T13:10:31.000Z","date_formatted":{"ll":"2019年12月10日","L":"2019/12/10","MM-DD":"12-10"},"updated":"2020-08-17T07:03:39.465Z","content":"Hexo inside主题优化hexo inside 优化 \n\nhexo系列问题※ 部署到github时会删掉README文件​    △ 分析：\n\n ① 执行hexo g后，会把source文件里的.md格式的文件渲染为html文件并放到public下面；\n ② 继续执行hexo d后，会将public下面的所有文件提交到对应的XXX.github.io仓库中；\n ③ 由于本地public文件夹无README.md文件，在提交public文件时，github会认为你把README.md文件      删掉了，同时github也会删掉仓库里的README.md文件\n\n   △ 解决：\n\n① 在本地source文件夹内创建一个 README.md\n② 修改Hexo根目录下的_config.yml文件，将skip_render参数的值设置为README.md\nskip_render: README.md\n\n//  为什么需要设置这一步呢？\n//  因为你执行hexo g命令时，hexo会默认将source文件里的所有md文件渲染为html文件放到public中，\n//  同时README.md会被渲染为README.html文件放到public文件里\n//  加上这段设置，就是告诉hexo的解析器，你在渲染source文件里的md文件时，跳过README.md文件\n\nInside主题改造※ 博客头像、简介、目录、链接、搜索、主题、字体、加载速度、评论、访问量config.yml文件改造\n​    △ 头像设置\n\n① 在当前主题中source创建img文件夹，将自己头像照片存放到文件夹中\n② 在主题配置文件 _config.yml 文件，设置以下值：\n# 头像url\navatar: /img/avatar.jpg \nfavicon: /img/avatar.jpg\n\n​    △ 目录设置\n  △ 设置添加rss ,github等链接\n\n① 在目录下执行安装hexo插件\nnpm install --save hexo-generator-feed\n② 在config.yml文件中添加插件信息\n# Extensions\n## Plugins: http://hexo.io/plugins/\nplugins: hexo-generate-feed\n③ 在theme目录下的config.yml文件中添加rss配置\n# Set rss to false to disable feed link.\n# Leave rss as empty to use site's feed link.\n# Set rss to specific value if you have burned your feed already.\nrss: /atom.xml\n④ 重新部署\n\n  △ 设置打赏模块\n\n1、下载微信，支付宝的支付图片\n2、将图片放入主题的img文件夹中\n3、设置相应的属性，具体如下：\nreward:\n  # Text which shows at the top.\n  # 显示一句文案\n  text:  交个朋友啦 ☕ .\n  # wechatpay: /img/Wechat.jpg\n  # alipay: /img/Alipy.jpg\n  # Payment Methods\n  # 支付方式列表，注意是数组\n  # qrcode, url and text must be set at least one\n  # wechat, alipay, paypal and bitcoin has a built-in icon,\n  # use `name` to apply\n  methods: \n    # wechat、alipay、paypal、bitcoin 对应四种不同的图标和配色\n    # 此外的任何自定义名称，都需要在语言文件内增加相应的语言，\n    # 同时配色与 appearance.accent_color 一致\n    - name: wechat\n      # 二维码地址\n      qrcode: img/Wechat.jpg\n      # 显示一个链接\n      url: /img/Wechat.jpg\n      # 若设置了 url，则此值会显示为链接的文本，否则为一段普通文本\n      text: 🤝微信🤝\n      # 选中时的颜色\n      color: '#33CC00'\n      # qrcode、url 和 text 必须至少设置一项\n\n    - name: alipay\n      # 二维码地址\n      qrcode: img/Alipy.jpg\n      # 显示一个链接\n      url: /img/Alipy.jpg\n      # 若设置了 url，则此值会显示为链接的文本，否则为一段普通文本\n      text: 🤝支付宝🤝\n      # 选中时的颜色\n      color: '#00CCFF'\n\n注：当前的name中的，需要小写，是内置支付方式\n\n  △ 设置统计字数，访问量\n\n问题思考：如何添加js引用\n统计使用“不蒜子”\n如何处理hexo inside主题布局修改问题\n分析：inside主题是通过AngularJS实现\n① 通过vscode将inside文件夹打开\n② 分析layout文件夹\n通过分析研究 _config.xml 将相关不蒜子统计文件js配置处理添加到文件中\n1、支持通过安装 html-minifier、babel 和 terser 来实现代码压缩。\n\n项目根目录执行（Hexo 根目录，非 themes/inside）：\nnpm install babel-core babel-preset-env html-minifier terser --save\n\n\n2、先进行脚本的安装，再使用不蒜子的页面\n安装方法：主题_config.xml配置文件 plugins 模块 插入 busuanzi.js\n_config.xml\n---------------------------------------------------------------------------------\nplugins: \n    - position: sidebar\n      template: | \n        &lt;script async src=\"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\">&lt;/script>\n#   # Global Inject scripts/styles\n    - //busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\n\n在 _config.xml 文件里找到 footer 下的 custom，写入相关的HTML代码，如：\n_config.xml\n---------------------------------------------------------------------------------\nfooter:\n# Custom text.\n  # 于最后一行添加自定义内容\n  custom: &lt;span id= \"busuanzi_container_site_uv\" style ='display:none'>Total &lt;span id=\"busuanzi_value_site_uv\">&lt;/span> visitors. &lt;/span>&lt;span id=\"busuanzi_container_site_pv\" style = 'display:none'>&lt;span id=\"busuanzi_value_site_pv\">&lt;/span> Views&lt;/span> \n\n安装过程的问题：\n问题一：引用js的问题\n\n通过plugins模块中的Global Inject scripts/styles\n\n问题二：部署后，页面显示的访问量过大\n\n在本地是此有数据量过大问题，部署后就无当前问题\n\n附属链接：\n不蒜子统计常见问题\n\n △ 设置about，search\n\n创建about分类文件夹 \nhexo new page 'about' \n\n完善网页内容\n\n个人相关信息介绍\n\n\n创建分类 categories\n\nhexo new page categories\n\n主题下的categories的index文件，添加type: “categories”到内容中\n\n对应文章中添加categories\n\n在tag前添加 categories\n\ntitle: hexo_inside博客主题优化\ndate: 2019-12-10 21:10:31\ncategories: Hexo\ntags: hexo主题优化\n\n\n\n\n\n\nsearch设置\n\n主题_config.xml中：\n# Search\nsearch:\n  # Display a quick search button in fab\n  # 在页面右下角的 FAB 按钮里显示快捷搜索入口\n  fab: true\n\n  # Render a standalone searh page which can be configured in sidebar menu such as `Search: /search`\n  # 额外生成 search 页面，可配置在 sidebar 导航，如 `Search: /search`\n  page: true\n\n  # 以上两个入口必须至少设置一个，否则视为无效配置\n\n  # Local search\n  # 本地搜索，即生成本地 json 文件\n  adapter:\n    # json 数据的范围，数组\n    range:\n      - post\n      - page\n\n  #   # json 数据的条目限制\n  #   # 假如 `limit:1000`，同时有 800 篇 post，800 篇 page，则最终生成的数据包含：\n  #   # 800 篇 post，200 篇 page\n  #   # 缺省值 `10000`\n    limit: 10000\n\n  #   # 搜索结果分页大小，缺省值 `10`\n    per_page: 5\n\n  # Custom search\n  # 自定义搜索 API\n  # adapter:\n  #   # Used for pagination\n  #   #搜索结果分页大小，缺省值 `10`\n  #   per_page: 5\n    # Optional\n\n    # 显示 LOGO 图片，可选\n    logo: //cdn.worldvectorlogo.com/logos/algolia.svg\n  #   # 此配置项为构造完整的请求对象\n    request:\n  #     # 接口 URL\n      url: https://APPLICATION_ID-dsn.algolia.net/1/indexes/INDEX/query\n  #     # GET 或 POST，不区分大小写，缺省值 `GET`\n      method: post\n  #     # Available variables: :query, :per_page, :current\n  #     # 请求参数，格式视 Content-Type 而定，支持的字符串插值有：\n  #     # 搜索的字符串 `:query`\n  #     # 分页大小 `:per_page`\n  #     # 当前页 `:current`\n      body: '{\"query\":\":query\",\"hitsPerPage\":\":per_page\",\"page\":\":current\"}'\n  #     # 请求头\n      headers:\n        X-Algolia-API-Key: API_KEY\n        X-Algolia-Application-Id: APPLICATION_ID\n        Content-Type: application/json; charset=UTF-8\n      keys:\n        data: hits\n        current: page\n        total: nbPage\n        hits: nbHits\n        time: processingTimeMS\n        # title 对应具体某一条的标题字段\n        title: _snippetResult.title.value\n        # title 对应具体某一条的内容字段\n        content: _snippetResult.content.value\n\n在hexo config.yml 文件中，修改URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: http://82u0q0.coding-pages.com/\n\n\n\n\n△ 使用 valine评论进行配置\n\n配置_config.yml 中的 plugins中的valine\n\n    - /js/Valine.min.js\n    - /js/av-min.js\n    - position: comments\n      template: |\n        &lt;div id=\"vcomment\">&lt;/div>\n        &lt;script>\n          new Valine({\n            el: '#vcomment',\n            appId: 'XXX',\n            appKey: 'XXX',\n            path: decodeURIComponent(location.pathname)\n          })\n        &lt;/script>\n\n由于考虑到线上的valine的js存在访问加载等的相关问题，将线上js做成本地博客js\n\n将线上js 拷贝到本地theme -&gt; inside -&gt; source -&gt; js\n\n- //cdn1.lncld.net/static/js/3.0.4/av-min.js\n- //unpkg.com/valine/dist/Valine.min.js\n#将其替换成本地路径\n- /js/Valine.min.js\n- /js/av-min.js\n\n\n\nvaline 评论 需要配合 leancloud 作为后端支持\n\n进入 leancloud 官网，可通过GitHub账号注册，添加邮箱验证功能\n进入后，创建应用，创建完后点击右上角设置\n\n选择应用keys，当中的AppID ，AppKey即为Valine需要的ID，key\n\n进入应用中心绑定你的个人博客域名\n\n* ps:若没配置web安全域名，则会在博客下提示：Code 403: 访问被API域名白名单拒绝，请检查你的安全域名设置.\nLendcloud 存储中创建Commit class\n\nValine配置：\n完成\n\n\n问题①：\n\n\nCode 403: 访问被API域名白名单拒绝，请检查你的安全域名设置.\n* 解决：在leancloud的应用&gt;设置&gt;安全中心&gt;Web安全域名中只添加了新的自定义的域名即可解决该问题。\n\n问题②：\nTypeError: Cannot read property 'hide' of undefined\n    at r.ErrorHandler (Valine.min.js:12)\n    at r.init (Valine.min.js:12)\n    at new r (Valine.min.js:12)\n    at new i (Valine.min.js:12)\n    at (index):1891\n* 解决：除了引用Valine.min.js 还需要将 Valine.Pure.min.js 填入到项目中\n\n相关js  https://cdn.jsdelivr.net/npm/valine@1.4.14/dist/（存在问题）\n通过已有前辈的技能，说是需要将 valine中的language设置为 zh-cn，尝试后仍无效\n应该还是Valine.min.js的版本的问题\n替换现有的js （js/Valine.min.js）\nupdate： 通过核实得知当前的hexo的 _config.xml 中的language设置为 zh-Hans，改为 zh-cn\n\n\n\n△ 添加代码高亮插件\n\nnpm i -S hexo-prism-plugin\n\n在根目录下_config.xml文件中添加设置\n\nhighlight:\n  enable: false\n\nprism_plugin:\n  mode: 'preprocess'    \n  theme: 'tomorrow'\n  line_number: false    \n  custom_css:\n\n\n△ 添加WordCount文章统计\n\n安装WordCount：\nnpm install hexo-wordcount\n\n分析：\n## 面临问题\n1、如何将wordcount部署到inside的page中？\n2、如何有效起作用？\n## 分析\n1、inside主题中的文章layout部署\n2、wordcount插件如何更好的在layout中被引用\n3、layout加载机制，head，body等\n4、\n\n\n &lt;span class=\"post-count\">{{ wordcount(post.content) }}&lt;/span>\n &lt;span class=\"post-count\">{{ min2read(post.content) }}&lt;/span>\n &lt;span class=\"post-count\">全站总字数：{{ totalcount(site) }}&lt;/span> \n*存在问题，待完善*\n改造过程中的问题 Exception：1、config.yml文件在部署过程中，存在问题：duplicated mapping key at line 242, column -2307: \n\n在search模块中，设置 其一 adapter即可，不可设置两个\n\n2、bad indentation of a mapping entry at line 330, column 3\n\n缩进错误\n\n3、无法加载Disqus\n\n无法访问//shortname.disqus.com/embed.js\n\n4、添加gitment评论存在问题\n\n[object ProgressEvent]  引用的js所涉及的服务器存在稳定问题\n由于gitment评论一直存在网络问题\n以及GitHub的官网访问速率问题导致的博客存在速率问题\n将其替换成Valine\n\n\n","plink":"http://82u0q0.coding-pages.com/2019/12/10/hexo-inside博客主题优化/"},{"title":"hexo_mac部署","date":"2019-12-10T11:32:18.000Z","date_formatted":{"ll":"2019年12月10日","L":"2019/12/10","MM-DD":"12-10"},"updated":"2020-08-17T06:54:38.579Z","content":"搭建个人博客（https://wyohoxtan.github.io/）\nmac hexo \n\nhexo介绍官网：https://hexo.io/zh-cn/ \n※ hexo 可以理解为是基于node.js制作的一个博客工具 \n※ hexo 正常来说，不需要部署到我们的服务器上，我们的服务器上保存的，其实是基于在hexo通过markdown编写的文章，然后hexo帮我们生成静态的html页面，然后，将生成的html上传到我们的服务器。简而言之：hexo是个静态页面生成、上传的工具。\n※ 源码结构\n\n\n\n文件/文件夹\n说明\n\n\n\n_config.yml\n配置文件\n\n\npublic\n生成的静态文件，这个目录最终会发布到服务器\n\n\nscaffolds\n一些通用的markdown模板\n\n\nsource\n编写的markdown文件，_drafts草稿文件，_posts发布的文章\n\n\nthemes\n博客的模板\n\n\nhexo搭建博客的一般步骤安装Node.js\n安装Git\n安装Hexo\n安装主题\n本地运行测试\n注册github并创建仓库\n部署到github中\n环境配置※ 安装 Git，Node.js, hexo\n# 检测是否已安装\nnode -v\ngit --version\n# 未安装，进行node，git的安装\n# 第一种方法：\n# 1、执行以下命令安装homebrew\nruby -e \"$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)\"\n# 2、执行以下命令安装git\nbrew install git\n# 3、执行以下命令安装nodejs\nbrew install node\n\n#第二种方法：\n#1、先安装git\n#git安装包下载地址http://code.google.com/p/git-osx-installer/downloads/list\n#2、安装nodejs\n#依次执行以下命令：\ngit clone https://github.com/joyent/node.git nodejs\ncd nodejs\n./configure\nmake\nsudo make install\n※ 若已安装，执行安装hexo步骤\nnpm install -g hexo-cli\n※创建自己博客的文件夹，初始化hexo博客信息\n# 在合适的目录下创建一个blog文件夹\nmkdir myBlog\n# 进入目录\ncd myBlog\n# 初始化目录\nhexo init\n#开启本地服务 \nhexo s\n# 通过浏览器访问：http://localhost:4000\n本地博客关联GitHub仓库※ 创建GitHub账号及仓库\n\n进入官网注册账号\n\n点击右上角“+”，new responsitory 创建GitHub仓库\n*创建的responsitory名称应与账号名一致（eg:wyohoxtan.github.io）,否则在deploy后，访问博客网址时会出现404错误\n\n\n※关联GitHub，免密提交\n# 用你注册GitHub时的邮箱号，进行秘钥生成\ncd ~\nssh-keygen -t rsa -C \"xxxxxxx@qq.com\"\n# 系统就会生成一个隐藏文件夹.ssh\ncd .ssh\nls\n# 复制公钥\nvim id_rsa.pub\n\n进入GitHub网站，进入setting设置中\n\n\n\n\n\n\n\n\n\n\n\n验证是否成功\n ssh -T git@github.com\n\n\n※ 找到本地博客文件夹myBlog中的_config.yml文件，修改配置（只换username即可）\n\n\n\n安装 hexo-deployer-git插件(不按照，git同步不成功)\nnpm install hexo-deployer-git --save\n\n终端执行以下命令\n# 清除\nhexo clean\n# 产生静态网页\nhexo g\n# 部署到GitHub page上\nhexo d\n\n\n※ 通过http://username.github.io进行访问（eg:[闲潭个人博客](https://wyohoxtan.github.io/archives)）\n常见问题分析1、hexo搭建Github博客上传后，网页显示404问题解决方案\n分析：两种原因： ① 创建的GitHub仓库名称和GitHub账号的用户名称不同，导致无法获取。具体分析步骤可参考此链接\n​                        ② 配置config.yml文件时，type: git中间必须有个空格！！！（书写格式问题）\n2、配置的时候 hexo d 后报错”ERROR Deployer not found: git“\n解决方法：安装插件hexo-deployer-git即可\nnpm install hexo-deployer-git --save\n3、Permanently added the RSA host key for IP address ‘52.74.223.119’ to the list of known hosts.\n解决：https://blog.csdn.net/zhoucheng05_13/article/details/52831703\n4、git@github.com: Permission denied (publickey).fatal: Could not read from remote repository.\n原因：客户端与服务端的ssh key不匹配\n解决：删除GitHub中的ssh秘钥，重新本地生成后设置到GitHub秘钥中\n5、同步过程中存在问题:\n\n\n解决：按照上述提示，输入 \n git config --global user.email \"you@example.com\"\n git config --global user.name \"Your Name\"\n6、编写博客上传后，本地图片无法在GitHub上显示\n※ 修改config.yml文件配置：将文件中的post_asset_folder置为true\n\n\n※ 根目录下执行：插件安装\nnpm install https://github.com/CodeFalling/hexo-asset-image --save\n※ 创建博客文件后，会同时生成文件名相同的文件夹名称，将需要使用到的资源文件存放到本文件夹内\n※ 书写博客中的图片文件路径 \n\n\n上述操作后，仍存在图片无法显示的问题:\n\n通过F12，得知当前的图片路径无法加载，具体原因是文件名存在空格等非法字符，导致图片路径存在问题\n在进行本博客的编写过程中，出现的各类资源文件信息，尽量全部存放到由hexo自动生成的同名文件夹中\n\n7、中文乱码的问题：\n※ 修改config.yml文件，设置 language值   \n​    anguage: zh-Hans 或者 anguage: zh-CN \n​    *取决于你的主题theme目录下的language目录下有zh-Hans.yml还是zh-CN.yml\n※ 编辑器编码确定\n主题更换主题备选：从git或hexo官网中下载主题到本地\ngit@github.com:ikeq/hexo-theme-inside.gitgit@github.com:TriDiamond/hexo-theme-obsidian.git\n修改本地主题：\n  1、将下载的主题存放到本地myBlog -&gt; themes中(建议修改主题名，简单好用)\n  2、修改config.yml文件中的theme值，使用主题名\n本地创建新博客  ※ 创建新博客文件：\n ```bashhexo new “newBlog”     ```\n  ※ 使用Markdown工具编写文件（eg:Typora(软件)，作业部落(在线)）\n  ※ 通过 hexo g  hexo d 发布到GitHub中\n参考链接：https://www.jianshu.com/p/77db3862595c\nhttps://www.jianshu.com/p/380290deb8f0\nhttps://www.jianshu.com/p/1c888a6b8297\n","plink":"http://82u0q0.coding-pages.com/2019/12/10/hexo_mac部署/"},{"title":"关于我","date":"2020-08-07T10:39:05.000Z","date_formatted":{"ll":"2020年8月7日","L":"2020/08/07","MM-DD":"08-07"},"updated":"2020-08-17T06:45:42.896Z","content":"\n闲潭英文名：wyohoxtan\n一个小小的全栈程序员\n 前端会一丢丢\n 后端会一丢丢\n 大数据会一丢丢\n phthon会一丢丢\n 数据库会一丢丢\n 安卓会一丢丢\n 常用工具会一丢丢\n\n就是这么一个一丢丢的全无人员\nCome on!想做一个能理清楚自己感兴趣的技术栈的小小程序员\nThe future can be expected！","plink":"http://82u0q0.coding-pages.com/about/"}]