{"title":"hexo_inside博客主题优化","date":"2019-12-10T13:10:31.000Z","date_formatted":{"ll":"2019年12月10日","L":"2019/12/10","MM-DD":"12-10"},"link":"2019/12/10/hexo-inside博客主题优化","comments":true,"tags":["hexo主题优化"],"categories":["Hexo"],"updated":"2020-08-17T07:03:39.465Z","content":"<h3 id=\"Hexo-inside主题优化\">Hexo inside主题优化<a href=\"2019/12/10/hexo-inside博客主题优化#Hexo-inside主题优化\"></a></h3><p><code>hexo inside 优化</code> </p>\n<hr>\n<h4 id=\"hexo系列问题\">hexo系列问题<a href=\"2019/12/10/hexo-inside博客主题优化#hexo系列问题\"></a></h4><h6 id=\"※-部署到github时会删掉README文件\">※ 部署到github时会删掉README文件<a href=\"2019/12/10/hexo-inside博客主题优化#※-部署到github时会删掉README文件\"></a></h6><p>​    △ 分析：</p>\n<blockquote>\n<p> ① 执行<code>hexo g</code>后，会把source文件里的.md格式的文件渲染为html文件并放到public下面；</p>\n<p> ② 继续执行<code>hexo d</code>后，会将public下面的所有文件提交到对应的XXX.github.io仓库中；</p>\n<p> ③ 由于本地public文件夹无README.md文件，在提交public文件时，github会认为你把README.md文件      删掉了，同时github也会删掉仓库里的README.md文件</p>\n</blockquote>\n<p>   △ 解决：</p>\n<blockquote>\n<p>① 在本地source文件夹内创建一个 README.md</p>\n<p>② 修改Hexo根目录下的_config.yml文件，将skip_render参数的值设置为README.md</p>\n<pre class=\" language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">skip_render</span><span class=\"token punctuation\">:</span> README.md\n\n//  为什么需要设置这一步呢？\n//  因为你执行hexo g命令时，hexo会默认将source文件里的所有md文件渲染为html文件放到public中，\n//  同时README.md会被渲染为README.html文件放到public文件里\n//  加上这段设置，就是告诉hexo的解析器，你在渲染source文件里的md文件时，跳过README.md文件</code></pre>\n</blockquote>\n<h4 id=\"Inside主题改造\">Inside主题改造<a href=\"2019/12/10/hexo-inside博客主题优化#Inside主题改造\"></a></h4><h6 id=\"※-博客头像、简介、目录、链接、搜索、主题、字体、加载速度、评论、访问量\">※ 博客头像、简介、目录、链接、搜索、主题、字体、加载速度、评论、访问量<a href=\"2019/12/10/hexo-inside博客主题优化#※-博客头像、简介、目录、链接、搜索、主题、字体、加载速度、评论、访问量\"></a></h6><p><code>config.yml文件改造</code></p>\n<p>​    <strong>△ 头像设置</strong></p>\n<blockquote>\n<p>① 在当前主题中source创建img文件夹，将自己头像照片存放到文件夹中</p>\n<p>② 在主题配置文件 _config.yml 文件，设置以下值：</p>\n<pre class=\" language-yml\"><code class=\"language-yml\"># 头像url\navatar: /img/avatar.jpg \nfavicon: /img/avatar.jpg</code></pre>\n</blockquote>\n<p>​    <strong>△ 目录设置</strong></p>\n<p>  <strong>△ 设置添加rss ,github等链接</strong></p>\n<blockquote>\n<p>① 在目录下执行安装hexo插件</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save hexo-generator-feed</code></pre>\n<p>② 在config.yml文件中添加插件信息</p>\n<pre class=\" language-yml\"><code class=\"language-yml\"># Extensions\n## Plugins: http://hexo.io/plugins/\nplugins: hexo-generate-feed</code></pre>\n<p>③ 在theme目录下的config.yml文件中添加rss配置</p>\n<pre class=\" language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\" spellcheck=\"true\"># Set rss to false to disable feed link.</span>\n<span class=\"token comment\" spellcheck=\"true\"># Leave rss as empty to use site's feed link.</span>\n<span class=\"token comment\" spellcheck=\"true\"># Set rss to specific value if you have burned your feed already.</span>\n<span class=\"token key atrule\">rss</span><span class=\"token punctuation\">:</span> /atom.xml</code></pre>\n<p>④ 重新部署</p>\n</blockquote>\n<p>  <strong>△ 设置打赏模块</strong></p>\n<blockquote>\n<p>1、下载微信，支付宝的支付图片</p>\n<p>2、将图片放入主题的img文件夹中</p>\n<p>3、设置相应的属性，具体如下：</p>\n<pre class=\" language-yml\"><code class=\"language-yml\">reward:\n  # Text which shows at the top.\n  # 显示一句文案\n  text:  交个朋友啦 ☕ .\n  # wechatpay: /img/Wechat.jpg\n  # alipay: /img/Alipy.jpg\n  # Payment Methods\n  # 支付方式列表，注意是数组\n  # qrcode, url and text must be set at least one\n  # wechat, alipay, paypal and bitcoin has a built-in icon,\n  # use `name` to apply\n  methods: \n    # wechat、alipay、paypal、bitcoin 对应四种不同的图标和配色\n    # 此外的任何自定义名称，都需要在语言文件内增加相应的语言，\n    # 同时配色与 appearance.accent_color 一致\n    - name: wechat\n      # 二维码地址\n      qrcode: img/Wechat.jpg\n      # 显示一个链接\n      url: /img/Wechat.jpg\n      # 若设置了 url，则此值会显示为链接的文本，否则为一段普通文本\n      text: 🤝微信🤝\n      # 选中时的颜色\n      color: '#33CC00'\n      # qrcode、url 和 text 必须至少设置一项\n\n    - name: alipay\n      # 二维码地址\n      qrcode: img/Alipy.jpg\n      # 显示一个链接\n      url: /img/Alipy.jpg\n      # 若设置了 url，则此值会显示为链接的文本，否则为一段普通文本\n      text: 🤝支付宝🤝\n      # 选中时的颜色\n      color: '#00CCFF'\n</code></pre>\n<p>注：当前的name中的，需要小写，是内置支付方式</p>\n</blockquote>\n<p>  <strong>△ 设置统计字数，访问量</strong></p>\n<blockquote>\n<p>问题思考：如何添加js引用</p>\n<p>统计使用<strong>“不蒜子”</strong></p>\n<p>如何处理hexo inside主题布局修改问题</p>\n<p>分析：inside主题是通过AngularJS实现</p>\n<p>① 通过vscode将inside文件夹打开</p>\n<p>② 分析layout文件夹</p>\n<p>通过分析研究 _config.xml 将相关不蒜子统计文件js配置处理添加到文件中</p>\n<p><strong>1、支持通过安装 html-minifier、babel 和 terser 来实现代码压缩。</strong></p>\n<ul>\n<li><p>项目根目录执行（Hexo 根目录，非 themes/inside）：</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> babel-core babel-preset-env html-minifier terser --save</code></pre>\n</li>\n</ul>\n<p><strong>2、先进行脚本的安装，再使用不蒜子的页面</strong></p>\n<p>安装方法：主题_config.xml配置文件 plugins 模块 插入 busuanzi.js</p>\n<pre class=\" language-xml\"><code class=\"language-xml\">_config.xml\n---------------------------------------------------------------------------------\nplugins: \n    - position: sidebar\n      template: | \n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">async</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n#   # Global Inject scripts/styles\n    - //busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\n</code></pre>\n<p>在 _config.xml 文件里找到 footer 下的 custom，写入相关的HTML代码，如：</p>\n<pre class=\" language-xml\"><code class=\"language-xml\">_config.xml\n---------------------------------------------------------------------------------\nfooter:\n# Custom text.\n  # 于最后一行添加自定义内容\n  custom: &lt;span id= \"busuanzi_container_site_uv\" style ='display:none'>Total <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>busuanzi_value_site_uv<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> visitors. <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>&lt;span id=\"busuanzi_container_site_pv\" style = 'display:none'><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>busuanzi_value_site_pv<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Views<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> </code></pre>\n<hr>\n<p>安装过程的问题：</p>\n<p>问题一：引用js的问题</p>\n<ul>\n<li>通过plugins模块中的Global Inject scripts/styles</li>\n</ul>\n<p>问题二：部署后，页面显示的访问量过大</p>\n<ul>\n<li>在本地是此有数据量过大问题，部署后就无当前问题</li>\n</ul>\n<p>附属链接：</p>\n<p><a href=\"https://removeif.github.io/theme/不蒜子统计常见问题.html\" target=\"_blank\" rel=\"noopener\">不蒜子统计常见问题</a></p>\n</blockquote>\n<p> <strong>△ 设置about，search</strong></p>\n<ul>\n<li><p>创建about分类文件夹 </p>\n<pre class=\" language-bash\"><code class=\"language-bash\">hexo new page <span class=\"token string\">'about'</span> </code></pre>\n</li>\n<li><p>完善网页内容</p>\n<ul>\n<li>个人相关信息介绍</li>\n</ul>\n</li>\n<li><p>创建分类 categories</p>\n<ul>\n<li><p><code>hexo new page categories</code></p>\n</li>\n<li><p>主题下的categories的index文件，添加type: “categories”到内容中</p>\n</li>\n<li><p>对应文章中添加categories</p>\n<ul>\n<li><p>在tag前添加 categories</p>\n</li>\n<li><pre class=\" language-markdown\"><code class=\"language-markdown\">title: hexo_inside博客主题优化\ndate: 2019-12-10 21:10:31\ncategories: Hexo\ntags: hexo主题优化\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>search设置</p>\n<ul>\n<li><p>主题_config.xml中：</p>\n<pre class=\" language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\" spellcheck=\"true\"># Search</span>\n<span class=\"token key atrule\">search</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\" spellcheck=\"true\"># Display a quick search button in fab</span>\n  <span class=\"token comment\" spellcheck=\"true\"># 在页面右下角的 FAB 按钮里显示快捷搜索入口</span>\n  <span class=\"token key atrule\">fab</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n\n  <span class=\"token comment\" spellcheck=\"true\"># Render a standalone searh page which can be configured in sidebar menu such as `Search: /search`</span>\n  <span class=\"token comment\" spellcheck=\"true\"># 额外生成 search 页面，可配置在 sidebar 导航，如 `Search: /search`</span>\n  <span class=\"token key atrule\">page</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n\n  <span class=\"token comment\" spellcheck=\"true\"># 以上两个入口必须至少设置一个，否则视为无效配置</span>\n\n  <span class=\"token comment\" spellcheck=\"true\"># Local search</span>\n  <span class=\"token comment\" spellcheck=\"true\"># 本地搜索，即生成本地 json 文件</span>\n  <span class=\"token key atrule\">adapter</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\" spellcheck=\"true\"># json 数据的范围，数组</span>\n    <span class=\"token key atrule\">range</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> post\n      <span class=\"token punctuation\">-</span> page\n\n  <span class=\"token comment\" spellcheck=\"true\">#   # json 数据的条目限制</span>\n  <span class=\"token comment\" spellcheck=\"true\">#   # 假如 `limit:1000`，同时有 800 篇 post，800 篇 page，则最终生成的数据包含：</span>\n  <span class=\"token comment\" spellcheck=\"true\">#   # 800 篇 post，200 篇 page</span>\n  <span class=\"token comment\" spellcheck=\"true\">#   # 缺省值 `10000`</span>\n    <span class=\"token key atrule\">limit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10000</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">#   # 搜索结果分页大小，缺省值 `10`</span>\n    <span class=\"token key atrule\">per_page</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n\n  <span class=\"token comment\" spellcheck=\"true\"># Custom search</span>\n  <span class=\"token comment\" spellcheck=\"true\"># 自定义搜索 API</span>\n  <span class=\"token comment\" spellcheck=\"true\"># adapter:</span>\n  <span class=\"token comment\" spellcheck=\"true\">#   # Used for pagination</span>\n  <span class=\"token comment\" spellcheck=\"true\">#   #搜索结果分页大小，缺省值 `10`</span>\n  <span class=\"token comment\" spellcheck=\"true\">#   per_page: 5</span>\n    <span class=\"token comment\" spellcheck=\"true\"># Optional</span>\n\n    <span class=\"token comment\" spellcheck=\"true\"># 显示 LOGO 图片，可选</span>\n    <span class=\"token key atrule\">logo</span><span class=\"token punctuation\">:</span> //cdn.worldvectorlogo.com/logos/algolia.svg\n  <span class=\"token comment\" spellcheck=\"true\">#   # 此配置项为构造完整的请求对象</span>\n    <span class=\"token key atrule\">request</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\" spellcheck=\"true\">#     # 接口 URL</span>\n      <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//APPLICATION_ID<span class=\"token punctuation\">-</span>dsn.algolia.net/1/indexes/INDEX/query\n  <span class=\"token comment\" spellcheck=\"true\">#     # GET 或 POST，不区分大小写，缺省值 `GET`</span>\n      <span class=\"token key atrule\">method</span><span class=\"token punctuation\">:</span> post\n  <span class=\"token comment\" spellcheck=\"true\">#     # Available variables: :query, :per_page, :current</span>\n  <span class=\"token comment\" spellcheck=\"true\">#     # 请求参数，格式视 Content-Type 而定，支持的字符串插值有：</span>\n  <span class=\"token comment\" spellcheck=\"true\">#     # 搜索的字符串 `:query`</span>\n  <span class=\"token comment\" spellcheck=\"true\">#     # 分页大小 `:per_page`</span>\n  <span class=\"token comment\" spellcheck=\"true\">#     # 当前页 `:current`</span>\n      <span class=\"token key atrule\">body</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'{\"query\":\":query\",\"hitsPerPage\":\":per_page\",\"page\":\":current\"}'</span>\n  <span class=\"token comment\" spellcheck=\"true\">#     # 请求头</span>\n      <span class=\"token key atrule\">headers</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">X-Algolia-API-Key</span><span class=\"token punctuation\">:</span> API_KEY\n        <span class=\"token key atrule\">X-Algolia-Application-Id</span><span class=\"token punctuation\">:</span> APPLICATION_ID\n        <span class=\"token key atrule\">Content-Type</span><span class=\"token punctuation\">:</span> application/json; charset=UTF<span class=\"token punctuation\">-</span><span class=\"token number\">8</span>\n      <span class=\"token key atrule\">keys</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span> hits\n        <span class=\"token key atrule\">current</span><span class=\"token punctuation\">:</span> page\n        <span class=\"token key atrule\">total</span><span class=\"token punctuation\">:</span> nbPage\n        <span class=\"token key atrule\">hits</span><span class=\"token punctuation\">:</span> nbHits\n        <span class=\"token key atrule\">time</span><span class=\"token punctuation\">:</span> processingTimeMS\n        <span class=\"token comment\" spellcheck=\"true\"># title 对应具体某一条的标题字段</span>\n        <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> _snippetResult.title.value\n        <span class=\"token comment\" spellcheck=\"true\"># title 对应具体某一条的内容字段</span>\n        <span class=\"token key atrule\">content</span><span class=\"token punctuation\">:</span> _snippetResult.content.value</code></pre>\n</li>\n<li><p>在hexo config.yml 文件中，修改URL</p>\n<pre class=\" language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\" spellcheck=\"true\">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span>\n<span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//82u0q0.coding<span class=\"token punctuation\">-</span>pages.com/</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>△ 使用 valine评论进行配置</strong></p>\n<ul>\n<li><p>配置_config.yml 中的 plugins中的valine</p>\n</li>\n<li><pre class=\" language-xml\"><code class=\"language-xml\">    - /js/Valine.min.js\n    - /js/av-min.js\n    - position: comments\n      template: |\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>vcomment<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">\n          <span class=\"token keyword\">new</span> <span class=\"token class-name\">Valine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            el<span class=\"token punctuation\">:</span> <span class=\"token string\">'#vcomment'</span><span class=\"token punctuation\">,</span>\n            appId<span class=\"token punctuation\">:</span> <span class=\"token string\">'XXX'</span><span class=\"token punctuation\">,</span>\n            appKey<span class=\"token punctuation\">:</span> <span class=\"token string\">'XXX'</span><span class=\"token punctuation\">,</span>\n            path<span class=\"token punctuation\">:</span> <span class=\"token function\">decodeURIComponent</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n</li>\n<li><p>由于考虑到线上的valine的js存在访问加载等的相关问题，将线上js做成本地博客js</p>\n<ul>\n<li><p>将线上js 拷贝到本地theme -&gt; inside -&gt; source -&gt; js</p>\n</li>\n<li><pre class=\" language-xml\"><code class=\"language-xml\">- //cdn1.lncld.net/static/js/3.0.4/av-min.js\n- //unpkg.com/valine/dist/Valine.min.js\n#将其替换成本地路径\n- /js/Valine.min.js\n- /js/av-min.js</code></pre>\n</li>\n</ul>\n</li>\n<li><p>valine 评论 需要配合 <a href=\"https://leancloud.cn/\" target=\"_blank\" rel=\"noopener\">leancloud</a> 作为后端支持</p>\n<ul>\n<li>进入 <a href=\"https://leancloud.cn/\" target=\"_blank\" rel=\"noopener\">leancloud</a> 官网，可通过GitHub账号注册，添加邮箱验证功能</li>\n<li>进入后，创建应用，创建完后点击右上角设置</li>\n<li><img src=\"/2019/12/10/hexo-inside%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/lendCloudSetting.png\" alt=\"lendCloudSetting\" style=\"zoom:50%;\"></li>\n<li>选择应用keys，当中的AppID ，AppKey即为Valine需要的ID，key</li>\n<li><img src=\"/2019/12/10/hexo-inside%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/lendCloudKeys.png\" alt=\"lendCloudKeys\" style=\"zoom:30%;\"></li>\n<li>进入应用中心绑定你的个人博客域名</li>\n<li><img src=\"/2019/12/10/hexo-inside%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/leanCloudWeb.png\" alt=\"leanCloudWeb\" style=\"zoom:30%;\"></li>\n<li><font color=\"red\">*</font> ps:若没配置web安全域名，则会在博客下提示：Code 403: 访问被API域名白名单拒绝，请检查你的安全域名设置.</li>\n<li>Lendcloud 存储中创建Commit class</li>\n<li><img src=\"/2019/12/10/hexo-inside%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/lendCloudClass.png\" alt=\"lendCloudClass\" style=\"zoom:30%;\"></li>\n<li>Valine配置：</li>\n<li>完成</li>\n</ul>\n</li>\n<li><p>问题①：</p>\n</li>\n</ul>\n<pre class=\" language-bash\"><code class=\"language-bash\">Code 403: 访问被API域名白名单拒绝，请检查你的安全域名设置.</code></pre>\n<p><font color=\"red\">*</font> 解决：在leancloud的<code>应用&gt;设置&gt;安全中心&gt;Web安全域名</code>中只添加了新的自定义的域名即可解决该问题。</p>\n<ul>\n<li><p>问题②：</p>\n<pre class=\" language-js\"><code class=\"language-js\">TypeError<span class=\"token punctuation\">:</span> Cannot read property <span class=\"token string\">'hide'</span> <span class=\"token keyword\">of</span> undefined\n    at r<span class=\"token punctuation\">.</span>ErrorHandler <span class=\"token punctuation\">(</span>Valine<span class=\"token punctuation\">.</span>min<span class=\"token punctuation\">.</span>js<span class=\"token punctuation\">:</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span>\n    at r<span class=\"token punctuation\">.</span>init <span class=\"token punctuation\">(</span>Valine<span class=\"token punctuation\">.</span>min<span class=\"token punctuation\">.</span>js<span class=\"token punctuation\">:</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span>\n    at <span class=\"token keyword\">new</span> <span class=\"token class-name\">r</span> <span class=\"token punctuation\">(</span>Valine<span class=\"token punctuation\">.</span>min<span class=\"token punctuation\">.</span>js<span class=\"token punctuation\">:</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span>\n    at <span class=\"token keyword\">new</span> <span class=\"token class-name\">i</span> <span class=\"token punctuation\">(</span>Valine<span class=\"token punctuation\">.</span>min<span class=\"token punctuation\">.</span>js<span class=\"token punctuation\">:</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span>\n    at <span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token number\">1891</span></code></pre>\n<p><font color=\"red\">*</font> 解决：除了引用Valine.min.js 还需要将 Valine.Pure.min.js 填入到项目中</p>\n<ul>\n<li><del>相关js  <a href=\"https://cdn.jsdelivr.net/npm/valine@1.4.14/dist/（存在问题）\" target=\"_blank\" rel=\"noopener\">https://cdn.jsdelivr.net/npm/valine@1.4.14/dist/（存在问题）</a></del></li>\n<li>通过已有前辈的技能，说是需要将 valine中的language设置为 zh-cn，尝试后仍无效</li>\n<li>应该还是Valine.min.js的版本的问题</li>\n<li>替换现有的js （js/Valine.min.js）</li>\n<li><strong><font color=\"red\">update：</font></strong> 通过核实得知当前的hexo的 _config.xml 中的language设置为 zh-Hans，改为 zh-cn</li>\n</ul>\n</li>\n</ul>\n<p><strong>△ 添加代码高亮插件</strong></p>\n<ul>\n<li><pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i -S hexo-prism-plugin</code></pre>\n</li>\n<li><p>在根目录下_config.xml文件中添加设置</p>\n</li>\n<li><pre class=\" language-xml\"><code class=\"language-xml\">highlight:\n  enable: false\n\nprism_plugin:\n  mode: 'preprocess'    \n  theme: 'tomorrow'\n  line_number: false    \n  custom_css:</code></pre>\n</li>\n</ul>\n<p><strong>△ 添加WordCount文章统计</strong></p>\n<ul>\n<li><p>安装WordCount：</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-wordcount</code></pre>\n</li>\n<li><p>分析：</p>\n<pre class=\" language-markdown\"><code class=\"language-markdown\"><span class=\"token title important\"><span class=\"token punctuation\">##</span> 面临问题</span>\n1、如何将wordcount部署到inside的page中？\n2、如何有效起作用？\n<span class=\"token title important\"><span class=\"token punctuation\">##</span> 分析</span>\n1、inside主题中的文章layout部署\n2、wordcount插件如何更好的在layout中被引用\n3、layout加载机制，head，body等\n4、</code></pre>\n</li>\n</ul>\n<pre class=\" language-html\"><code class=\"language-html\"> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>post-count<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ wordcount(post.content) }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>post-count<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ min2read(post.content) }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>post-count<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>全站总字数：{{ totalcount(site) }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> </code></pre>\n<p>*<font color=\"red\">存在问题，待完善</font>*</p>\n<h6 id=\"改造过程中的问题-Exception：\">改造过程中的问题 Exception：<a href=\"2019/12/10/hexo-inside博客主题优化#改造过程中的问题-Exception：\"></a></h6><p><strong>1、config.yml文件在部署过程中，存在问题：duplicated mapping key at line 242, column -2307:</strong> </p>\n<ul>\n<li>在search模块中，设置 其一 adapter即可，不可设置两个</li>\n</ul>\n<p><strong>2、bad indentation of a mapping entry at line 330, column 3</strong></p>\n<ul>\n<li>缩进错误</li>\n</ul>\n<p><strong>3、无法加载Disqus</strong></p>\n<ul>\n<li>无法访问<code>//shortname.disqus.com/embed.js</code></li>\n</ul>\n<p><strong>4、添加gitment评论存在问题</strong></p>\n<ul>\n<li>[object ProgressEvent]  引用的js所涉及的服务器存在稳定问题</li>\n<li>由于gitment评论一直存在网络问题</li>\n<li>以及GitHub的官网访问速率问题导致的博客存在速率问题</li>\n<li>将其替换成Valine</li>\n</ul>\n<hr>\n","prev":{"title":"闲潭杂记","link":"2019/12/29/闲潭杂记"},"next":{"title":"hexo_mac部署","link":"2019/12/10/hexo_mac部署"},"plink":"http://82u0q0.coding-pages.com/2019/12/10/hexo-inside博客主题优化/","reward":true,"copyright":{"custom":"未经许可，不可转载！"}}