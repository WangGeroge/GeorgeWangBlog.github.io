{"title":"hexo_mac部署","date":"2019-12-10T11:32:18.000Z","date_formatted":{"ll":"2019年12月10日","L":"2019/12/10","MM-DD":"12-10"},"link":"2019/12/10/hexo_mac部署","comments":true,"tags":["myBlog"],"updated":"2020-08-03T06:46:06.506Z","content":"<p>搭建个人博客（<a href=\"https://wyohoxtan.github.io/）\" target=\"_blank\" rel=\"noopener\">https://wyohoxtan.github.io/）</a></p>\n<p><code>mac hexo</code> </p>\n<hr>\n<h4 id=\"hexo介绍\">hexo介绍<a href=\"2019/12/10/hexo_mac部署#hexo介绍\"></a></h4><p>官网：<a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">https://hexo.io/zh-cn/</a> </p>\n<p>※ hexo 可以理解为是基于node.js制作的一个博客工具 </p>\n<p>※ hexo 正常来说，不需要部署到我们的服务器上，我们的服务器上保存的，其实是基于在hexo通过markdown编写的文章，然后hexo帮我们生成静态的html页面，然后，将生成的html上传到我们的服务器。简而言之：hexo是个静态页面生成、上传的工具。</p>\n<p>※ 源码结构</p>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th>文件/文件夹</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>_config.yml</td>\n<td align=\"left\">配置文件</td>\n</tr>\n<tr>\n<td>public</td>\n<td align=\"left\">生成的静态文件，这个目录最终会发布到服务器</td>\n</tr>\n<tr>\n<td>scaffolds</td>\n<td align=\"left\">一些通用的markdown模板</td>\n</tr>\n<tr>\n<td>source</td>\n<td align=\"left\">编写的markdown文件，_drafts草稿文件，_posts发布的文章</td>\n</tr>\n<tr>\n<td>themes</td>\n<td align=\"left\">博客的模板</td>\n</tr>\n</tbody></table></div></div>\n<h4 id=\"hexo搭建博客的一般步骤\">hexo搭建博客的一般步骤<a href=\"2019/12/10/hexo_mac部署#hexo搭建博客的一般步骤\"></a></h4><pre class=\" language-markdown\"><code class=\"language-markdown\">安装Node.js\n安装Git\n安装Hexo\n安装主题\n本地运行测试\n注册github并创建仓库\n部署到github中</code></pre>\n<h4 id=\"环境配置\">环境配置<a href=\"2019/12/10/hexo_mac部署#环境配置\"></a></h4><p>※ 安装 Git，Node.js, hexo</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\"># 检测是否已安装</span>\nnode -v\n<span class=\"token function\">git</span> --version\n<span class=\"token comment\" spellcheck=\"true\"># 未安装，进行node，git的安装</span>\n<span class=\"token comment\" spellcheck=\"true\"># 第一种方法：</span>\n<span class=\"token comment\" spellcheck=\"true\"># 1、执行以下命令安装homebrew</span>\nruby -e <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span>curl -fsSL https://raw.github.com/mxcl/homebrew/go<span class=\"token variable\">)</span></span>\"</span>\n<span class=\"token comment\" spellcheck=\"true\"># 2、执行以下命令安装git</span>\nbrew <span class=\"token function\">install</span> <span class=\"token function\">git</span>\n<span class=\"token comment\" spellcheck=\"true\"># 3、执行以下命令安装nodejs</span>\nbrew <span class=\"token function\">install</span> node\n\n<span class=\"token comment\" spellcheck=\"true\">#第二种方法：</span>\n<span class=\"token comment\" spellcheck=\"true\">#1、先安装git</span>\n<span class=\"token comment\" spellcheck=\"true\">#git安装包下载地址http://code.google.com/p/git-osx-installer/downloads/list</span>\n<span class=\"token comment\" spellcheck=\"true\">#2、安装nodejs</span>\n<span class=\"token comment\" spellcheck=\"true\">#依次执行以下命令：</span>\n<span class=\"token function\">git</span> clone https://github.com/joyent/node.git nodejs\n<span class=\"token function\">cd</span> nodejs\n./configure\n<span class=\"token function\">make</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span></code></pre>\n<p>※ 若已安装，执行安装hexo步骤</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g hexo-cli</code></pre>\n<p>※创建自己博客的文件夹，初始化hexo博客信息</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\"># 在合适的目录下创建一个blog文件夹</span>\n<span class=\"token function\">mkdir</span> myBlog\n<span class=\"token comment\" spellcheck=\"true\"># 进入目录</span>\n<span class=\"token function\">cd</span> myBlog\n<span class=\"token comment\" spellcheck=\"true\"># 初始化目录</span>\nhexo init\n<span class=\"token comment\" spellcheck=\"true\">#开启本地服务 </span>\nhexo s\n<span class=\"token comment\" spellcheck=\"true\"># 通过浏览器访问：http://localhost:4000</span></code></pre>\n<h4 id=\"本地博客关联GitHub仓库\">本地博客关联GitHub仓库<a href=\"2019/12/10/hexo_mac部署#本地博客关联GitHub仓库\"></a></h4><p>※ 创建GitHub账号及仓库</p>\n<ul>\n<li><p>进入<a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">官网</a>注册账号</p>\n</li>\n<li><p>点击右上角“+”，new responsitory 创建GitHub仓库</p>\n<p><font color=\"red\">*</font>创建的responsitory名称应与账号名一致（eg:wyohoxtan.github.io）,否则在deploy后，访问博客网址时会出现404错误</p>\n</li>\n</ul>\n<p>※关联GitHub，免密提交</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\"># 用你注册GitHub时的邮箱号，进行秘钥生成</span>\n<span class=\"token function\">cd</span> ~\nssh-keygen -t rsa -C <span class=\"token string\">\"xxxxxxx@qq.com\"</span>\n<span class=\"token comment\" spellcheck=\"true\"># 系统就会生成一个隐藏文件夹.ssh</span>\n<span class=\"token function\">cd</span> .ssh\n<span class=\"token function\">ls</span>\n<span class=\"token comment\" spellcheck=\"true\"># 复制公钥</span>\nvim id_rsa.pub</code></pre>\n<ul>\n<li>进入GitHub网站，进入setting设置中</li>\n</ul>\n<img src=\"/2019/12/10/hexo_mac%E9%83%A8%E7%BD%B2/ssh_setting.png\" alt=\"ssh—setting\" style=\"zoom:50%;\" class=\"article-img\">\n\n<ul>\n<li><img src=\"https://upload-images.jianshu.io/upload_images/3478485-92b2d4a66901907b.png\" alt=\"ssh—setting\" style=\"zoom:50%;\">\n\n</li>\n</ul>\n<img src=\"https://upload-images.jianshu.io/upload_images/3478485-94a0d1a2f04727f6.png\" alt=\"ssh—setting\" style=\"zoom:50%;\" class=\"article-img\">\n\n<ul>\n<li><p>验证是否成功</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"> <span class=\"token function\">ssh</span> -T git@github.com</code></pre>\n</li>\n</ul>\n<p>※ 找到本地博客文件夹myBlog中的_config.yml文件，修改配置（只换username即可）</p>\n<img src=\"/2019/12/10/hexo_mac%E9%83%A8%E7%BD%B2/configymlPic.png\" alt=\"config.yml图\" style=\"zoom:50%;\" class=\"article-img\">\n\n<ul>\n<li><p>安装 hexo-deployer-git插件(不按照，git同步不成功)</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-deployer-git --save</code></pre>\n</li>\n<li><p>终端执行以下命令</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\"># 清除</span>\nhexo clean\n<span class=\"token comment\" spellcheck=\"true\"># 产生静态网页</span>\nhexo g\n<span class=\"token comment\" spellcheck=\"true\"># 部署到GitHub page上</span>\nhexo d</code></pre>\n</li>\n</ul>\n<p>※ 通过<a href=\"http://username.github.io进行访问（eg:[闲潭个人博客](https://wyohoxtan.github.io/archives)）\" target=\"_blank\" rel=\"noopener\">http://username.github.io进行访问（eg:[闲潭个人博客](https://wyohoxtan.github.io/archives)）</a></p>\n<h4 id=\"常见问题分析\">常见问题分析<a href=\"2019/12/10/hexo_mac部署#常见问题分析\"></a></h4><p>1、hexo搭建Github博客上传后，网页显示404问题解决方案</p>\n<p>分析：两种原因： ① 创建的GitHub仓库名称和GitHub账号的用户名称不同，导致无法获取。具体分析步骤可参考<a href=\"https://blog.csdn.net/dajian790626/article/details/78595684\" target=\"_blank\" rel=\"noopener\">此链接</a></p>\n<p>​                        ② 配置config.yml文件时，type: git中间必须有个空格！！！（书写格式问题）</p>\n<p>2、配置的时候 hexo d 后报错”ERROR Deployer not found: git“</p>\n<p>解决方法：安装插件hexo-deployer-git即可</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-deployer-git --save</code></pre>\n<p>3、Permanently added the RSA host key for IP address ‘52.74.223.119’ to the list of known hosts.</p>\n<p>解决：<a href=\"https://blog.csdn.net/zhoucheng05_13/article/details/52831703\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/zhoucheng05_13/article/details/52831703</a></p>\n<p>4、<a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a>: Permission denied (publickey).fatal: Could not read from remote repository.</p>\n<p>原因：客户端与服务端的ssh key不匹配</p>\n<p>解决：删除GitHub中的ssh秘钥，重新本地生成后设置到GitHub秘钥中</p>\n<p>5、同步过程中存在问题:</p>\n<img src=\"/2019/12/10/hexo_mac%E9%83%A8%E7%BD%B2/git_error.png\" alt=\"git_error\" style=\"zoom:50%;\" class=\"article-img\">\n\n<p>解决：按照上述提示，输入 </p>\n<pre class=\" language-bash\"><code class=\"language-bash\"> <span class=\"token function\">git</span> config --global user.email <span class=\"token string\">\"you@example.com\"</span>\n <span class=\"token function\">git</span> config --global user.name <span class=\"token string\">\"Your Name\"</span></code></pre>\n<p><strong>6、编写博客上传后，本地图片无法在GitHub上显示</strong></p>\n<p>※ 修改config.yml文件配置：将文件中的post_asset_folder置为true</p>\n<img src=\"/2019/12/10/hexo_mac%E9%83%A8%E7%BD%B2/createFolderAndSource.png\" alt=\"upload_pic\" style=\"zoom:50%;\" class=\"article-img\">\n\n<p>※ 根目录下执行：插件安装</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> https://github.com/CodeFalling/hexo-asset-image --save</code></pre>\n<p>※ 创建博客文件后，会同时生成文件名相同的文件夹名称，将需要使用到的资源文件存放到本文件夹内</p>\n<p>※ 书写博客中的图片文件路径 </p>\n<img src=\"/2019/12/10/hexo_mac%E9%83%A8%E7%BD%B2/pic_path.png\" alt=\"upload_pic\" style=\"zoom:50%;\" class=\"article-img\">\n\n<p>上述操作后，仍存在图片无法显示的问题:</p>\n<ul>\n<li>通过F12，得知当前的图片路径无法加载，具体原因是文件名存在空格等非法字符，导致图片路径存在问题</li>\n<li>在进行本博客的编写过程中，出现的各类资源文件信息，尽量全部存放到由hexo自动生成的同名文件夹中</li>\n</ul>\n<p>7、中文乱码的问题：</p>\n<p>※ 修改config.yml文件，设置 language值   </p>\n<p>​    anguage: zh-Hans 或者 anguage: zh-CN </p>\n<p>​    <font color=\"red\">*</font>取决于你的主题theme目录下的language目录下有zh-Hans.yml还是zh-CN.yml</p>\n<p>※ 编辑器编码确定</p>\n<h4 id=\"主题更换\">主题更换<a href=\"2019/12/10/hexo_mac部署#主题更换\"></a></h4><p>主题备选：从git或hexo官网中下载主题到本地</p>\n<p><a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a>:ikeq/hexo-theme-inside.gita href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a>:TriDiamond/hexo-theme-obsidian.git</p>\n<p>修改本地主题：</p>\n<p>  1、将下载的主题存放到本地myBlog -&gt; themes中(建议修改主题名，简单好用)</p>\n<p>  2、修改config.yml文件中的theme值，使用主题名</p>\n<h4 id=\"本地创建新博客\">本地创建新博客<a href=\"2019/12/10/hexo_mac部署#本地创建新博客\"></a></h4><p>  ※ 创建新博客文件：</p>\n<pre><code> ```bash</code></pre><p>hexo new “newBlog”<br>     ```</p>\n<p>  ※ 使用Markdown工具编写文件（eg:Typora(软件)，作业部落(在线)）</p>\n<p>  ※ 通过 <code>hexo g</code>  <code>hexo d</code> 发布到GitHub中</p>\n<h4 id=\"参考链接：\">参考链接：<a href=\"2019/12/10/hexo_mac部署#参考链接：\"></a></h4><p><a href=\"https://www.jianshu.com/p/77db3862595c\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/77db3862595c</a></p>\n<p><a href=\"https://www.jianshu.com/p/380290deb8f0\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/380290deb8f0</a></p>\n<p><a href=\"https://www.jianshu.com/p/1c888a6b8297\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/1c888a6b8297</a></p>\n","prev":{"title":"hexo_inside博客主题优化","link":"2019/12/10/hexo-inside博客主题优化"},"plink":"http://82u0q0.coding-pages.com/2019/12/10/hexo_mac部署/","reward":true,"copyright":{"custom":"未经许可，不可转载！"}}