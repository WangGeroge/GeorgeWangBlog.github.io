<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>闲潭个人博客</title>
  
  <subtitle>wyohoxtan</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://82u0q0.coding-pages.com/"/>
  <updated>2020-08-06T03:32:16.341Z</updated>
  <id>http://82u0q0.coding-pages.com/</id>
  
  <author>
    <name>闲潭</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo部署到Coding</title>
    <link href="http://82u0q0.coding-pages.com/2020/08/05/hexo%E9%83%A8%E7%BD%B2%E5%88%B0Coding/"/>
    <id>http://82u0q0.coding-pages.com/2020/08/05/hexo%E9%83%A8%E7%BD%B2%E5%88%B0Coding/</id>
    <published>2020-08-05T08:44:38.000Z</published>
    <updated>2020-08-06T03:32:16.341Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="wyohoxtanBlog"><a href="http://82u0q0.coding-pages.com/">wyohoxtanBlog</a><a href="2020/08/05/hexo部署到Coding#wyohoxtanBlog"></a></h3><p>部署到<a href="https://coding.net/" target="_blank" rel="noopener">Coding</a>的原因：国内的访问速度够快，可以提交<a href="http://www.webmasterhome.cn/seo/addurl.asp" target="_blank" rel="noopener">百度收录</a>（GitHub 禁止了百度的爬取）</p><p>ps: 最近一段时间的中美冲突，对应的国外的地区主义冒头，感觉github会存在各种加载以及限制问题。因此考虑将自身博客相关内容放入Coding中进行DevOps管理。</p><hr><h3 id="1、创建项目">1、创建项目<a href="2020/08/05/hexo部署到Coding#1、创建项目"></a></h3><ul><li><h4 id="进入Coding官网-点击免费使用-进行注册登录"><a href="2020/08/05/hexo部署到Coding#进入Coding官网-点击免费使用-进行注册登录" class="headerlink" title="进入Coding官网 ,点击免费使用,进行注册登录"></a>进入<a href="https://coding.net/" target="_blank" rel="noopener">Coding官网</a> ,点击免费使用,进行注册登录</h4></li></ul><img src="/2020/08/05/hexo%E9%83%A8%E7%BD%B2%E5%88%B0Coding/codingLogin.png" alt="codingLogin" style="zoom:35%;" class="article-img"><ul><li><h4 id="创建项目-选择DevOps项目，创建项目"><a href="2020/08/05/hexo部署到Coding#创建项目-选择DevOps项目，创建项目" class="headerlink" title="创建项目 选择DevOps项目，创建项目"></a>创建项目 选择DevOps项目，创建项目</h4></li><li><h4 id="配置公钥"><a href="2020/08/05/hexo部署到Coding#配置公钥" class="headerlink" title="配置公钥"></a>配置公钥</h4><ul><li><p>配置 SSH 公钥方法与 GitHub方式差不多。点击头像-&gt;【个人设置】-&gt;【SSH公钥】-&gt;【新增公钥】</p></li><li><p>名称随便起。获取id_rsa.pub   </p></li><li><pre><code class="bash"><span class="built_in">cd</span> /Users/a/.ssh  cat id_rsa.pub <figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">- &lt;img src&#x3D;&quot;hexo部署到Coding&#x2F;sshPublicKey.png&quot; alt&#x3D;&quot;sshPublicKey&quot; style&#x3D;&quot;zoom:30%;&quot; &#x2F;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">- **ps:**选择永久有效，若提示危险操作，需要填写密码，就填写注册的Coding的密码，若注册是没设置，在个人设置服务密码里面可以进行设置。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">- 验证SSH是否通过：</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">- &#96;&#96;&#96;bash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  ssh -T git@e.coding.net</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  ## 有如下提示，说明配置成功</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  ## Coding 提示: Hello wyohoxtan与小伙伴们, You&#39;ve connected to Coding.net via SSH. This is a personal key.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  ## wyohoxtan与小伙伴们，你好，你已经通过 SSH 协议认证 Coding.net 服务，这是一个个人公钥.</span></pre></td></tr></table></div></figure></code></pre></li></ul></li><li><h4 id="配置hexo的-config-xml文件"><a href="2020/08/05/hexo部署到Coding#配置hexo的-config-xml文件" class="headerlink" title="配置hexo的_config.xml文件"></a>配置hexo的_config.xml文件</h4><ul><li><p>点击新建项目，代码 ssh  复制：<a href="mailto:git@e.coding.net" target="_blank" rel="noopener">git@e.coding.net</a>:wyohoxtanblog/wyohoxtanblog/wyohoxtanblog.git</p></li><li><p><img src="/2020/08/05/hexo%E9%83%A8%E7%BD%B2%E5%88%B0Coding/CodingRep.png" alt="CodingRep" class="article-img"></p></li><li><pre><code class="xml"># Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:  type: git  repo:     github: git@github.com:wyohoxtan/wyohoxtan.github.io.git     coding: git@e.coding.net:wyohoxtanblog/wyohoxtanblog/wyohoxtanblog.git  branch: master<span class="comment"><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">- 配置完，执行以下命令</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  &#96;&#96;&#96;bash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  hexo clean</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  hexo g</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  hexo d</span></pre></td></tr></table></div></figure></span></code></pre></li><li><p>查看代码，在代码仓库中查看</p></li></ul></li><li><h4 id="静态网站"><a href="2020/08/05/hexo部署到Coding#静态网站" class="headerlink" title="静态网站"></a>静态网站</h4><ul><li><p>点击持续部署 -&gt; 静态网站 -&gt; 新建： </p></li><li><p>网站名随便取一个</p><img src="/2020/08/05/hexo%E9%83%A8%E7%BD%B2%E5%88%B0Coding/DeployMaster.png" alt="DeployMaster" style="zoom:30%;"></li><li><p>自定义域名（有域名者） </p><ul><li>点击右上角的设置</li><li>进行域名绑定处理</li></ul><img src="/2020/08/05/hexo%E9%83%A8%E7%BD%B2%E5%88%B0Coding/diyWWW.png" alt="diyWWW" style="zoom:30%;"></li></ul></li></ul><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h3 id=&quot;wyohoxtanBlog&quot;&gt;&lt;a href=&quot;http://82u0q0.coding-pages.com/&quot;&gt;wyohoxtanBlog&lt;/a&gt;&lt;a href=&quot;2020/08/05/hexo部署到Coding#wyohoxtanBlog&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
    
    
      <category term="coding" scheme="http://82u0q0.coding-pages.com/tags/coding/"/>
    
  </entry>
  
  <entry>
    <title>知识杂记</title>
    <link href="http://82u0q0.coding-pages.com/2020/08/03/%E7%9F%A5%E8%AF%86%E6%9D%82%E8%AE%B0/"/>
    <id>http://82u0q0.coding-pages.com/2020/08/03/%E7%9F%A5%E8%AF%86%E6%9D%82%E8%AE%B0/</id>
    <published>2020-08-03T06:27:42.000Z</published>
    <updated>2020-08-07T06:45:30.915Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Welcome-to-my-miscellany">Welcome to my miscellany!<a href="2020/08/03/知识杂记#Welcome-to-my-miscellany"></a></h3><h1 id="Quick-Start">Quick Start<a href="2020/08/03/知识杂记#Quick-Start"></a></h1><h3 id="Mac解决终端显示乱码">Mac解决终端显示乱码<a href="2020/08/03/知识杂记#Mac解决终端显示乱码"></a></h3><p>※ 打开终端的偏好设置</p><p>※ 描述文件 —&gt; Basic —&gt; 高级 —&gt; 文本编码 改为Unicode（UTF-8）</p><h3 id="Yaml与Yml的区别">Yaml与Yml的区别<a href="2020/08/03/知识杂记#Yaml与Yml的区别"></a></h3><p><font color="red">*</font> YML文件格式是YAML (YAML Aint Markup Language)编写的文件格式</p><p>   More info: <a href="http://blog.sina.com.cn/s/blog_53ab41fd0102whll.html" target="_blank" rel="noopener">参考链接</a></p><h3 id="Tomcat手动启动JavaWeb项目">Tomcat手动启动JavaWeb项目<a href="2020/08/03/知识杂记#Tomcat手动启动JavaWeb项目"></a></h3><p>※ 将javaWeb项目打包成war，存放在Tomcat的webapps文件夹中</p><p>※ 配置Tomcat的conf下的server.xml,context.xml文件</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"> <span class="comment">&lt;!--  server.xml --&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">"localhost"</span>  <span class="attr">appBase</span>=<span class="string">"webapps"</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">            <span class="attr">unpackWARs</span>=<span class="string">"true"</span> <span class="attr">autoDeploy</span>=<span class="string">"true"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">      <span class="tag">&lt;<span class="name">Valve</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.valves.AccessLogValve"</span> <span class="attr">directory</span>=<span class="string">"logs"</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="tag">             <span class="attr">prefix</span>=<span class="string">"localhost_access_lo g."</span> <span class="attr">suffix</span>=<span class="string">".txt"</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="tag">             <span class="attr">pattern</span>=<span class="string">"%h %l %u %t &amp;quot;%r&amp;quot; %s %b"</span> /&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">      <span class="tag">&lt;<span class="name">Context</span>  <span class="attr">path</span>=<span class="string">""</span> <span class="attr">docBase</span>=<span class="string">"/war名"</span> <span class="attr">reloadable</span>=<span class="string">"true"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">      <span class="tag">&lt;/<span class="name">Context</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">Host</span>&gt;</span></span></pre></td></tr></table></div></figure><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- context.xml --&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Resource</span> <span class="attr">driverClassName</span>=<span class="string">"com.mysql.jdbc.Driver"</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">          <span class="attr">maxActive</span>=<span class="string">"100"</span> <span class="attr">maxIdle</span>=<span class="string">"2"</span> <span class="attr">maxWait</span>=<span class="string">"5000"</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="tag">          <span class="attr">name</span>=<span class="string">"jdbc/cplh"</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="tag">          <span class="attr">username</span>=<span class="string">"root"</span>       </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="tag">          <span class="attr">password</span>=<span class="string">"XXX"</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="tag">          <span class="attr">type</span>=<span class="string">"javax.sql.DataSource"</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="tag">          <span class="attr">url</span>=<span class="string">"jdbc:mysql://localhost:3306/pcmdb?serverTimezone=UTC"</span>/&gt;</span></span></pre></td></tr></table></div></figure><p>注：docbase是web应用和本地路径，path是tomcat访问这个应用的URL路径</p><h3 id="Mysql替换Oracle中的to-number">Mysql替换Oracle中的to_number<a href="2020/08/03/知识杂记#Mysql替换Oracle中的to-number"></a></h3><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">两种方式：cast(value as type) 、 convert(value,type)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">select cast(numA as unsigned int) &#x2F;*整型*&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">select cast(numA as decimal(10,1)) &#x2F;*浮点型*&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">ps：（10,1）代表数字共十位，小数点后两一位。</span></pre></td></tr></table></div></figure><p>###MySQL、Oracle中的Between and</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">mysql ,oracle 中的Between and 均是包含边界</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">eg:select * from info_customer <span class="built_in">where</span> cus_id between 2 and 4;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">(实质 也等于  select * from info_customer <span class="built_in">where</span> cus_id  &gt;=2 and  cus_id &lt;=4)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">结果 2,3,4</span></pre></td></tr></table></div></figure><h3 id="Eclipse-Git-冲突处理">Eclipse Git 冲突处理<a href="2020/08/03/知识杂记#Eclipse-Git-冲突处理"></a></h3><p>1、通过 fetch，pull将代码从远程git仓库拉到本地</p><img src="/2020/08/03/%E7%9F%A5%E8%AF%86%E6%9D%82%E8%AE%B0/fetchToPullLocal.png" alt="fetchToPullLocal" style="zoom:75%;" class="article-img"><p><img src="/2020/08/03/%E7%9F%A5%E8%AF%86%E6%9D%82%E8%AE%B0/pullLocal.png" alt="pullLocal" class="article-img"></p><ul><li>① 只更新 “远程服务器 –&gt; 本地服务器” 简称(Fetch)</li><li>② 更新后，当前更新的项目与Git Repositories都会有类似一个向下的箭头，这代表“远程服务器”有东西更新到本地仓库，具体数量就是箭头隔壁的数字</li><li>③ 远程服务器 –&gt; 本地服务器” 与 “ 本地服务器 –&gt; 本地代码” 都执行 简称(Pull)</li></ul><p>2、提交代码</p><ul><li>Commit : “ 本地代码 –&gt; 本地服务器”</li><li>Push :  “本地服务器 –&gt; 远程服务器” </li></ul><p>3、先修改完代码还没有commit，在执行Fetch,那你还没有feel到代码冲突。</p><ul><li><p>I.只要你commit到本地服务器，IDE编译器就自动告诉你，已经冲突，要求你立刻解决。</p></li><li><p>II.如果你比较任性的话。直接想Commit And Push, IDE编译器也会很任性的回复你这样的图</p></li></ul><img src="/2020/08/03/%E7%9F%A5%E8%AF%86%E6%9D%82%E8%AE%B0/push.png" alt="push" style="zoom:75%;" class="article-img"><ul><li>应该要执行一下 Pull ，把 刚才Fetch 的代码植入”本地代码”，会存在冲突</li><li>若执意Push代码，提示：Repository state ： Conflicts</li><li>解决办法：<ul><li>通过定位当前冲突代码，执行 team -&gt; merge Tool -&gt; 进行代码的修改，解决冲突</li><li>若修改后，还存在冲突表示，执行  team -&gt; Add to Index  告诉IDE 已解决冲突</li><li>再进行 commit 或 commit and push 均可</li></ul></li></ul><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="PostgreSQL-表空间">PostgreSQL 表空间<a href="2020/08/03/知识杂记#PostgreSQL-表空间"></a></h3><p><a href="https://www.cnblogs.com/yanshw/p/11351136.html" target="_blank" rel="noopener">https://www.cnblogs.com/yanshw/p/11351136.html</a></p><h3 id="Mac-状态栏收缩软件-vanilla">Mac 状态栏收缩软件 vanilla<a href="2020/08/03/知识杂记#Mac-状态栏收缩软件-vanilla"></a></h3><p><a href="https://matthewpalmer.net/vanilla/" target="_blank" rel="noopener">https://matthewpalmer.net/vanilla/</a></p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ vanilla</span></pre></td></tr></table></div></figure><h3 id="Eclipse启动存在相关问题">Eclipse启动存在相关问题<a href="2020/08/03/知识杂记#Eclipse启动存在相关问题"></a></h3><p>1、One of the two will be used. Which one is undefined.</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">问题：objc[6040]: Class JavaLaunchHelper is implemented <span class="keyword">in</span> both /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/bin/java (0x10e0f04c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x10f1174e0). One of the two will be used. Which one is undefined.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">通过eclipse中的项目的java build path 中设置 jdk版本，选定 默认jdk版本</span></pre></td></tr></table></div></figure><h3 id="Npm更新存储问题">Npm更新存储问题<a href="2020/08/03/知识杂记#Npm更新存储问题"></a></h3><ul><li><p>mac安装报错Error: EACCES: permission denied, access ‘/usr/local/lib/node_modules<img src="/2020/08/03/%E7%9F%A5%E8%AF%86%E6%9D%82%E8%AE%B0/npmUpdateException.png" alt="npmUpdateException" style="zoom:50%;"></p></li><li><p>原因: 执行命令行命令时没有获得管理员权限</p></li><li><p>解决方案：在命令行前面添加sudo获取管理员权限，输入管理员密码就行</p></li></ul><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Welcome-to-my-miscellany&quot;&gt;Welcome to my miscellany!&lt;a href=&quot;2020/08/03/知识杂记#Welcome-to-my-miscellany&quot;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h1 id=&quot;Quick-Start&quot;&gt;
      
    
    </summary>
    
    
    
      <category term="杂记" scheme="http://82u0q0.coding-pages.com/tags/%E6%9D%82%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>InstallAnywhere打包web单机版</title>
    <link href="http://82u0q0.coding-pages.com/2020/01/03/InstallAnywhere%E6%89%93%E5%8C%85web%E5%8D%95%E6%9C%BA%E7%89%88/"/>
    <id>http://82u0q0.coding-pages.com/2020/01/03/InstallAnywhere%E6%89%93%E5%8C%85web%E5%8D%95%E6%9C%BA%E7%89%88/</id>
    <published>2020-01-03T07:37:30.000Z</published>
    <updated>2020-03-23T06:30:20.768Z</updated>
    
    <content type="html"><![CDATA[<h3 id="InstallAnywhere打包web">InstallAnywhere打包web<a href="2020/01/03/InstallAnywhere打包web单机版#InstallAnywhere打包web"></a></h3><p><code>InstallAnywhere,web</code></p><hr><h5 id="一、准备工作">一、准备工作<a href="2020/01/03/InstallAnywhere打包web单机版#一、准备工作"></a></h5><p>1、下载InstallAnywhere2020，并安装</p><ul><li><p>① 注册，下载地址：<a href="https://resources.flexera.com/web/www/landing/eval-download-installanywhere.html?id=IA-PRE（21天试用期）" target="_blank" rel="noopener">https://resources.flexera.com/web/www/landing/eval-download-installanywhere.html?id=IA-PRE（21天试用期）</a></p></li><li><p>② 安装</p></li></ul><p>2、下载JDK1.8，并安装</p><p>3、下载MySQL8 免安装</p><p>4、下载Tomcat8.5 免安装</p><p>5、本地创建文件夹，将当前的jdk，mysql，Tomcat复制到当前文件夹中</p><h5 id="二、创建Project">二、创建Project<a href="2020/01/03/InstallAnywhere打包web单机版#二、创建Project"></a></h5><p>※ 打开InstallAnywhere 2020，建立Basic Project Template，选择Advanced Designer,设置Title，Name等</p><ol><li><p>Project – info ：填写安装程序标题，安装文件名称，产品名称，其他项目可不填写。</p></li><li><p>Project – Description：填写产品描述、开发商、开发商主页、邮件等。</p></li><li><p>Installer UI – Look&amp;Feel：自定义安装界面、标题、标题颜色等。</p></li><li><p>Organization：组织机构信息，尚未研究。</p></li><li><p>Pre – install ：安装前准备，可以自定义安装步骤，修改各个步骤的标题及内容。</p></li><li><p>Install ：至关重要的一步，首先准备好你要打包的文件（tomcat免安装版、mysql免安装版、jdk）</p></li></ol><p>※ 设置本地语言</p><ul><li>Project -&gt; Locales -&gt; 选择需要的本地化语言</li></ul><h5 id="三、设置环境变量">三、设置环境变量<a href="2020/01/03/InstallAnywhere打包web单机版#三、设置环境变量"></a></h5><p>Install -&gt;，按钮Add Action…&gt;Set System Environment Variable&gt;Add &gt;，</p><p>设置JAVA_HOME和CATALINA_HOME,CATALINA_DIR,PATH 四个系统环境变量。其中<code>$USER_INSTALL_DIR$</code>表示用户选择的安装路径。</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">JAVA_HOME  <span class="variable">$USER_INSTALL_DIR</span>$\jdk1.8</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">CATALINA_HOME <span class="variable">$USER_INSTALL_DIR</span>$\tomcat8.5</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">CATALINA_DIR <span class="variable">$USER_INSTALL_DIR</span>$\tomcat8.5\bin</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">PATH  <span class="variable">$USER_INSTALL_DIR</span>$\jdk1.8\bin;<span class="variable">$USER_INSTALL_DIR</span>$\mysql8\bin;<span class="variable">$USER_INSTALL_DIR</span>$\tomcat8.5\bin;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">C:\Windows\System32</span></pre></td></tr></table></div></figure><p>将jdk,tomcat,mysql 通过按钮Add Files…添加进来放在 User Install Folder直接目录下</p><h5 id="四、注册服务">四、注册服务<a href="2020/01/03/InstallAnywhere打包web单机版#四、注册服务"></a></h5><p>1、安装免安装mysql</p><ul><li><p>在本地下载完成mysql后，解压，进行初始化处理，并创建数据库以及对应的表</p><ul><li>初始化mysql</li><li>修改mysql登录密码</li><li>创建数据库</li><li>创建表</li></ul><blockquote><ul><li><p>当前解压版mysql无data文件夹(存放数据的文件夹，无或者内容不对会启动不成功)，无my.ini文件</p></li><li><p>通过创建my.ini文件</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置3306端口</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">port</span>=<span class="number">3306</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置mysql的安装目录</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="attr">basedir</span>= D:\ProjectJKTY-<span class="number">2017</span>\mysql8.<span class="number">0</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置mysql数据库的数据的存放目录</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="attr">datadir</span>= D:\ProjectJKTY-<span class="number">2017</span>\mysql8.<span class="number">0</span>\data</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 允许最大连接数</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="attr">max_connections</span>=<span class="number">200</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 允许连接失败的次数。这是为了防止有人从该主机试图攻击数据库系统</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="attr">max_connect_errors</span>=<span class="number">10</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 服务端使用的字符集默认为UTF8</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="attr">character-set-server</span>=utf8</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建新表时将使用的默认存储引擎</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="attr">default-storage-engine</span>=INNODB</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认使用“mysql_native_password”插件认证</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="attr">default_authentication_plugin</span>=mysql_native_password</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="section">[mysql]</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置mysql客户端默认字符集</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="attr">default-character-set</span>=utf8</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="section">[client]</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置mysql客户端连接服务端时默认使用的端口</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="attr">port</span>=<span class="number">3306</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="attr">default-character-set</span>=utf8</span></pre></td></tr></table></div></figure></li><li><p>通过进入mysql路径下，执行 <code>mysqld --initialize</code> 生成data文件夹及其相关内容</p></li><li><p>执行mysql的服务安装 ： <code>mysqld --install</code></p></li><li><p>执行启动mysql操作 ： `net start mysql ``</p><ul><li><p>注：第一次登陆MYSQL时，会提示要求输入初始密码，这是考虑安全因素，命令：</p><p><code>mysqld --initialize</code>会随机生成密码。</p></li><li><p>初始密码在data文件夹下的xxx.err文件中，可以用记事本打开，用ctrl+f 查找功能找到如下一行记录：</p><p>[Note] A temporary password is generated for root@localhost: NZ+uhXPq1zN.</p><p>其中NZ+uhXPq1zN.即为初始密码（注意.号不要漏了）</p><p>进入后可以用如下命令修改，这里密码改为root：</p></li></ul></li><li><pre><code class="mysql">ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;RootXXX&apos;;<figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">- 进行mysql的数据库，数据库数据导入操作（按照installAnywhere中的mysql安装步骤走）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  - 创建mysql数据库</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    &#96;&#96;&#96;mysql</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    mysql8\bin\mysql -uroot -pRootXXX&lt; \mysql8\create.sql</span></pre></td></tr></table></div></figure></code></pre></li></ul><ul><li><p>将已有数据库数据导入到mysql数据库中</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">mysql8\bin\mysql -hlocalhost  -uroot -pRootXXX pcmdb &lt; \mysql8\testJkty.sql</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">mysql8\bin\mysql -hlocalhost  -uroot -pRootXXX pcmdb &lt; \mysql8\jktyView.sql</span></pre></td></tr></table></div></figure></li></ul></blockquote></li><li><p>添加按钮Add Action…&gt;Motify Text File-Single File&gt;Add&gt;,然后在Installed file选中mysql安装目录下的my.in(如果没有这个文件，请先创建这样一个文件，内容为空),其中Additional Text选中第一个prepend,在文本框中输入:</p></li></ul><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">[mysqld]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">basedir = <span class="variable">$USER_INSTALL_DIR</span>$\mysql8</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">datadir = <span class="variable">$USER_INSTALL_DIR</span>$\mysql8\data</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">default-character-set = utf8</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span>-variable=max_connections=1000</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">[WinMySQLAdmin]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">Server=<span class="variable">$USER_INSTALL_DIR</span>$\mysql5.0\bin\mysqld-nt.exe</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">user=root</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">[client]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">port=3306</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">user=root</span></pre></td></tr></table></div></figure><p>将该Motify Text File-Single File移动到Panel: Install Complete后面。</p><p>2、注册mysql服务：</p><ul><li><p>在Post-install中，addAction 选择”Execute Script/Batch file” 在Comment中取名为”注册MySQL服务”，在Script中写入</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Call <span class="string">"<span class="variable">$USER_INSTALL_DIR</span>$/mysql8/bin/mysqld"</span> -remove   </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">Call <span class="string">"<span class="variable">$USER_INSTALL_DIR</span>$/mysql8/bin/mysqld"</span> -install</span></pre></td></tr></table></div></figure></li></ul><p>3、启动mysql：</p><ul><li>在Post-install中，addAction 选择”Execute Script/Batch file” 在Comment中取名为”启动MySQL”，在Script中写入</li></ul><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">net start mysql</span></pre></td></tr></table></div></figure><p>4、启动Tomcat</p><ul><li>在Post-install中，addAction 选择”Execute Script/Batch file” 在Comment中取名为”启动Tomcat”，在Script中写入</li></ul><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="variable">$USER_INSTALL_DIR</span>$/tomcat8.5/bin/startup.bat</span></pre></td></tr></table></div></figure><p>5、complete</p><p>相关安装action：</p><p><img src="/2020/01/03/InstallAnywhere%E6%89%93%E5%8C%85web%E5%8D%95%E6%9C%BA%E7%89%88/installAnywhere%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B.png" alt="installAnywhere安装过程" class="article-img"></p><h5 id="相关安装问题汇总：">相关安装问题汇总：<a href="2020/01/03/InstallAnywhere打包web单机版#相关安装问题汇总："></a></h5><p>① mysql服务无法安装，无法启动相关服务</p><ul><li>win10 彻底删除mysql</li></ul><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">1. 停止MySQL服务</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">　　开始 -&gt; 所有应用 -&gt; Windows管理工具 -&gt; 服务，将MySQL服务停止。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">2. 卸载mysql server</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">　　控制面板\所有控制面板项\程序和功能，将mysql server卸载掉。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">3. 将MySQL安装目录下的MySQL文件夹删除（我的安装目录是C:\Program Files (x86)\MySQL）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">4. 运行“regedit”文件，打开注册表。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">　　删除`HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\Eventlog\Application\MySQL`文件夹</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">　　删除`HKEY_LOCAL_MACHINE\SYSTEM\ControlSet002\Services\Eventlog\Application\MySQL`文件夹。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">　　删除`HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Eventlog\Application\MySQL`的文件夹。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">　　如果没有相应的文件夹，就不用删除了。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">5. 删除C盘下的“C:\ProgramData\MySQL ”文件夹，如果删除不了则用360粉碎掉即可，</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">　　该programData文件默认是隐藏的，设置显示后即可见，或者直接复制 C:\ProgramData 到地址栏回车即可进入！将整个MySQL文件夹删除掉。。。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">6. 开始 -&gt; 所有应用 -&gt; Windows管理工具 -&gt; 服务</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">　　如果已经将MySQL卸载，但通过“开始 -&gt; 所有应用 -&gt; Windows管理工具 -&gt; 服务”查看到MySQL服务仍然残留在系统服务里。又不想改服务名，改怎么办呢。只要在CMD里输入一条命令就可以将服务删除：</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">　　sc delete mysql //这里的mysql是你要删除的服务名, 这样一来服务就被删除了。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">重装MySQL数据库了！！！</span></pre></td></tr></table></div></figure><p>② dsName(JNDI):jdbc/cplhERROR! null</p><ul><li>在Context.xml 中配置 数据库相关信息，server.xml中不做数据库的配置</li></ul><p><img src="/2020/01/03/InstallAnywhere%E6%89%93%E5%8C%85web%E5%8D%95%E6%9C%BA%E7%89%88/contentXML%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF.png" alt="contentXML配置信息" class="article-img"></p><p><img src="/2020/01/03/InstallAnywhere%E6%89%93%E5%8C%85web%E5%8D%95%E6%9C%BA%E7%89%88/serverXML%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF.png" alt="serverXML配置信息" class="article-img"></p><p>③  在mysql命令行下执行sql文件</p><p> <a href="https://blog.csdn.net/qq_36501591/article/details/80354924" target="_blank" rel="noopener">https://blog.csdn.net/qq_36501591/article/details/80354924</a></p><h5 id="指导材料：">指导材料：<a href="2020/01/03/InstallAnywhere打包web单机版#指导材料："></a></h5><ul><li><a href="https://blog.csdn.net/number_89757/article/details/80643865" target="_blank" rel="noopener">https://blog.csdn.net/number_89757/article/details/80643865</a></li><li><a href="https://www.cnblogs.com/martin-roger/p/5912271.html" target="_blank" rel="noopener">https://www.cnblogs.com/martin-roger/p/5912271.html</a></li><li><a href="https://www.cnblogs.com/S-E-P/archive/2010/01/10/2045078.html" target="_blank" rel="noopener">https://www.cnblogs.com/S-E-P/archive/2010/01/10/2045078.html</a></li><li><a href="https://blog.csdn.net/ljz2009y/article/details/7707237" target="_blank" rel="noopener">https://blog.csdn.net/ljz2009y/article/details/7707237</a></li><li><a href="https://blog.csdn.net/y19910825/article/details/53740045" target="_blank" rel="noopener">https://blog.csdn.net/y19910825/article/details/53740045</a></li><li><a href="https://wenku.baidu.com/view/db30494233d4b14e8424684d.html" target="_blank" rel="noopener">https://wenku.baidu.com/view/db30494233d4b14e8424684d.html</a></li><li><a href="https://www.taodocs.com/p-301026194.html" target="_blank" rel="noopener">https://www.taodocs.com/p-301026194.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;InstallAnywhere打包web&quot;&gt;InstallAnywhere打包web&lt;a href=&quot;2020/01/03/InstallAnywhere打包web单机版#InstallAnywhere打包web&quot;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Instal
      
    
    </summary>
    
    
    
      <category term="web单机版" scheme="http://82u0q0.coding-pages.com/tags/web%E5%8D%95%E6%9C%BA%E7%89%88/"/>
    
  </entry>
  
  <entry>
    <title>闲潭杂记</title>
    <link href="http://82u0q0.coding-pages.com/2019/12/29/%E9%97%B2%E6%BD%AD%E6%9D%82%E8%AE%B0/"/>
    <id>http://82u0q0.coding-pages.com/2019/12/29/%E9%97%B2%E6%BD%AD%E6%9D%82%E8%AE%B0/</id>
    <published>2019-12-29T03:05:01.000Z</published>
    <updated>2020-08-03T06:46:31.043Z</updated>
    
    <content type="html"><![CDATA[<h3 id="闲散文章随笔">闲散文章随笔<a href="2019/12/29/闲潭杂记#闲散文章随笔"></a></h3><hr><p>《六朝志怪》</p><p>​    开篇 李贺《神弦》</p><p>​    所谓六朝： 三国，晋，宋，齐，梁，陈</p><p>​    逸史所谓何？书中有言：继续活在人们口头上的传说一旦被记录下来，就成为了具有浓厚小说意味的逸史</p><hr><p>我爱你，不光是因为你的样子，还因为和你在一起时我的样子；我爱你不光是因为你为我而做的事，还因为，为了你，我能做的成的事；我爱你，因为你能唤出我最真的那部分；我爱你，因为你穿过我的心灵的旷野，如同阳光透过水晶般容易。</p><hr><p>随笔：</p><p>​      近来，日益消退的疫疾，以及满是损人利己的举措，让本就烦闷的内心又增雾霾。说好的在家办公，说好的有效处理相关工作问题，也愈发地坐立不安，心神不宁。老是走神的自己，无法平复的积怨，让一切又变得那么的磕磕绊绊，无法顺畅，进而陷入到一种死循环的陷进中，难以自持。</p><p>​      生活好像总是这般，生下来，活下去，真够艰难。每个人心中的那杆秤，总是被人心压得狂摆不止，岌岌可危。道德的，法制的，经济的，文化的，思想的。该表达的，该陈述的，该倾诉的，该讨论的，该接纳的，好像都变得寡淡无味，不可自知。</p><p>​      乖乖做好自己就好。理清楚自己的内心，理清未来所需前往的地方，坚强武装好自我，坚定脚步，一步一步走过去，与爱的人。</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;闲散文章随笔&quot;&gt;闲散文章随笔&lt;a href=&quot;2019/12/29/闲潭杂记#闲散文章随笔&quot;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;《六朝志怪》&lt;/p&gt;
&lt;p&gt;​    开篇 李贺《神弦》&lt;/p&gt;
&lt;p&gt;​    所谓六朝： 三国，晋，宋，齐，梁，陈&lt;/p&gt;
&lt;p&gt;​
      
    
    </summary>
    
    
    
      <category term="随笔" scheme="http://82u0q0.coding-pages.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>hexo_inside博客主题优化</title>
    <link href="http://82u0q0.coding-pages.com/2019/12/10/hexo-inside%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/"/>
    <id>http://82u0q0.coding-pages.com/2019/12/10/hexo-inside%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/</id>
    <published>2019-12-10T13:10:31.000Z</published>
    <updated>2020-08-10T03:29:42.317Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Hexo-inside主题优化">Hexo inside主题优化<a href="2019/12/10/hexo-inside博客主题优化#Hexo-inside主题优化"></a></h3><p><code>hexo inside 优化</code></p><hr><h4 id="hexo系列问题">hexo系列问题<a href="2019/12/10/hexo-inside博客主题优化#hexo系列问题"></a></h4><h6 id="※-部署到github时会删掉README文件">※ 部署到github时会删掉README文件<a href="2019/12/10/hexo-inside博客主题优化#※-部署到github时会删掉README文件"></a></h6><p>​    △ 分析：</p><blockquote><p> ① 执行<code>hexo g</code>后，会把source文件里的.md格式的文件渲染为html文件并放到public下面；</p><p> ② 继续执行<code>hexo d</code>后，会将public下面的所有文件提交到对应的XXX.github.io仓库中；</p><p> ③ 由于本地public文件夹无README.md文件，在提交public文件时，github会认为你把README.md文件      删掉了，同时github也会删掉仓库里的README.md文件</p></blockquote><p>   △ 解决：</p><blockquote><p>① 在本地source文件夹内创建一个 README.md</p><p>② 修改Hexo根目录下的_config.yml文件，将skip_render参数的值设置为README.md</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="attr">skip_render:</span> <span class="string">README.md</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="string">//</span>  <span class="string">为什么需要设置这一步呢？</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="string">//</span>  <span class="string">因为你执行hexo</span> <span class="string">g命令时，hexo会默认将source文件里的所有md文件渲染为html文件放到public中，</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="string">//</span>  <span class="string">同时README.md会被渲染为README.html文件放到public文件里</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="string">//</span>  <span class="string">加上这段设置，就是告诉hexo的解析器，你在渲染source文件里的md文件时，跳过README.md文件</span></span></pre></td></tr></table></div></figure></blockquote><h4 id="Inside主题改造">Inside主题改造<a href="2019/12/10/hexo-inside博客主题优化#Inside主题改造"></a></h4><h6 id="※-博客头像、简介、目录、链接、搜索、主题、字体、加载速度、评论、访问量">※ 博客头像、简介、目录、链接、搜索、主题、字体、加载速度、评论、访问量<a href="2019/12/10/hexo-inside博客主题优化#※-博客头像、简介、目录、链接、搜索、主题、字体、加载速度、评论、访问量"></a></h6><p><code>config.yml文件改造</code></p><p>​    <strong>△ 头像设置</strong></p><blockquote><p>① 在当前主题中source创建img文件夹，将自己头像照片存放到文件夹中</p><p>② 在主题配置文件 _config.yml 文件，设置以下值：</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 头像url</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">avatar:</span> <span class="string">/img/avatar.jpg</span> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">favicon:</span> <span class="string">/img/avatar.jpg</span></span></pre></td></tr></table></div></figure></blockquote><p>​    <strong>△ 目录设置</strong></p><p>  <strong>△ 设置添加rss ,github等链接</strong></p><blockquote><p>① 在目录下执行安装hexo插件</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install --save hexo-generator-feed</span></pre></td></tr></table></div></figure><p>② 在config.yml文件中添加插件信息</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment">## Plugins: http://hexo.io/plugins/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">plugins:</span> <span class="string">hexo-generate-feed</span></span></pre></td></tr></table></div></figure><p>③ 在theme目录下的config.yml文件中添加rss配置</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Set rss to false to disable feed link.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Leave rss as empty to use site's feed link.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Set rss to specific value if you have burned your feed already.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="attr">rss:</span> <span class="string">/atom.xml</span></span></pre></td></tr></table></div></figure><p>④ 重新部署</p></blockquote><p>  <strong>△ 设置打赏模块</strong></p><blockquote><p>1、下载微信，支付宝的支付图片</p><p>2、将图片放入主题的img文件夹中</p><p>3、设置相应的属性，具体如下：</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="attr">reward:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># Text which shows at the top.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># 显示一句文案</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">text:</span>  <span class="string">交个朋友啦</span> <span class="string">☕</span> <span class="string">.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># wechatpay: /img/Wechat.jpg</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># alipay: /img/Alipy.jpg</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># Payment Methods</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># 支付方式列表，注意是数组</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># qrcode, url and text must be set at least one</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># wechat, alipay, paypal and bitcoin has a built-in icon,</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># use `name` to apply</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">methods:</span> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="comment"># wechat、alipay、paypal、bitcoin 对应四种不同的图标和配色</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="comment"># 此外的任何自定义名称，都需要在语言文件内增加相应的语言，</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    <span class="comment"># 同时配色与 appearance.accent_color 一致</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">wechat</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">      <span class="comment"># 二维码地址</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">      <span class="attr">qrcode:</span> <span class="string">img/Wechat.jpg</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">      <span class="comment"># 显示一个链接</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">      <span class="attr">url:</span> <span class="string">/img/Wechat.jpg</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">      <span class="comment"># 若设置了 url，则此值会显示为链接的文本，否则为一段普通文本</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">      <span class="attr">text:</span> <span class="string">🤝微信🤝</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">      <span class="comment"># 选中时的颜色</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">      <span class="attr">color:</span> <span class="string">'#33CC00'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">      <span class="comment"># qrcode、url 和 text 必须至少设置一项</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">alipay</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">      <span class="comment"># 二维码地址</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">      <span class="attr">qrcode:</span> <span class="string">img/Alipy.jpg</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">      <span class="comment"># 显示一个链接</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">      <span class="attr">url:</span> <span class="string">/img/Alipy.jpg</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">      <span class="comment"># 若设置了 url，则此值会显示为链接的文本，否则为一段普通文本</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">      <span class="attr">text:</span> <span class="string">🤝支付宝🤝</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">      <span class="comment"># 选中时的颜色</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">      <span class="attr">color:</span> <span class="string">'#00CCFF'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr></table></div></figure><p>注：当前的name中的，需要小写，是内置支付方式</p></blockquote><p>  <strong>△ 设置统计字数，访问量</strong></p><blockquote><p>问题思考：如何添加js引用</p><p>统计使用<strong>“不蒜子”</strong></p><p>如何处理hexo inside主题布局修改问题</p><p>分析：inside主题是通过AngularJS实现</p><p>① 通过vscode将inside文件夹打开</p><p>② 分析layout文件夹</p><p>通过分析研究 _config.xml 将相关不蒜子统计文件js配置处理添加到文件中</p><p><strong>1、支持通过安装 html-minifier、babel 和 terser 来实现代码压缩。</strong></p><ul><li><p>项目根目录执行（Hexo 根目录，非 themes/inside）：</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install babel-core babel-preset-env html-minifier terser --save</span></pre></td></tr></table></div></figure></li></ul><p><strong>2、先进行脚本的安装，再使用不蒜子的页面</strong></p><p>安装方法：主题_config.xml配置文件 plugins 模块 插入 busuanzi.js</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">_config.xml</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">---------------------------------------------------------------------------------</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">plugins: </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    - position: sidebar</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">      template: | </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">#   # Global Inject scripts/styles</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    - //busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr></table></div></figure><p>在 _config.xml 文件里找到 footer 下的 custom，写入相关的HTML代码，如：</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">_config.xml</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">---------------------------------------------------------------------------------</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">footer:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"># Custom text.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  # 于最后一行添加自定义内容</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  custom: <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>= <span class="string">"busuanzi_container_site_uv"</span> <span class="attr">style</span> =<span class="string">'display:none'</span>&gt;</span>Total <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_uv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> visitors. <span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_container_site_pv"</span> <span class="attr">style</span> = <span class="string">'display:none'</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_pv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> Views<span class="tag">&lt;/<span class="name">span</span>&gt;</span> </span></pre></td></tr></table></div></figure><hr><p>安装过程的问题：</p><p>问题一：引用js的问题</p><ul><li>通过plugins模块中的Global Inject scripts/styles</li></ul><p>问题二：部署后，页面显示的访问量过大</p><ul><li>在本地是此有数据量过大问题，部署后就无当前问题</li></ul><p>附属链接：</p><p><a href="https://removeif.github.io/theme/不蒜子统计常见问题.html" target="_blank" rel="noopener">不蒜子统计常见问题</a></p></blockquote><p> <strong>△ 设置about，search</strong></p><ul><li><p>创建about分类文件夹 </p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">'about'</span></span></pre></td></tr></table></div></figure></li><li><p>完善网页内容</p></li></ul><p><strong>△ 使用 valine评论进行配置</strong></p><ul><li><p>配置_config.xml 中的 plugins中的valine</p></li><li><pre><code class="xml">    - /js/Valine.min.js    - /js/av-min.js    - position: comments      template: |        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"vcomment"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript">          <span class="keyword">new</span> Valine({</span><span class="actionscript">            el: <span class="string">'#vcomment'</span>,</span><span class="actionscript">            appId: <span class="string">'XXX'</span>,</span><span class="actionscript">            appKey: <span class="string">'XXX'</span>,</span><span class="javascript">            path: <span class="built_in">decodeURIComponent</span>(location.pathname)</span>          })        <span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="comment"><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">- 由于考虑到线上的valine的js存在访问加载等的相关问题，将线上js做成本地博客js</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  - 将线上js 拷贝到本地theme -&gt; inside -&gt; source -&gt; js</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  - &#96;&#96;&#96;xml</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    - &#x2F;&#x2F;cdn1.lncld.net&#x2F;static&#x2F;js&#x2F;3.0.4&#x2F;av-min.js</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    - &#x2F;&#x2F;unpkg.com&#x2F;valine&#x2F;dist&#x2F;Valine.min.js</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    #将其替换成本地路径</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    - &#x2F;js&#x2F;Valine.min.js</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    - &#x2F;js&#x2F;av-min.js</span></pre></td></tr></table></div></figure></span></code></pre></li><li><p>valine 评论 需要配合 <a href="https://leancloud.cn/" target="_blank" rel="noopener">leancloud</a> 作为后端支持</p><ul><li>进入 <a href="https://leancloud.cn/" target="_blank" rel="noopener">leancloud</a> 官网，可通过GitHub账号注册，添加邮箱验证功能</li><li>进入后，创建应用，创建完后点击右上角设置</li><li><img src="/2019/12/10/hexo-inside%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/lendCloudSetting.png" alt="lendCloudSetting" style="zoom:50%;"></li><li>选择应用keys，当中的AppID ，AppKey即为Valine需要的ID，key</li><li><img src="/2019/12/10/hexo-inside%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/lendCloudKeys.png" alt="lendCloudKeys" style="zoom:30%;"></li><li>进入应用中心绑定你的个人博客域名</li><li><img src="/2019/12/10/hexo-inside%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/leanCloudWeb.png" alt="leanCloudWeb" style="zoom:30%;"></li><li><font color="red">*</font> ps:若没配置web安全域名，则会在博客下提示：Code 403: 访问被API域名白名单拒绝，请检查你的安全域名设置.</li><li>Lendcloud 存储中创建Commit class</li><li><img src="/2019/12/10/hexo-inside%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/lendCloudClass.png" alt="lendCloudClass" style="zoom:30%;"></li><li>Valine配置：</li><li>完成</li></ul></li><li><p>问题①：</p></li></ul><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Code 403: 访问被API域名白名单拒绝，请检查你的安全域名设置.</span></pre></td></tr></table></div></figure><p><font color="red">*</font> 解决：在leancloud的<code>应用&gt;设置&gt;安全中心&gt;Web安全域名</code>中只添加了新的自定义的域名即可解决该问题。</p><ul><li><p>问题②：</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">TypeError</span>: Cannot read property <span class="string">'hide'</span> <span class="keyword">of</span> <span class="literal">undefined</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    at r.ErrorHandler (Valine.min.js:<span class="number">12</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    at r.init (Valine.min.js:<span class="number">12</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    at <span class="keyword">new</span> r (Valine.min.js:<span class="number">12</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    at <span class="keyword">new</span> i (Valine.min.js:<span class="number">12</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    at (index):<span class="number">1891</span></span></pre></td></tr></table></div></figure><p><font color="red">*</font> 解决：除了引用Valine.min.js 还需要将 Valine.Pure.min.js 填入到项目中</p><ul><li><del>相关js  <a href="https://cdn.jsdelivr.net/npm/valine@1.4.14/dist/（存在问题）" target="_blank" rel="noopener">https://cdn.jsdelivr.net/npm/valine@1.4.14/dist/（存在问题）</a></del></li><li>通过已有前辈的技能，说是需要将 valine中的language设置为 zh-cn，尝试后仍无效</li><li>应该还是Valine.min.js的版本的问题</li><li>替换现有的js （js/Valine.min.js）</li><li><strong><font color="red">update：</font></strong> 通过核实得知当前的hexo的 _config.xml 中的language设置为 zh-Hans，改为 zh-cn</li></ul></li></ul><h6 id="改造过程中的问题-Exception：">改造过程中的问题 Exception：<a href="2019/12/10/hexo-inside博客主题优化#改造过程中的问题-Exception："></a></h6><p><strong>1、config.yml文件在部署过程中，存在问题：duplicated mapping key at line 242, column -2307:</strong> </p><ul><li>在search模块中，设置 其一 adapter即可，不可设置两个</li></ul><p><strong>2、bad indentation of a mapping entry at line 330, column 3</strong></p><ul><li>缩进错误</li></ul><p><strong>3、无法加载Disqus</strong></p><ul><li>无法访问<code>//shortname.disqus.com/embed.js</code></li></ul><p><strong>4、添加gitment评论存在问题</strong></p><ul><li>[object ProgressEvent]  引用的js所涉及的服务器存在稳定问题</li><li>由于gitment评论一直存在网络问题</li><li>以及GitHub的官网访问速率问题导致的博客存在速率问题</li><li>将其替换成Valine</li></ul><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Hexo-inside主题优化&quot;&gt;Hexo inside主题优化&lt;a href=&quot;2019/12/10/hexo-inside博客主题优化#Hexo-inside主题优化&quot;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;hexo inside 优化&lt;/code&gt;&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
    
      <category term="hexo主题优化" scheme="http://82u0q0.coding-pages.com/tags/hexo%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>hexo_mac部署</title>
    <link href="http://82u0q0.coding-pages.com/2019/12/10/hexo_mac%E9%83%A8%E7%BD%B2/"/>
    <id>http://82u0q0.coding-pages.com/2019/12/10/hexo_mac%E9%83%A8%E7%BD%B2/</id>
    <published>2019-12-10T11:32:18.000Z</published>
    <updated>2020-08-03T06:46:06.506Z</updated>
    
    <content type="html"><![CDATA[<p>搭建个人博客（<a href="https://wyohoxtan.github.io/）" target="_blank" rel="noopener">https://wyohoxtan.github.io/）</a></p><p><code>mac hexo</code> </p><hr><h4 id="hexo介绍">hexo介绍<a href="2019/12/10/hexo_mac部署#hexo介绍"></a></h4><p>官网：<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">https://hexo.io/zh-cn/</a> </p><p>※ hexo 可以理解为是基于node.js制作的一个博客工具 </p><p>※ hexo 正常来说，不需要部署到我们的服务器上，我们的服务器上保存的，其实是基于在hexo通过markdown编写的文章，然后hexo帮我们生成静态的html页面，然后，将生成的html上传到我们的服务器。简而言之：hexo是个静态页面生成、上传的工具。</p><p>※ 源码结构</p><div class="article-bounded"><div class="article-table"><table><thead><tr><th>文件/文件夹</th><th align="left">说明</th></tr></thead><tbody><tr><td>_config.yml</td><td align="left">配置文件</td></tr><tr><td>public</td><td align="left">生成的静态文件，这个目录最终会发布到服务器</td></tr><tr><td>scaffolds</td><td align="left">一些通用的markdown模板</td></tr><tr><td>source</td><td align="left">编写的markdown文件，_drafts草稿文件，_posts发布的文章</td></tr><tr><td>themes</td><td align="left">博客的模板</td></tr></tbody></table></div></div><h4 id="hexo搭建博客的一般步骤">hexo搭建博客的一般步骤<a href="2019/12/10/hexo_mac部署#hexo搭建博客的一般步骤"></a></h4><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">安装Node.js</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">安装Git</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">安装Hexo</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">安装主题</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">本地运行测试</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">注册github并创建仓库</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">部署到github中</span></pre></td></tr></table></div></figure><h4 id="环境配置">环境配置<a href="2019/12/10/hexo_mac部署#环境配置"></a></h4><p>※ 安装 Git，Node.js, hexo</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检测是否已安装</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">node -v</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">git --version</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 未安装，进行node，git的安装</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第一种方法：</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、执行以下命令安装homebrew</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)</span>"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 2、执行以下命令安装git</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">brew install git</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 3、执行以下命令安装nodejs</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">brew install node</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#第二种方法：</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#1、先安装git</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#git安装包下载地址http://code.google.com/p/git-osx-installer/downloads/list</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#2、安装nodejs</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#依次执行以下命令：</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/joyent/node.git nodejs</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> nodejs</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">./configure</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">make</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">sudo make install</span></pre></td></tr></table></div></figure><p>※ 若已安装，执行安装hexo步骤</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span></pre></td></tr></table></div></figure><p>※创建自己博客的文件夹，初始化hexo博客信息</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在合适的目录下创建一个blog文件夹</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">mkdir myBlog</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入目录</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> myBlog</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化目录</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">hexo init</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#开启本地服务 </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">hexo s</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过浏览器访问：http://localhost:4000</span></span></pre></td></tr></table></div></figure><h4 id="本地博客关联GitHub仓库">本地博客关联GitHub仓库<a href="2019/12/10/hexo_mac部署#本地博客关联GitHub仓库"></a></h4><p>※ 创建GitHub账号及仓库</p><ul><li><p>进入<a href="https://github.com/" target="_blank" rel="noopener">官网</a>注册账号</p></li><li><p>点击右上角“+”，new responsitory 创建GitHub仓库</p><p><font color="red">*</font>创建的responsitory名称应与账号名一致（eg:wyohoxtan.github.io）,否则在deploy后，访问博客网址时会出现404错误</p></li></ul><p>※关联GitHub，免密提交</p>  <figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 用你注册GitHub时的邮箱号，进行秘钥生成</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"xxxxxxx@qq.com"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 系统就会生成一个隐藏文件夹.ssh</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> .ssh</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">ls</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 复制公钥</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">vim id_rsa.pub</span></pre></td></tr></table></div></figure><ul><li>进入GitHub网站，进入setting设置中</li></ul><img src="/2019/12/10/hexo_mac%E9%83%A8%E7%BD%B2/ssh_setting.png" alt="ssh—setting" style="zoom:50%;" class="article-img"><ul><li><img src="https://upload-images.jianshu.io/upload_images/3478485-92b2d4a66901907b.png" alt="ssh—setting" style="zoom:50%;"></li></ul><img src="https://upload-images.jianshu.io/upload_images/3478485-94a0d1a2f04727f6.png" alt="ssh—setting" style="zoom:50%;" class="article-img"><ul><li><p>验证是否成功</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span></pre></td></tr></table></div></figure></li></ul><p>※ 找到本地博客文件夹myBlog中的_config.yml文件，修改配置（只换username即可）</p><img src="/2019/12/10/hexo_mac%E9%83%A8%E7%BD%B2/configymlPic.png" alt="config.yml图" style="zoom:50%;" class="article-img"><ul><li><p>安装 hexo-deployer-git插件(不按照，git同步不成功)</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span></pre></td></tr></table></div></figure></li><li><p>终端执行以下命令</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 清除</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">hexo clean</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 产生静态网页</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">hexo g</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 部署到GitHub page上</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">hexo d</span></pre></td></tr></table></div></figure></li></ul><p>※ 通过<a href="http://username.github.io进行访问（eg:[闲潭个人博客](https://wyohoxtan.github.io/archives)）" target="_blank" rel="noopener">http://username.github.io进行访问（eg:[闲潭个人博客](https://wyohoxtan.github.io/archives)）</a></p><h4 id="常见问题分析">常见问题分析<a href="2019/12/10/hexo_mac部署#常见问题分析"></a></h4><p>1、hexo搭建Github博客上传后，网页显示404问题解决方案</p><p>分析：两种原因： ① 创建的GitHub仓库名称和GitHub账号的用户名称不同，导致无法获取。具体分析步骤可参考<a href="https://blog.csdn.net/dajian790626/article/details/78595684" target="_blank" rel="noopener">此链接</a></p><p>​                        ② 配置config.yml文件时，type: git中间必须有个空格！！！（书写格式问题）</p><p>2、配置的时候 hexo d 后报错”ERROR Deployer not found: git“</p><p>解决方法：安装插件hexo-deployer-git即可</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span></pre></td></tr></table></div></figure><p>3、Permanently added the RSA host key for IP address ‘52.74.223.119’ to the list of known hosts.</p><p>解决：<a href="https://blog.csdn.net/zhoucheng05_13/article/details/52831703" target="_blank" rel="noopener">https://blog.csdn.net/zhoucheng05_13/article/details/52831703</a></p><p>4、<a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>: Permission denied (publickey).fatal: Could not read from remote repository.</p><p>原因：客户端与服务端的ssh key不匹配</p><p>解决：删除GitHub中的ssh秘钥，重新本地生成后设置到GitHub秘钥中</p><p>5、同步过程中存在问题:</p><img src="/2019/12/10/hexo_mac%E9%83%A8%E7%BD%B2/git_error.png" alt="git_error" style="zoom:50%;" class="article-img"><p>解决：按照上述提示，输入 </p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">git config --global user.email <span class="string">"you@example.com"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"Your Name"</span></span></pre></td></tr></table></div></figure><p><strong>6、编写博客上传后，本地图片无法在GitHub上显示</strong></p><p>※ 修改config.yml文件配置：将文件中的post_asset_folder置为true</p><img src="/2019/12/10/hexo_mac%E9%83%A8%E7%BD%B2/createFolderAndSource.png" alt="upload_pic" style="zoom:50%;" class="article-img"><p>※ 根目录下执行：插件安装</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span></pre></td></tr></table></div></figure><p>※ 创建博客文件后，会同时生成文件名相同的文件夹名称，将需要使用到的资源文件存放到本文件夹内</p><p>※ 书写博客中的图片文件路径 </p><img src="/2019/12/10/hexo_mac%E9%83%A8%E7%BD%B2/pic_path.png" alt="upload_pic" style="zoom:50%;" class="article-img"><p>上述操作后，仍存在图片无法显示的问题:</p><ul><li>通过F12，得知当前的图片路径无法加载，具体原因是文件名存在空格等非法字符，导致图片路径存在问题</li><li>在进行本博客的编写过程中，出现的各类资源文件信息，尽量全部存放到由hexo自动生成的同名文件夹中</li></ul><p>7、中文乱码的问题：</p><p>※ 修改config.yml文件，设置 language值   </p><p>​    anguage: zh-Hans 或者 anguage: zh-CN </p><p>​    <font color="red">*</font>取决于你的主题theme目录下的language目录下有zh-Hans.yml还是zh-CN.yml</p><p>※ 编辑器编码确定</p><h4 id="主题更换">主题更换<a href="2019/12/10/hexo_mac部署#主题更换"></a></h4><p>主题备选：从git或hexo官网中下载主题到本地</p><p><a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:ikeq/hexo-theme-inside.gita href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:TriDiamond/hexo-theme-obsidian.git</p><p>修改本地主题：</p><p>  1、将下载的主题存放到本地myBlog -&gt; themes中(建议修改主题名，简单好用)</p><p>  2、修改config.yml文件中的theme值，使用主题名</p><h4 id="本地创建新博客">本地创建新博客<a href="2019/12/10/hexo_mac部署#本地创建新博客"></a></h4><p>  ※ 创建新博客文件：</p><pre><code><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"newBlog"</span></span></pre></td></tr></table></div></figure></code></pre><p>  ※ 使用Markdown工具编写文件（eg:Typora(软件)，作业部落(在线)）</p><p>  ※ 通过 <code>hexo g</code>  <code>hexo d</code> 发布到GitHub中</p><h4 id="参考链接：">参考链接：<a href="2019/12/10/hexo_mac部署#参考链接："></a></h4><p><a href="https://www.jianshu.com/p/77db3862595c" target="_blank" rel="noopener">https://www.jianshu.com/p/77db3862595c</a></p><p><a href="https://www.jianshu.com/p/380290deb8f0" target="_blank" rel="noopener">https://www.jianshu.com/p/380290deb8f0</a></p><p><a href="https://www.jianshu.com/p/1c888a6b8297" target="_blank" rel="noopener">https://www.jianshu.com/p/1c888a6b8297</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;搭建个人博客（&lt;a href=&quot;https://wyohoxtan.github.io/）&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://wyohoxtan.github.io/）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mac hexo&lt;/co
      
    
    </summary>
    
    
    
      <category term="myBlog" scheme="http://82u0q0.coding-pages.com/tags/myBlog/"/>
    
  </entry>
  
</feed>
