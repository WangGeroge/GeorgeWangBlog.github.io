<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>闲潭个人博客</title>
  
  <subtitle>wyohoxtan</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-12-12T06:38:17.994Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>闲潭</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo_inside博客主题优化</title>
    <link href="http://yoursite.com/2019/12/10/hexo-inside%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/"/>
    <id>http://yoursite.com/2019/12/10/hexo-inside%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/</id>
    <published>2019-12-10T13:10:31.000Z</published>
    <updated>2019-12-12T06:38:17.994Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Hexo-inside主题优化">Hexo inside主题优化<a href="2019/12/10/hexo-inside博客主题优化#Hexo-inside主题优化"></a></h3><p><code>hexo inside 优化</code></p><hr><h4 id="hexo系列问题">hexo系列问题<a href="2019/12/10/hexo-inside博客主题优化#hexo系列问题"></a></h4><p>※ 部署到github时会删掉README文件</p><p>​    △ 分析：</p><blockquote><p> ① 执行<code>hexo g</code>后，会把source文件里的.md格式的文件渲染为html文件并放到public下面；</p><p> ② 继续执行<code>hexo d</code>后，会将public下面的所有文件提交到对应的XXX.github.io仓库中；</p><p> ③ 由于本地public文件夹无README.md文件，在提交public文件时，github会认为你把README.md文件      删掉了，同时github也会删掉仓库里的README.md文件</p></blockquote><p>   △ 解决：</p><blockquote><p>① 在本地source文件夹内创建一个 README.md</p><p>② 修改Hexo根目录下的_config.yml文件，将skip_render参数的值设置为README.md</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="attr">skip_render:</span> <span class="string">README.md</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="string">//</span>  <span class="string">为什么需要设置这一步呢？</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="string">//</span>  <span class="string">因为你执行hexo</span> <span class="string">g命令时，hexo会默认将source文件里的所有md文件渲染为html文件放到public中，</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="string">//</span>  <span class="string">同时README.md会被渲染为README.html文件放到public文件里</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="string">//</span>  <span class="string">加上这段设置，就是告诉hexo的解析器，你在渲染source文件里的md文件时，跳过README.md文件</span></span></pre></td></tr></table></div></figure></blockquote><h4 id="Inside主题改造">Inside主题改造<a href="2019/12/10/hexo-inside博客主题优化#Inside主题改造"></a></h4><p>※ 博客头像、简介、目录、链接、搜索、主题、字体、加载速度、评论、访问量</p><p><code>config.yml文件改造</code></p><p>​    △ 头像设置</p><blockquote><p>① 在当前主题中source创建img文件夹，将自己头像照片存放到文件夹中</p><p>② 在主题配置文件 _config.yml 文件，设置以下值：</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 头像url</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">avatar:</span> <span class="string">/img/avatar.jpg</span> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">favicon:</span> <span class="string">/img/avatar.jpg</span></span></pre></td></tr></table></div></figure></blockquote><p>​    △ 目录设置</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install --save hexo-generator-feed</span></pre></td></tr></table></div></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Hexo-inside主题优化&quot;&gt;Hexo inside主题优化&lt;a href=&quot;2019/12/10/hexo-inside博客主题优化#Hexo-inside主题优化&quot;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;hexo inside 优化&lt;/code&gt;&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
    
      <category term="hexo主题优化" scheme="http://yoursite.com/tags/hexo%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>hexo_mac部署</title>
    <link href="http://yoursite.com/2019/12/10/hexo_mac%E9%83%A8%E7%BD%B2/"/>
    <id>http://yoursite.com/2019/12/10/hexo_mac%E9%83%A8%E7%BD%B2/</id>
    <published>2019-12-10T11:32:18.000Z</published>
    <updated>2019-12-12T01:37:03.290Z</updated>
    
    <content type="html"><![CDATA[<p>搭建个人博客（<a href="https://wyohoxtan.github.io/）" target="_blank" rel="noopener">https://wyohoxtan.github.io/）</a></p><p><code>mac hexo</code> </p><hr><h4 id="hexo介绍">hexo介绍<a href="2019/12/10/hexo_mac部署#hexo介绍"></a></h4><p>官网：<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">https://hexo.io/zh-cn/</a> </p><p>※ hexo 可以理解为是基于node.js制作的一个博客工具 </p><p>※ hexo 正常来说，不需要部署到我们的服务器上，我们的服务器上保存的，其实是基于在hexo通过markdown编写的文章，然后hexo帮我们生成静态的html页面，然后，将生成的html上传到我们的服务器。简而言之：hexo是个静态页面生成、上传的工具。</p><p>※ 源码结构</p><div class="article-bounded"><div class="article-table"><table><thead><tr><th>文件/文件夹</th><th align="left">说明</th></tr></thead><tbody><tr><td>_config.yml</td><td align="left">配置文件</td></tr><tr><td>public</td><td align="left">生成的静态文件，这个目录最终会发布到服务器</td></tr><tr><td>scaffolds</td><td align="left">一些通用的markdown模板</td></tr><tr><td>source</td><td align="left">编写的markdown文件，_drafts草稿文件，_posts发布的文章</td></tr><tr><td>themes</td><td align="left">博客的模板</td></tr></tbody></table></div></div><h4 id="hexo搭建博客的一般步骤">hexo搭建博客的一般步骤<a href="2019/12/10/hexo_mac部署#hexo搭建博客的一般步骤"></a></h4><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">安装Node.js</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">安装Git</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">安装Hexo</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">安装主题</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">本地运行测试</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">注册github并创建仓库</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">部署到github中</span></pre></td></tr></table></div></figure><h4 id="环境配置">环境配置<a href="2019/12/10/hexo_mac部署#环境配置"></a></h4><p>※ 安装 Git，Node.js, hexo</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检测是否已安装</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">node -v</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">git --version</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 未安装，进行node，git的安装</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第一种方法：</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、执行以下命令安装homebrew</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)</span>"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 2、执行以下命令安装git</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">brew install git</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 3、执行以下命令安装nodejs</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">brew install node</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#第二种方法：</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#1、先安装git</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#git安装包下载地址http://code.google.com/p/git-osx-installer/downloads/list</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#2、安装nodejs</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#依次执行以下命令：</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/joyent/node.git nodejs</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> nodejs</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">./configure</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">make</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">sudo make install</span></pre></td></tr></table></div></figure><p>※ 若已安装，执行安装hexo步骤</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span></pre></td></tr></table></div></figure><p>※创建自己博客的文件夹，初始化hexo博客信息</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在合适的目录下创建一个blog文件夹</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">mkdir myBlog</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入目录</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> myBlog</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化目录</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">hexo init</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#开启本地服务 </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">hexo s</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过浏览器访问：http://localhost:4000</span></span></pre></td></tr></table></div></figure><h4 id="本地博客关联GitHub仓库">本地博客关联GitHub仓库<a href="2019/12/10/hexo_mac部署#本地博客关联GitHub仓库"></a></h4><p>※ 创建GitHub账号及仓库</p><ul><li><p>进入<a href="https://github.com/" target="_blank" rel="noopener">官网</a>注册账号</p></li><li><p>点击右上角“+”，new responsitory 创建GitHub仓库</p><p><font color="red">*</font>创建的responsitory名称应与账号名一致（eg:wyohoxtan.github.io）,否则在deploy后，访问博客网址时会出现404错误</p></li></ul><p>※关联GitHub，免密提交</p>  <figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 用你注册GitHub时的邮箱号，进行秘钥生成</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"xxxxxxx@qq.com"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 系统就会生成一个隐藏文件夹.ssh</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> .ssh</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">ls</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 复制公钥</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">vim id_rsa.pub</span></pre></td></tr></table></div></figure><ul><li>进入GitHub网站，进入setting设置中</li></ul><p><img src="/2019/12/10/hexo_mac%E9%83%A8%E7%BD%B2/ssh_setting.png" alt="ssh—setting" class="article-img"></p><ul><li><img src="https://upload-images.jianshu.io/upload_images/3478485-92b2d4a66901907b.png" alt="ssh—setting"></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/3478485-94a0d1a2f04727f6.png" alt="ssh—setting" class="article-img"></p><ul><li><p>验证是否成功</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span></pre></td></tr></table></div></figure></li></ul><p>※ 找到本地博客文件夹myBlog中的_config.yml文件，修改配置（只换username即可）</p><p><img src="/2019/12/10/hexo_mac%E9%83%A8%E7%BD%B2/configymlPic.png" alt="config.yml图" class="article-img"></p><ul><li><p>安装 hexo-deployer-git插件(不按照，git同步不成功)</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span></pre></td></tr></table></div></figure></li><li><p>终端执行以下命令</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 清除</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">hexo clean</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 产生静态网页</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">hexo g</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 部署到GitHub page上</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">hexo d</span></pre></td></tr></table></div></figure></li></ul><p>※ 通过<a href="http://username.github.io进行访问（eg:[闲潭个人博客](https://wyohoxtan.github.io/archives)）" target="_blank" rel="noopener">http://username.github.io进行访问（eg:[闲潭个人博客](https://wyohoxtan.github.io/archives)）</a></p><h4 id="常见问题分析">常见问题分析<a href="2019/12/10/hexo_mac部署#常见问题分析"></a></h4><p>1、hexo搭建Github博客上传后，网页显示404问题解决方案</p><p>分析：两种原因： ① 创建的GitHub仓库名称和GitHub账号的用户名称不同，导致无法获取。具体分析步骤可参考<a href="https://blog.csdn.net/dajian790626/article/details/78595684" target="_blank" rel="noopener">此链接</a></p><p>​                        ② 配置config.yml文件时，type: git中间必须有个空格！！！（书写格式问题）</p><p>2、配置的时候 hexo d 后报错”ERROR Deployer not found: git“</p><p>解决方法：安装插件hexo-deployer-git即可</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span></pre></td></tr></table></div></figure><p>3、Permanently added the RSA host key for IP address ‘52.74.223.119’ to the list of known hosts.</p><p>解决：<a href="https://blog.csdn.net/zhoucheng05_13/article/details/52831703" target="_blank" rel="noopener">https://blog.csdn.net/zhoucheng05_13/article/details/52831703</a></p><p>4、<a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>: Permission denied (publickey).fatal: Could not read from remote repository.</p><p>原因：客户端与服务端的ssh key不匹配</p><p>解决：删除GitHub中的ssh秘钥，重新本地生成后设置到GitHub秘钥中</p><p>5、同步过程中存在问题:</p><p><img src="/2019/12/10/hexo_mac%E9%83%A8%E7%BD%B2/git_error.png" alt="git_error" class="article-img"></p><p>解决：按照上述提示，输入 </p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">git config --global user.email <span class="string">"you@example.com"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"Your Name"</span></span></pre></td></tr></table></div></figure><p><strong>6、编写博客上传后，本地图片无法在GitHub上显示</strong></p><p>※ 修改config.yml文件配置：将文件中的post_asset_folder置为true</p><p><img src="/2019/12/10/hexo_mac%E9%83%A8%E7%BD%B2/createFolderAndSource.png" alt="upload_pic" class="article-img"></p><p>※ 根目录下执行：插件安装</p><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span></pre></td></tr></table></div></figure><p>※ 创建博客文件后，会同时生成文件名相同的文件夹名称，将需要使用到的资源文件存放到本文件夹内</p><p>※ 书写博客中的图片文件路径 </p><p><img src="/2019/12/10/hexo_mac%E9%83%A8%E7%BD%B2/pic_path.png" alt="upload_pic" class="article-img"></p><p>上述操作后，仍存在图片无法显示的问题:</p><ul><li>通过F12，得知当前的图片路径无法加载，具体原因是文件名存在空格等非法字符，导致图片路径存在问题</li><li>在进行本博客的编写过程中，出现的各类资源文件信息，尽量全部存放到由hexo自动生成的同名文件夹中</li></ul><p>7、中文乱码的问题：</p><p>※ 修改config.yml文件，设置 language值   </p><p>​    anguage: zh-Hans 或者 anguage: zh-CN </p><p>​    <font color="red">*</font>取决于你的主题theme目录下的language目录下有zh-Hans.yml还是zh-CN.yml</p><p>※ 编辑器编码确定</p><h4 id="主题更换">主题更换<a href="2019/12/10/hexo_mac部署#主题更换"></a></h4><p>主题备选：从git或hexo官网中下载主题到本地</p><p><a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:ikeq/hexo-theme-inside.gita href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:TriDiamond/hexo-theme-obsidian.git</p><p>修改本地主题：</p><p>  1、将下载的主题存放到本地myBlog -&gt; themes中(建议修改主题名，简单好用)</p><p>  2、修改config.yml文件中的theme值，使用主题名</p><h4 id="本地创建新博客">本地创建新博客<a href="2019/12/10/hexo_mac部署#本地创建新博客"></a></h4><p>  ※ 创建新博客文件：</p><pre><code><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"newBlog"</span></span></pre></td></tr></table></div></figure></code></pre><p>  ※ 使用Markdown工具编写文件（eg:Typora(软件)，作业部落(在线)）</p><p>  ※ 通过 <code>hexo g</code>  <code>hexo d</code> 发布到GitHub中</p><h4 id="参考链接：">参考链接：<a href="2019/12/10/hexo_mac部署#参考链接："></a></h4><p><a href="https://www.jianshu.com/p/77db3862595c" target="_blank" rel="noopener">https://www.jianshu.com/p/77db3862595c</a></p><p><a href="https://www.jianshu.com/p/380290deb8f0" target="_blank" rel="noopener">https://www.jianshu.com/p/380290deb8f0</a></p><p><a href="https://www.jianshu.com/p/1c888a6b8297" target="_blank" rel="noopener">https://www.jianshu.com/p/1c888a6b8297</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;搭建个人博客（&lt;a href=&quot;https://wyohoxtan.github.io/）&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://wyohoxtan.github.io/）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mac hexo&lt;/co
      
    
    </summary>
    
    
    
      <category term="myBlog" scheme="http://yoursite.com/tags/myBlog/"/>
    
  </entry>
  
  <entry>
    <title>闲潭杂记</title>
    <link href="http://yoursite.com/2019/11/27/%E8%A6%AA%E5%95%9F/"/>
    <id>http://yoursite.com/2019/11/27/%E8%A6%AA%E5%95%9F/</id>
    <published>2019-11-27T08:09:24.677Z</published>
    <updated>2019-12-12T03:30:02.409Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to my miscellany!</p><h2 id="Quick-Start">Quick Start<a href="2019/11/27/親啟#Quick-Start"></a></h2><h3 id="Mac解决终端显示乱码">Mac解决终端显示乱码<a href="2019/11/27/親啟#Mac解决终端显示乱码"></a></h3><p>※ 打开终端的偏好设置</p><p>※ 描述文件 —&gt; Basic —&gt; 高级 —&gt; 文本编码 改为Unicode（UTF-8）</p><h3 id="Yaml与Yml的区别">Yaml与Yml的区别<a href="2019/11/27/親啟#Yaml与Yml的区别"></a></h3><p><font color="red">*</font> YML文件格式是YAML (YAML Aint Markup Language)编写的文件格式</p><p>   More info: <a href="http://blog.sina.com.cn/s/blog_53ab41fd0102whll.html" target="_blank" rel="noopener">参考链接</a></p><h3 id="Generate-static-files">Generate static files<a href="2019/11/27/親啟#Generate-static-files"></a></h3><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo generate</span></pre></td></tr></table></div></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites<a href="2019/11/27/親啟#Deploy-to-remote-sites"></a></h3><figure class="highlight"><div><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span></pre></td></tr></table></div></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to my miscellany!&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;Quick Start&lt;a href=&quot;2019/11/27/親啟#Quick-Start&quot;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&quot;Mac解决终端显示乱码&quot;&gt;Mac解决终端显示
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
